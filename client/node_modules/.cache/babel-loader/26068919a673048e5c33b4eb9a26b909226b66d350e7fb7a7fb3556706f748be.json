{"ast":null,"code":"\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./productadmin.css\";\n// import emailjs from \"@emailjs/browser\";\n\n// function OrderList() {\n//   const [orders, setOrders] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [showEmailForm, setShowEmailForm] = useState(false);\n//   const form = useRef();\n\n//   useEffect(() => {\n//     // Fetch orders when the component mounts\n//     fetch(\"http://localhost:3003/order/orders\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setOrders(data); // Set fetched orders to state\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching orders:\", error);\n//         setError(\"Failed to fetch orders. Please try again later.\");\n//       });\n//   }, []);\n\n//   const handleAccept = (orderId) => {\n//     console.log(`Accepting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"accepted\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order accepted:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//         setSelectedOrder(data);\n//         setShowEmailForm(true);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error accepting order:\", error);\n//       });\n//   };\n\n//   const handleReject = (orderId) => {\n//     console.log(`Rejecting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"rejected\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order rejected:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error rejecting order:\", error);\n//       });\n//   };\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm(\n//         \"service_7v4vmve\",\n//         \"template_gswksyh\",\n//         form.current,\n//         \"hpy_Ow2NKTCTlRRDq\"\n//       )\n//       .then(\n//         () => {\n//           console.log(\"Email sent successfully!\");\n//           setShowEmailForm(false);\n//         },\n//         (error) => {\n//           console.log(\"Failed to send email...\", error.text);\n//         }\n//       );\n//   };\n\n//   return (\n//     <div>\n//       <h1 className=\"order\">Order List</h1>\n//       {error && <p>{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Contact Number</th>\n//             <th>Address</th>\n//             <th>Deadline</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map((order) => (\n//             <tr key={order._id}>\n//               <td>{order.name}</td>\n//               <td>{order.email}</td>\n//               <td>{order.contactNumber}</td>\n//               <td>{order.address}</td>\n//               <td>{new Date(order.deadline).toLocaleDateString()}</td>\n//               <td>\n//                 <button\n//                   className=\"accept\"\n//                   onClick={() => handleAccept(order._id)}\n//                 >\n//                   Accept\n//                 </button>\n//                 <button\n//                   className=\"reject\"\n//                   onClick={() => handleReject(order._id)}\n//                 >\n//                   Reject\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showEmailForm && (\n//         <form ref={form} onSubmit={sendEmail}>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"user_name\"\n//             defaultValue={selectedOrder ? selectedOrder.name : \"\"}\n//             readOnly\n//           />\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"user_email\"\n//             defaultValue={selectedOrder ? selectedOrder.email : \"\"}\n//             readOnly\n//           />\n//           <label>Message</label>\n//           <textarea name=\"message\"></textarea>\n//           <input type=\"submit\" value=\"Send\" />\n//         </form>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default OrderList;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./productadmin.css\";\n// import emailjs from \"@emailjs/browser\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// function OrderList() {\n//   const [orders, setOrders] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [showEmailForm, setShowEmailForm] = useState(false);\n//   const form = useRef();\n\n//   useEffect(() => {\n//     // Fetch orders when the component mounts\n//     fetchOrders();\n//   }, []);\n\n//   const fetchOrders = () => {\n//     fetch(\"http://localhost:3003/order/orders\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setOrders(data); // Set fetched orders to state\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching orders:\", error);\n//         setError(\"Failed to fetch orders. Please try again later.\");\n//       });\n//   };\n\n//   const handleAccept = (orderId) => {\n//     console.log(`Accepting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"accepted\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order accepted:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//         setSelectedOrder(data);\n//         setShowEmailForm(true);\n//         toast.success(\"Order accepted successfully!\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error accepting order:\", error);\n//         toast.error(\"Failed to accept the order.\");\n//       });\n//   };\n//   const handleReject = (orderId) => {\n//     console.log(`Rejecting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",  // Using PATCH method for partial update\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"rejected\" }),  // Updating only the status field\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Failed to reject order\");  // Throw error if response is not ok\n//         }\n//         return response.json();  // Parse response as JSON\n//       })\n//       .then((data) => {\n//         console.log(\"Order rejected:\", data);\n//         // Update local state or UI as needed\n//         toast.success(\"Order rejected successfully!\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error rejecting order:\", error);\n//         toast.error(\"Failed to reject the order.\");\n//       });\n//   };\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm(\n//         \"service_7v4vmve\",\n//         \"template_gswksyh\",\n//         form.current,\n//         \"hpy_Ow2NKTCTlRRDq\"\n//       )\n//       .then(\n//         () => {\n//           console.log(\"Email sent successfully!\");\n//           setShowEmailForm(false);\n//         },\n//         (error) => {\n//           console.log(\"Failed to send email...\", error.text);\n//         }\n//       );\n//   };\n\n//   return (\n//     <div>\n//       <h1 className=\"order\">Order List</h1>\n//       {error && <p>{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Contact Number</th>\n//             <th>Address</th>\n//             <th>Deadline</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map((order) => (\n//             <tr key={order._id}>\n//               <td>{order.name}</td>\n//               <td>{order.email}</td>\n//               <td>{order.contactNumber}</td>\n//               <td>{order.address}</td>\n//               <td>{new Date(order.deadline).toLocaleDateString()}</td>\n//               <td>\n//                 <button\n//                   className=\"accept\"\n//                   onClick={() => handleAccept(order._id)}\n//                 >\n//                   Accept\n//                 </button>\n//                 <button\n//                   className=\"reject\"\n//                   onClick={() => handleReject(order._id)}\n//                 >\n//                   Reject\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showEmailForm && (\n//         <form ref={form} onSubmit={sendEmail}>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"user_name\"\n//             defaultValue={selectedOrder ? selectedOrder.name : \"\"}\n//             readOnly\n//           />\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"user_email\"\n//             defaultValue={selectedOrder ? selectedOrder.email : \"\"}\n//             readOnly\n//           />\n//           <label>Message</label>\n//           <textarea name=\"message\"></textarea>\n//           <input type=\"submit\" value=\"Send\" />\n//         </form>\n//       )}\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// export default OrderList;","map":{"version":3,"names":[],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./productadmin.css\";\n// import emailjs from \"@emailjs/browser\";\n\n// function OrderList() {\n//   const [orders, setOrders] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [showEmailForm, setShowEmailForm] = useState(false);\n//   const form = useRef();\n\n//   useEffect(() => {\n//     // Fetch orders when the component mounts\n//     fetch(\"http://localhost:3003/order/orders\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setOrders(data); // Set fetched orders to state\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching orders:\", error);\n//         setError(\"Failed to fetch orders. Please try again later.\");\n//       });\n//   }, []);\n\n//   const handleAccept = (orderId) => {\n//     console.log(`Accepting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"accepted\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order accepted:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//         setSelectedOrder(data);\n//         setShowEmailForm(true);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error accepting order:\", error);\n//       });\n//   };\n\n//   const handleReject = (orderId) => {\n//     console.log(`Rejecting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"rejected\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order rejected:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error rejecting order:\", error);\n//       });\n//   };\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm(\n//         \"service_7v4vmve\",\n//         \"template_gswksyh\",\n//         form.current,\n//         \"hpy_Ow2NKTCTlRRDq\"\n//       )\n//       .then(\n//         () => {\n//           console.log(\"Email sent successfully!\");\n//           setShowEmailForm(false);\n//         },\n//         (error) => {\n//           console.log(\"Failed to send email...\", error.text);\n//         }\n//       );\n//   };\n\n//   return (\n//     <div>\n//       <h1 className=\"order\">Order List</h1>\n//       {error && <p>{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Contact Number</th>\n//             <th>Address</th>\n//             <th>Deadline</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map((order) => (\n//             <tr key={order._id}>\n//               <td>{order.name}</td>\n//               <td>{order.email}</td>\n//               <td>{order.contactNumber}</td>\n//               <td>{order.address}</td>\n//               <td>{new Date(order.deadline).toLocaleDateString()}</td>\n//               <td>\n//                 <button\n//                   className=\"accept\"\n//                   onClick={() => handleAccept(order._id)}\n//                 >\n//                   Accept\n//                 </button>\n//                 <button\n//                   className=\"reject\"\n//                   onClick={() => handleReject(order._id)}\n//                 >\n//                   Reject\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showEmailForm && (\n//         <form ref={form} onSubmit={sendEmail}>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"user_name\"\n//             defaultValue={selectedOrder ? selectedOrder.name : \"\"}\n//             readOnly\n//           />\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"user_email\"\n//             defaultValue={selectedOrder ? selectedOrder.email : \"\"}\n//             readOnly\n//           />\n//           <label>Message</label>\n//           <textarea name=\"message\"></textarea>\n//           <input type=\"submit\" value=\"Send\" />\n//         </form>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default OrderList;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./productadmin.css\";\n// import emailjs from \"@emailjs/browser\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// function OrderList() {\n//   const [orders, setOrders] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [showEmailForm, setShowEmailForm] = useState(false);\n//   const form = useRef();\n\n//   useEffect(() => {\n//     // Fetch orders when the component mounts\n//     fetchOrders();\n//   }, []);\n\n//   const fetchOrders = () => {\n//     fetch(\"http://localhost:3003/order/orders\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setOrders(data); // Set fetched orders to state\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching orders:\", error);\n//         setError(\"Failed to fetch orders. Please try again later.\");\n//       });\n//   };\n\n//   const handleAccept = (orderId) => {\n//     console.log(`Accepting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"accepted\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order accepted:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//         setSelectedOrder(data);\n//         setShowEmailForm(true);\n//         toast.success(\"Order accepted successfully!\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error accepting order:\", error);\n//         toast.error(\"Failed to accept the order.\");\n//       });\n//   };\n//   const handleReject = (orderId) => {\n//     console.log(`Rejecting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",  // Using PATCH method for partial update\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"rejected\" }),  // Updating only the status field\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Failed to reject order\");  // Throw error if response is not ok\n//         }\n//         return response.json();  // Parse response as JSON\n//       })\n//       .then((data) => {\n//         console.log(\"Order rejected:\", data);\n//         // Update local state or UI as needed\n//         toast.success(\"Order rejected successfully!\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error rejecting order:\", error);\n//         toast.error(\"Failed to reject the order.\");\n//       });\n//   };\n  \n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm(\n//         \"service_7v4vmve\",\n//         \"template_gswksyh\",\n//         form.current,\n//         \"hpy_Ow2NKTCTlRRDq\"\n//       )\n//       .then(\n//         () => {\n//           console.log(\"Email sent successfully!\");\n//           setShowEmailForm(false);\n//         },\n//         (error) => {\n//           console.log(\"Failed to send email...\", error.text);\n//         }\n//       );\n//   };\n\n//   return (\n//     <div>\n//       <h1 className=\"order\">Order List</h1>\n//       {error && <p>{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Contact Number</th>\n//             <th>Address</th>\n//             <th>Deadline</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map((order) => (\n//             <tr key={order._id}>\n//               <td>{order.name}</td>\n//               <td>{order.email}</td>\n//               <td>{order.contactNumber}</td>\n//               <td>{order.address}</td>\n//               <td>{new Date(order.deadline).toLocaleDateString()}</td>\n//               <td>\n//                 <button\n//                   className=\"accept\"\n//                   onClick={() => handleAccept(order._id)}\n//                 >\n//                   Accept\n//                 </button>\n//                 <button\n//                   className=\"reject\"\n//                   onClick={() => handleReject(order._id)}\n//                 >\n//                   Reject\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showEmailForm && (\n//         <form ref={form} onSubmit={sendEmail}>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"user_name\"\n//             defaultValue={selectedOrder ? selectedOrder.name : \"\"}\n//             readOnly\n//           />\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"user_email\"\n//             defaultValue={selectedOrder ? selectedOrder.email : \"\"}\n//             readOnly\n//           />\n//           <label>Message</label>\n//           <textarea name=\"message\"></textarea>\n//           <input type=\"submit\" value=\"Send\" />\n//         </form>\n//       )}\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// export default OrderList;\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}