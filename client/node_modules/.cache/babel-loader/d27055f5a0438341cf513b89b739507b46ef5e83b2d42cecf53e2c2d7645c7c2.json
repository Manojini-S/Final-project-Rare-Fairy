{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { toast, ToastContainer } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./Dashboard.css\";\n// import \"./productadmin.css\";\n// import customer02 from \"../Assets/customer02.jpeg\";\n// import Modal from \"../Components/Modal\";\n// import ProductForm from \"./Addproduct\";\n\n// const AdminDashboard = () => {\n//   const [search, setSearch] = useState(\"\");\n//   const [showModal, setShowModal] = useState(false);\n//   const [usersCount, setUsersCount] = useState(0);\n//   const [ordersCount, setOrdersCount] = useState(0);\n//   const [productsCount, setProductsCount] = useState(0);\n//   const [orders, setOrders] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [showEmailForm, setShowEmailForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchUsersCount();\n//     fetchOrdersCount();\n//     fetchProductsCount();\n//     fetchOrders();\n//   }, []);\n\n//   const API_BASE_URL = \"http://localhost:3003\";\n\n//   const fetchUsersCount = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/user/count`);\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n//       const data = await response.json();\n//       setUsersCount(data.count);\n//     } catch (error) {\n//       console.error(\"Error fetching users count:\", error);\n//     }\n//   };\n\n//   const fetchOrdersCount = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/order/count`);\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n//       const data = await response.json();\n//       setOrdersCount(data.count);\n//     } catch (error) {\n//       console.error(\"Error fetching orders count:\", error);\n//     }\n//   };\n\n//   const fetchProductsCount = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/image/count`);\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n//       const data = await response.json();\n//       setProductsCount(data.count);\n//     } catch (error) {\n//       console.error(\"Error fetching products count:\", error);\n//     }\n//   };\n\n//   const fetchOrders = () => {\n//     fetch(`${API_BASE_URL}/order/orders`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setOrders(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching orders:\", error);\n//         setError(\"Failed to fetch orders. Please try again later.\");\n//       });\n//   };\n\n//   const handleAccept = (orderId) => {\n//     fetch(`${API_BASE_URL}/orders/${orderId}/accept`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"accepted\" }),\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Failed to accept order\");\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setOrders(orders.map((order) => (order._id === orderId ? data : order)));\n//         setSelectedOrder(data);\n//         setShowEmailForm(true);\n//         toast.success(\"Order accepted successfully!\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error accepting order:\", error);\n//         toast.error(\"Failed to accept the order.\");\n//       });\n//   };\n\n//   const handleReject = (orderId) => {\n//     fetch(`${API_BASE_URL}/orders/${orderId}/reject`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"rejected\" }),\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Failed to reject order\");\n//         }\n//         setOrders(orders.filter((order) => order._id !== orderId));\n//         toast.success(\"Order rejected successfully!\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error rejecting order:\", error);\n//         toast.error(\"Failed to reject the order.\");\n//       });\n//   };\n\n//   const handleSearchChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     toast.success(\"Logout successfully!\");\n//   };\n\n//   const handleShow = () => setShowModal(true);\n//   const handleClose = () => setShowModal(false);\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"sidebar\">\n//           <div className=\"sidebar-header\">\n//             <h2>Rare Fairy</h2>\n//           </div>\n//           <ul className=\"sidebar-menu\">\n//             <li>\n//               <Link to=\"/Dashboard\">\n//                 <i className=\"fas fa-tachometer-alt\"></i> Dashboard\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/OrderList\">\n//                 <i className=\"fas fa-shopping-cart\"></i> Order\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/Admin\">\n//                 <i className=\"fas fa-users\"></i> Users\n//               </Link>\n//             </li>\n//             <li>\n//               <a href=\"/product\">\n//                 <i className=\"fas fa-box-open\"></i> Product{\" \"}\n//               </a>\n//             </li>\n//             <li>\n//               <Link to=\"/payment\">\n//                 <i className=\"fas fa-credit-card\"></i> Payment\n//               </Link>\n//             </li>\n//             <li>\n//               <Link className=\"a\" to=\"/login\" onClick={handleLogout}>\n//                 <i className=\"fas fa-sign-out-alt\"></i> Logout\n//               </Link>\n//             </li>\n//           </ul>\n//         </div>\n//         <div className=\"main-content\">\n//           <div className=\"header\">\n//             <div className=\"header-left\">\n//               <h1>Welcome to Admin</h1>\n//             </div>\n//             <div className=\"header-right\">\n//               <div className=\"search-bar\">\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Search...\"\n//                   value={search}\n//                   onChange={handleSearchChange}\n//                 />\n//               </div>\n//               <div className=\"notification\">\n//                 <i className=\"fas fa-bell\"></i>\n//               </div>\n//               <div className=\"profile\">\n//                 <img src={customer02} alt=\"Profile\" />\n//                 <span>Manojini Suthakar</span>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"content\">\n//             <div className=\"card-dash\">\n//               <h3>Users</h3>\n//               <p>Number of active users: {usersCount}</p>\n//             </div>\n//             <div className=\"card-dash\">\n//               <h3>Order</h3>\n//               <p>Number of orders: {ordersCount}</p>\n//             </div>\n//             <div className=\"card-dash\">\n//               <Link to=\"/Addproduct\" onClick={handleShow}>\n//                 <h3>Add product</h3>\n//                 <p>Number of products: {productsCount}</p>\n//               </Link>\n//             </div>\n//           </div>\n//           <h1 className=\"order\">Order List</h1>\n//           {error && <p>{error}</p>}\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Name</th>\n//                 <th>Email</th>\n//                 <th>Contact Number</th>\n//                 <th>Address</th>\n//                 <th>Deadline</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {orders.map((order) => (\n//                 <tr key={order._id}>\n//                   <td>{order.name}</td>\n//                   <td>{order.email}</td>\n//                   <td>{order.contactNumber}</td>\n//                   <td>{order.address}</td>\n//                   <td>{new Date(order.deadline).toLocaleDateString()}</td>\n//                   <td>\n//                     <button\n//                       className=\"accept\"\n//                       onClick={() => handleAccept(order._id)}\n//                     >\n//                       Accept\n//                     </button>\n//                     <button\n//                       className=\"reject\"\n//                       onClick={() => handleReject(order._id)}\n//                     >\n//                       Reject\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//       <Modal show={showModal} handleClose={handleClose}>\n//         <ProductForm />\n//       </Modal>\n//       <ToastContainer />\n//     </>\n//   );\n// };\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js"],"sourcesContent":["\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { toast, ToastContainer } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./Dashboard.css\";\n// import \"./productadmin.css\";\n// import customer02 from \"../Assets/customer02.jpeg\";\n// import Modal from \"../Components/Modal\";\n// import ProductForm from \"./Addproduct\";\n\n// const AdminDashboard = () => {\n//   const [search, setSearch] = useState(\"\");\n//   const [showModal, setShowModal] = useState(false);\n//   const [usersCount, setUsersCount] = useState(0);\n//   const [ordersCount, setOrdersCount] = useState(0);\n//   const [productsCount, setProductsCount] = useState(0);\n//   const [orders, setOrders] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [showEmailForm, setShowEmailForm] = useState(false);\n\n//   useEffect(() => {\n//     fetchUsersCount();\n//     fetchOrdersCount();\n//     fetchProductsCount();\n//     fetchOrders();\n//   }, []);\n\n//   const API_BASE_URL = \"http://localhost:3003\";\n\n//   const fetchUsersCount = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/user/count`);\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n//       const data = await response.json();\n//       setUsersCount(data.count);\n//     } catch (error) {\n//       console.error(\"Error fetching users count:\", error);\n//     }\n//   };\n\n//   const fetchOrdersCount = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/order/count`);\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n//       const data = await response.json();\n//       setOrdersCount(data.count);\n//     } catch (error) {\n//       console.error(\"Error fetching orders count:\", error);\n//     }\n//   };\n\n//   const fetchProductsCount = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/image/count`);\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n//       const data = await response.json();\n//       setProductsCount(data.count);\n//     } catch (error) {\n//       console.error(\"Error fetching products count:\", error);\n//     }\n//   };\n\n//   const fetchOrders = () => {\n//     fetch(`${API_BASE_URL}/order/orders`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setOrders(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching orders:\", error);\n//         setError(\"Failed to fetch orders. Please try again later.\");\n//       });\n//   };\n\n//   const handleAccept = (orderId) => {\n//     fetch(`${API_BASE_URL}/orders/${orderId}/accept`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"accepted\" }),\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Failed to accept order\");\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setOrders(orders.map((order) => (order._id === orderId ? data : order)));\n//         setSelectedOrder(data);\n//         setShowEmailForm(true);\n//         toast.success(\"Order accepted successfully!\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error accepting order:\", error);\n//         toast.error(\"Failed to accept the order.\");\n//       });\n//   };\n\n//   const handleReject = (orderId) => {\n//     fetch(`${API_BASE_URL}/orders/${orderId}/reject`, {\n//       method: \"PUT\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"rejected\" }),\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Failed to reject order\");\n//         }\n//         setOrders(orders.filter((order) => order._id !== orderId));\n//         toast.success(\"Order rejected successfully!\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error rejecting order:\", error);\n//         toast.error(\"Failed to reject the order.\");\n//       });\n//   };\n\n//   const handleSearchChange = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     toast.success(\"Logout successfully!\");\n//   };\n\n//   const handleShow = () => setShowModal(true);\n//   const handleClose = () => setShowModal(false);\n\n//   return (\n//     <>\n//       <div className=\"dashboard\">\n//         <div className=\"sidebar\">\n//           <div className=\"sidebar-header\">\n//             <h2>Rare Fairy</h2>\n//           </div>\n//           <ul className=\"sidebar-menu\">\n//             <li>\n//               <Link to=\"/Dashboard\">\n//                 <i className=\"fas fa-tachometer-alt\"></i> Dashboard\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/OrderList\">\n//                 <i className=\"fas fa-shopping-cart\"></i> Order\n//               </Link>\n//             </li>\n//             <li>\n//               <Link to=\"/Admin\">\n//                 <i className=\"fas fa-users\"></i> Users\n//               </Link>\n//             </li>\n//             <li>\n//               <a href=\"/product\">\n//                 <i className=\"fas fa-box-open\"></i> Product{\" \"}\n//               </a>\n//             </li>\n//             <li>\n//               <Link to=\"/payment\">\n//                 <i className=\"fas fa-credit-card\"></i> Payment\n//               </Link>\n//             </li>\n//             <li>\n//               <Link className=\"a\" to=\"/login\" onClick={handleLogout}>\n//                 <i className=\"fas fa-sign-out-alt\"></i> Logout\n//               </Link>\n//             </li>\n//           </ul>\n//         </div>\n//         <div className=\"main-content\">\n//           <div className=\"header\">\n//             <div className=\"header-left\">\n//               <h1>Welcome to Admin</h1>\n//             </div>\n//             <div className=\"header-right\">\n//               <div className=\"search-bar\">\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Search...\"\n//                   value={search}\n//                   onChange={handleSearchChange}\n//                 />\n//               </div>\n//               <div className=\"notification\">\n//                 <i className=\"fas fa-bell\"></i>\n//               </div>\n//               <div className=\"profile\">\n//                 <img src={customer02} alt=\"Profile\" />\n//                 <span>Manojini Suthakar</span>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"content\">\n//             <div className=\"card-dash\">\n//               <h3>Users</h3>\n//               <p>Number of active users: {usersCount}</p>\n//             </div>\n//             <div className=\"card-dash\">\n//               <h3>Order</h3>\n//               <p>Number of orders: {ordersCount}</p>\n//             </div>\n//             <div className=\"card-dash\">\n//               <Link to=\"/Addproduct\" onClick={handleShow}>\n//                 <h3>Add product</h3>\n//                 <p>Number of products: {productsCount}</p>\n//               </Link>\n//             </div>\n//           </div>\n//           <h1 className=\"order\">Order List</h1>\n//           {error && <p>{error}</p>}\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Name</th>\n//                 <th>Email</th>\n//                 <th>Contact Number</th>\n//                 <th>Address</th>\n//                 <th>Deadline</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {orders.map((order) => (\n//                 <tr key={order._id}>\n//                   <td>{order.name}</td>\n//                   <td>{order.email}</td>\n//                   <td>{order.contactNumber}</td>\n//                   <td>{order.address}</td>\n//                   <td>{new Date(order.deadline).toLocaleDateString()}</td>\n//                   <td>\n//                     <button\n//                       className=\"accept\"\n//                       onClick={() => handleAccept(order._id)}\n//                     >\n//                       Accept\n//                     </button>\n//                     <button\n//                       className=\"reject\"\n//                       onClick={() => handleReject(order._id)}\n//                     >\n//                       Reject\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//       <Modal show={showModal} handleClose={handleClose}>\n//         <ProductForm />\n//       </Modal>\n//       <ToastContainer />\n//     </>\n//   );\n// };\n\n// export default AdminDashboard;\n"],"mappings":";;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}