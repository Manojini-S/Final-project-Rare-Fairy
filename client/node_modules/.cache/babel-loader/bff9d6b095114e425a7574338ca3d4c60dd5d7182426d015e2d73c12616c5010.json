{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/Addproduct.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./Addproduct.css\";\n// import Navbar from \"../Components/Navbar\";\n\n// const ProductForm = () => {\n// \tconst [productName, setProductName] = useState(\"\");\n// \tconst [description, setDescription] = useState(\"\");\n// \tconst [categoryName, setCategoryName] = useState(\"\");\n// \tconst [photo, setPhoto] = useState(null);\n// \tconst [errors, setErrors] = useState({});\n// \tconst [categories, setCategories] = useState([]);\n\n// \tconst dummyCategories = [\n// \t\t{ id: 1, name: \"Emproidry\" },\n// \t\t{ id: 2, name: \"Salwar designs\" },\n// \t\t{ id: 3, name: \"Bridel\" },\n// \t\t{ id: 4, name: \"Zardosi design\" },\n// \t\t{ id: 5, name: \"Legenha designs\" },\n// \t\t{ id: 5, name: \"Simple blouse designs\" },\n// \t];\n\n// \tuseEffect(() => {\n\n// \t\tsetCategories(dummyCategories);\n// \t}, []);\n\n// \tconst validate = () => {\n// \t\tconst newErrors = {};\n// \t\tif (!productName) newErrors.productName = \"Product Name is required\";\n// \t\tif (!description) newErrors.description = \"Description is required\";\n// \t\tif (!categoryName) newErrors.categoryName = \"Category Name is required\";\n// \t\tif (!photo) newErrors.photo = \"Photo is required\";\n// \t\treturn newErrors;\n// \t};\n\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\tconst newErrors = validate();\n// \t\tif (Object.keys(newErrors).length > 0) {\n// \t\t\tsetErrors(newErrors);\n// \t\t\treturn;\n// \t\t}\n\n// \t\tconst formData = new FormData();\n// \t\tformData.append(\"ProductName\", productName);\n// \t\tformData.append(\"Description\", description);\n// \t\tformData.append(\"CategoryName\", categoryName);\n// \t\tformData.append(\"photo\", photo);\n\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"http://localhost:3003/image/upload\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\tbody: formData,\n// \t\t\t});\n\n// \t\t\tif (!response.ok) {\n// \t\t\t\tconst errorText = await response.text();\n// \t\t\t\tthrow new Error(\n// \t\t\t\t\t`HTTP error! Status: ${response.status}, Message: ${errorText}`\n// \t\t\t\t);\n// \t\t\t}\n\n// \t\t\tconst data = await response.json();\n// \t\t\ttoast.success(\"Product added successfully!\");\n\n// \t\t\t// Clear the form\n// \t\t\tsetProductName(\"\");\n// \t\t\tsetDescription(\"\");\n// \t\t\tsetCategoryName(\"\");\n// \t\t\tsetPhoto(null);\n// \t\t\tsetErrors({});\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error:\", error);\n// \t\t\ttoast.error(\"Failed to add product. Please try again.\");\n// \t\t}\n// \t};\n\n// \treturn (\n// \t\t<>\n// \t\t\t<Navbar />\n\n// \t\t\t<div className=\"product-form-container\">\n// \t\t\t\t<ToastContainer />\n\n// \t\t\t\t<h2 className=\"add\">Add Product</h2>\n// \t\t\t\t<form onSubmit={handleSubmit} className=\"product-form\">\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"categoryName\">Category Name:</label>\n// \t\t\t\t\t\t<select\n// \t\t\t\t\t\t\tid=\"categoryName\"\n// \t\t\t\t\t\t\tvalue={categoryName}\n// \t\t\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<option value=\"\">Select category</option>\n// \t\t\t\t\t\t\t{categories.map((category) => (\n// \t\t\t\t\t\t\t\t<option key={category.id} value={category.name}>\n// \t\t\t\t\t\t\t\t\t{category.name}\n// \t\t\t\t\t\t\t\t</option>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</select>\n// \t\t\t\t\t\t{errors.categoryName && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.categoryName}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"productName\">Product Name:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tid=\"productName\"\n// \t\t\t\t\t\t\tvalue={productName}\n// \t\t\t\t\t\t\tonChange={(e) => setProductName(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tplaceholder=\"Enter product name\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.productName && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.productName}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"description\">Description:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tid=\"description\"\n// \t\t\t\t\t\t\tvalue={description}\n// \t\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tplaceholder=\"Enter description\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.description && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.description}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"photo\">Photo:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"file\"\n// \t\t\t\t\t\t\tid=\"photo\"\n// \t\t\t\t\t\t\tonChange={(e) => setPhoto(e.target.files[0])}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.photo && <span className=\"error\">{errors.photo}</span>}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"submit\" className=\"btn-submit\">\n// \t\t\t\t\t\tAdd Product\n// \t\t\t\t\t</button>\n// \t\t\t\t</form>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n// };\n\n// export default ProductForm;\n\n// src/AddProduct.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProduct = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [stock, setStock] = useState('');\n  const [categoryName, setCategoryName] = useState('');\n  const [errors, setErrors] = useState({});\n  const validateForm = () => {\n    const newErrors = {};\n    if (!name) newErrors.name = 'Name is required';\n    if (!description) newErrors.description = 'Description is required';\n    if (!price) newErrors.price = 'Price is required';\n    if (!stock) newErrors.stock = 'Stock is required';\n    if (!categoryName) newErrors.categoryName = 'Category name is required';\n    return newErrors;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newErrors = validateForm();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    const product = {\n      name,\n      description,\n      price: parseFloat(price),\n      stock: parseInt(stock),\n      categoryName\n    };\n    try {\n      await axios.post('http://localhost:8000/api/products/', product);\n      alert('Product added successfully');\n      // Clear form fields\n      setName('');\n      setDescription('');\n      setPrice('');\n      setStock('');\n      setCategoryName('');\n      setErrors({});\n    } catch (error) {\n      console.error('There was an error adding the product!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error text-danger\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error text-danger\",\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"price\",\n          value: price,\n          onChange: e => setPrice(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), errors.price && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error text-danger\",\n          children: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stock\",\n          children: \"Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"stock\",\n          value: stock,\n          onChange: e => setStock(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), errors.stock && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error text-danger\",\n          children: errors.stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categoryName\",\n          children: \"Category Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"categoryName\",\n          value: categoryName,\n          onChange: e => setCategoryName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), errors.categoryName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error text-danger\",\n          children: errors.categoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(AddProduct, \"PoKBXybQjg94fvmWBg8FAigcgRw=\");\n_c = AddProduct;\nexport default AddProduct;\nvar _c;\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddProduct","_s","name","setName","description","setDescription","price","setPrice","stock","setStock","categoryName","setCategoryName","errors","setErrors","validateForm","newErrors","handleSubmit","event","preventDefault","Object","keys","length","product","parseFloat","parseInt","post","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/Addproduct.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./Addproduct.css\";\n// import Navbar from \"../Components/Navbar\";\n\n// const ProductForm = () => {\n// \tconst [productName, setProductName] = useState(\"\");\n// \tconst [description, setDescription] = useState(\"\");\n// \tconst [categoryName, setCategoryName] = useState(\"\");\n// \tconst [photo, setPhoto] = useState(null);\n// \tconst [errors, setErrors] = useState({});\n// \tconst [categories, setCategories] = useState([]);\n\n// \tconst dummyCategories = [\n// \t\t{ id: 1, name: \"Emproidry\" },\n// \t\t{ id: 2, name: \"Salwar designs\" },\n// \t\t{ id: 3, name: \"Bridel\" },\n// \t\t{ id: 4, name: \"Zardosi design\" },\n// \t\t{ id: 5, name: \"Legenha designs\" },\n// \t\t{ id: 5, name: \"Simple blouse designs\" },\n// \t];\n\n// \tuseEffect(() => {\n\t\t\n// \t\tsetCategories(dummyCategories);\n// \t}, []);\n\n// \tconst validate = () => {\n// \t\tconst newErrors = {};\n// \t\tif (!productName) newErrors.productName = \"Product Name is required\";\n// \t\tif (!description) newErrors.description = \"Description is required\";\n// \t\tif (!categoryName) newErrors.categoryName = \"Category Name is required\";\n// \t\tif (!photo) newErrors.photo = \"Photo is required\";\n// \t\treturn newErrors;\n// \t};\n\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\tconst newErrors = validate();\n// \t\tif (Object.keys(newErrors).length > 0) {\n// \t\t\tsetErrors(newErrors);\n// \t\t\treturn;\n// \t\t}\n\n// \t\tconst formData = new FormData();\n// \t\tformData.append(\"ProductName\", productName);\n// \t\tformData.append(\"Description\", description);\n// \t\tformData.append(\"CategoryName\", categoryName);\n// \t\tformData.append(\"photo\", photo);\n\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"http://localhost:3003/image/upload\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\tbody: formData,\n// \t\t\t});\n\n// \t\t\tif (!response.ok) {\n// \t\t\t\tconst errorText = await response.text();\n// \t\t\t\tthrow new Error(\n// \t\t\t\t\t`HTTP error! Status: ${response.status}, Message: ${errorText}`\n// \t\t\t\t);\n// \t\t\t}\n\n// \t\t\tconst data = await response.json();\n// \t\t\ttoast.success(\"Product added successfully!\");\n\n// \t\t\t// Clear the form\n// \t\t\tsetProductName(\"\");\n// \t\t\tsetDescription(\"\");\n// \t\t\tsetCategoryName(\"\");\n// \t\t\tsetPhoto(null);\n// \t\t\tsetErrors({});\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error:\", error);\n// \t\t\ttoast.error(\"Failed to add product. Please try again.\");\n// \t\t}\n// \t};\n\n// \treturn (\n// \t\t<>\n// \t\t\t<Navbar />\n\n// \t\t\t<div className=\"product-form-container\">\n// \t\t\t\t<ToastContainer />\n\n// \t\t\t\t<h2 className=\"add\">Add Product</h2>\n// \t\t\t\t<form onSubmit={handleSubmit} className=\"product-form\">\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"categoryName\">Category Name:</label>\n// \t\t\t\t\t\t<select\n// \t\t\t\t\t\t\tid=\"categoryName\"\n// \t\t\t\t\t\t\tvalue={categoryName}\n// \t\t\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<option value=\"\">Select category</option>\n// \t\t\t\t\t\t\t{categories.map((category) => (\n// \t\t\t\t\t\t\t\t<option key={category.id} value={category.name}>\n// \t\t\t\t\t\t\t\t\t{category.name}\n// \t\t\t\t\t\t\t\t</option>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</select>\n// \t\t\t\t\t\t{errors.categoryName && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.categoryName}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"productName\">Product Name:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tid=\"productName\"\n// \t\t\t\t\t\t\tvalue={productName}\n// \t\t\t\t\t\t\tonChange={(e) => setProductName(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tplaceholder=\"Enter product name\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.productName && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.productName}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"description\">Description:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tid=\"description\"\n// \t\t\t\t\t\t\tvalue={description}\n// \t\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tplaceholder=\"Enter description\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.description && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.description}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"photo\">Photo:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"file\"\n// \t\t\t\t\t\t\tid=\"photo\"\n// \t\t\t\t\t\t\tonChange={(e) => setPhoto(e.target.files[0])}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.photo && <span className=\"error\">{errors.photo}</span>}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"submit\" className=\"btn-submit\">\n// \t\t\t\t\t\tAdd Product\n// \t\t\t\t\t</button>\n// \t\t\t\t</form>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n// };\n\n// export default ProductForm;\n\n\n\n\n\n\n\n// src/AddProduct.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddProduct = () => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [stock, setStock] = useState('');\n  const [categoryName, setCategoryName] = useState('');\n  const [errors, setErrors] = useState({});\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!name) newErrors.name = 'Name is required';\n    if (!description) newErrors.description = 'Description is required';\n    if (!price) newErrors.price = 'Price is required';\n    if (!stock) newErrors.stock = 'Stock is required';\n    if (!categoryName) newErrors.categoryName = 'Category name is required';\n    return newErrors;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const newErrors = validateForm();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    const product = {\n      name,\n      description,\n      price: parseFloat(price),\n      stock: parseInt(stock),\n      categoryName,\n    };\n\n    try {\n      await axios.post('http://localhost:8000/api/products/', product);\n      alert('Product added successfully');\n      // Clear form fields\n      setName('');\n      setDescription('');\n      setPrice('');\n      setStock('');\n      setCategoryName('');\n      setErrors({});\n    } catch (error) {\n      console.error('There was an error adding the product!', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Add New Product</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n          {errors.name && <span className=\"error text-danger\">{errors.name}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            className=\"form-control\"\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          ></textarea>\n          {errors.description && <span className=\"error text-danger\">{errors.description}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"price\">Price</label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"price\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required\n          />\n          {errors.price && <span className=\"error text-danger\">{errors.price}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"stock\">Stock</label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"stock\"\n            value={stock}\n            onChange={(e) => setStock(e.target.value)}\n            required\n          />\n          {errors.stock && <span className=\"error text-danger\">{errors.stock}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"categoryName\">Category Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"categoryName\"\n            value={categoryName}\n            onChange={(e) => setCategoryName(e.target.value)}\n            required\n          />\n          {errors.categoryName && <span className=\"error text-danger\">{errors.categoryName}</span>}\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddProduct;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}