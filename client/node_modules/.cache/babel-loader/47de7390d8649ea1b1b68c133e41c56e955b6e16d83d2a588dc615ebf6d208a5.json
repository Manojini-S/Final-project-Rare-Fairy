{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Modal from \"../Components/Modal\"; // Assuming Modal.js is correctly implemented and imported\n// import \"./productadmin.css\";\n// import AdminDashboard from \"./Dashboard\";\n// import emailjs from '@emailjs/browser';\n\n// function OrderList() {\n// \tconst [orders, setOrders] = useState([]);\n// \tconst [error, setError] = useState(null);\n// \tconst [modalIsOpen, setModalIsOpen] = useState(false);\n// \tconst [selectedOrder, setSelectedOrder] = useState(null);\n\n// \tuseEffect(() => {\n// \t\t// Fetch orders when component mounts\n// \t\taxios\n// \t\t\t.get(\"http://localhost:3003/order/orders\")\n// \t\t\t.then((response) => {\n// \t\t\t\tsetOrders(response.data); // Set fetched orders to state\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error fetching orders:\", error);\n// \t\t\t\tsetError(\"Failed to fetch orders. Please try again later.\");\n// \t\t\t});\n// \t}, []);\n\n// \tconst handleAccept = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"accepted\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order accepted:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error accepting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst handleReject = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"rejected\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order rejected:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error rejecting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst sendNotification = (order) => {\n// \t\taxios\n// \t\t\t.post(\"http://localhost:3003/order/notify\", order)\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Notification sent:\", response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error sending notification:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst openModal = (order) => {\n// \t\tsetSelectedOrder(order);\n// \t\tsetModalIsOpen(true);\n// \t};\n\n// \treturn (\n//         <>\n\n// \t\t<div>\n\n// \t\t\t<h1 className=\"order\">Order List</h1>\n// \t\t\t{error && <p>{error}</p>}\n// \t\t\t<table>\n// \t\t\t\t<thead>\n// \t\t\t\t\t<tr>\n// \t\t\t\t\t\t<th>Name</th>\n// \t\t\t\t\t\t<th>Gmail</th>\n// \t\t\t\t\t\t<th>Contact Number</th>\n// \t\t\t\t\t\t<th>Address</th>\n// \t\t\t\t\t\t<th>Deadline</th>\n// \t\t\t\t\t\t<th>Actions</th>\n// \t\t\t\t\t</tr>\n// \t\t\t\t</thead>\n// \t\t\t\t<tbody>\n// \t\t\t\t\t{orders.map((order) => (\n// \t\t\t\t\t\t<tr key={order._id}>\n// \t\t\t\t\t\t\t<td>{order.name}</td>\n// \t\t\t\t\t\t\t<td>{order.email}</td>\n// \t\t\t\t\t\t\t<td>{order.contactNumber}</td>\n// \t\t\t\t\t\t\t<td>{order.address}</td>\n// \t\t\t\t\t\t\t<td>{new Date(order.deadline).toLocaleDateString()}</td>\n// \t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t<button className=\"accept\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t\t<button className=\"reject\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t))}\n// \t\t\t\t</tbody>\n// \t\t\t</table>\n\n// \t\t\t{modalIsOpen && (\n// \t\t\t\t<Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n// \t\t\t\t\t<h2>Order Confirmation</h2>\n// \t\t\t\t\t{selectedOrder && (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<p>Order ID: {selectedOrder._id}</p>\n// \t\t\t\t\t\t\t<p>Name: {selectedOrder.name}</p>\n// \t\t\t\t\t\t\t<p>Contact Number: {selectedOrder.contactNumber}</p>\n// \t\t\t\t\t\t\t<p>Address: {selectedOrder.address}</p>\n// \t\t\t\t\t\t\t<p>Deadline: {selectedOrder.deadline}</p>\n// \t\t\t\t\t\t\t<p>Are you sure you want to accept/reject this order?</p>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleAccept(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleReject(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</Modal>\n// \t\t\t)}\n// \t\t</div>\n//         </>\n// \t);\n// }\n\n// export default OrderList;\n\n// import React, { useRef } from 'react';\n// import emailjs from '@emailjs/browser';\n\n//  function OrderList  () {\n//   const form = useRef();\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm('service_7v4vmve', 'template_gswksyh', form.current, {\n//         publicKey: 'hpy_Ow2NKTCTlRRDq',\n//       })\n//       .then(\n//         () => {\n//           console.log('SUCCESS!');\n//         },\n//         (error) => {\n//           console.log('FAILED...', error.text);\n//         },\n//       );\n//   };\n\n//   return (\n//     <form ref={form} onSubmit={sendEmail}>\n//       <label>Name</label>\n//       <input type=\"text\" name=\"user_name\" />\n//       <label>Email</label>\n//       <input type=\"email\" name=\"user_email\" />\n//       <label>Message</label>\n//       <textarea name=\"message\" />\n//       <input type=\"submit\" value=\"Send\" />\n//     </form>\n//   );\n// };\n// export default OrderList;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./productadmin.css\";\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderList() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [isEmailFormOpen, setIsEmailFormOpen] = useState(false);\n  const form = useRef();\n  useEffect(() => {\n    // Fetch orders when component mounts\n    axios.get(\"http://localhost:3003/order/orders\").then(response => {\n      setOrders(response.data); // Set fetched orders to state\n    }).catch(error => {\n      console.error(\"Error fetching orders:\", error);\n      setError(\"Failed to fetch orders. Please try again later.\");\n    });\n  }, []);\n  const handleAccept = orderId => {\n    axios.patch(`http://localhost:3003/order/orders/${orderId}`, {\n      status: \"accepted\"\n    }).then(response => {\n      console.log(\"Order accepted:\", response.data);\n      setOrders(orders.map(order => order._id === orderId ? response.data : order));\n      setSelectedOrder(response.data); // Set the selected order for email form\n      setIsEmailFormOpen(true); // Open the email form after accepting the order\n    }).catch(error => {\n      console.error(\"Error accepting order:\", error);\n    });\n  };\n  const handleReject = orderId => {\n    axios.patch(`http://localhost:3003/order/orders/${orderId}`, {\n      status: \"rejected\"\n    }).then(response => {\n      console.log(\"Order rejected:\", response.data);\n      setOrders(orders.map(order => order._id === orderId ? response.data : order));\n    }).catch(error => {\n      console.error(\"Error rejecting order:\", error);\n    });\n  };\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm('service_7v4vmve', 'template_gswksyh', form.current, 'hpy_Ow2NKTCTlRRDq').then(() => {\n      console.log('SUCCESS!');\n      setIsEmailFormOpen(false); // Close the email form after sending the email\n    }, error => {\n      console.log('FAILED...', error.text);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"order\",\n      children: \"Order List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.contactNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(order.deadline).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accept\",\n              onClick: () => handleAccept(order._id),\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reject\",\n              onClick: () => handleReject(order._id),\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), isEmailFormOpen && selectedOrder && /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: form,\n      onSubmit: sendEmail,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"user_name\",\n        defaultValue: selectedOrder.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"user_email\",\n        defaultValue: selectedOrder.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 9\n  }, this);\n}\n_s(OrderList, \"XjKaj1gUWfnyhA9xinlZHdgAdZQ=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","emailjs","jsxDEV","_jsxDEV","OrderList","_s","orders","setOrders","error","setError","selectedOrder","setSelectedOrder","isEmailFormOpen","setIsEmailFormOpen","form","get","then","response","data","catch","console","handleAccept","orderId","patch","status","log","map","order","_id","handleReject","sendEmail","e","preventDefault","sendForm","current","text","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","email","contactNumber","address","Date","deadline","toLocaleDateString","onClick","ref","onSubmit","type","defaultValue","value","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Modal from \"../Components/Modal\"; // Assuming Modal.js is correctly implemented and imported\n// import \"./productadmin.css\";\n// import AdminDashboard from \"./Dashboard\";\n// import emailjs from '@emailjs/browser';\n\n// function OrderList() {\n// \tconst [orders, setOrders] = useState([]);\n// \tconst [error, setError] = useState(null);\n// \tconst [modalIsOpen, setModalIsOpen] = useState(false);\n// \tconst [selectedOrder, setSelectedOrder] = useState(null);\n\n// \tuseEffect(() => {\n// \t\t// Fetch orders when component mounts\n// \t\taxios\n// \t\t\t.get(\"http://localhost:3003/order/orders\")\n// \t\t\t.then((response) => {\n// \t\t\t\tsetOrders(response.data); // Set fetched orders to state\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error fetching orders:\", error);\n// \t\t\t\tsetError(\"Failed to fetch orders. Please try again later.\");\n// \t\t\t});\n// \t}, []);\n\n// \tconst handleAccept = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"accepted\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order accepted:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error accepting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst handleReject = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"rejected\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order rejected:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error rejecting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst sendNotification = (order) => {\n// \t\taxios\n// \t\t\t.post(\"http://localhost:3003/order/notify\", order)\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Notification sent:\", response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error sending notification:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst openModal = (order) => {\n// \t\tsetSelectedOrder(order);\n// \t\tsetModalIsOpen(true);\n// \t};\n\n// \treturn (\n//         <>\n        \n// \t\t<div>\n\t\t\t\n// \t\t\t<h1 className=\"order\">Order List</h1>\n// \t\t\t{error && <p>{error}</p>}\n// \t\t\t<table>\n// \t\t\t\t<thead>\n// \t\t\t\t\t<tr>\n// \t\t\t\t\t\t<th>Name</th>\n// \t\t\t\t\t\t<th>Gmail</th>\n// \t\t\t\t\t\t<th>Contact Number</th>\n// \t\t\t\t\t\t<th>Address</th>\n// \t\t\t\t\t\t<th>Deadline</th>\n// \t\t\t\t\t\t<th>Actions</th>\n// \t\t\t\t\t</tr>\n// \t\t\t\t</thead>\n// \t\t\t\t<tbody>\n// \t\t\t\t\t{orders.map((order) => (\n// \t\t\t\t\t\t<tr key={order._id}>\n// \t\t\t\t\t\t\t<td>{order.name}</td>\n// \t\t\t\t\t\t\t<td>{order.email}</td>\n// \t\t\t\t\t\t\t<td>{order.contactNumber}</td>\n// \t\t\t\t\t\t\t<td>{order.address}</td>\n// \t\t\t\t\t\t\t<td>{new Date(order.deadline).toLocaleDateString()}</td>\n// \t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t<button className=\"accept\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t\t<button className=\"reject\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t))}\n// \t\t\t\t</tbody>\n// \t\t\t</table>\n            \n\n// \t\t\t{modalIsOpen && (\n// \t\t\t\t<Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n// \t\t\t\t\t<h2>Order Confirmation</h2>\n// \t\t\t\t\t{selectedOrder && (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<p>Order ID: {selectedOrder._id}</p>\n// \t\t\t\t\t\t\t<p>Name: {selectedOrder.name}</p>\n// \t\t\t\t\t\t\t<p>Contact Number: {selectedOrder.contactNumber}</p>\n// \t\t\t\t\t\t\t<p>Address: {selectedOrder.address}</p>\n// \t\t\t\t\t\t\t<p>Deadline: {selectedOrder.deadline}</p>\n// \t\t\t\t\t\t\t<p>Are you sure you want to accept/reject this order?</p>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleAccept(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleReject(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</Modal>\n// \t\t\t)}\n// \t\t</div>\n//         </>\n// \t);\n// }\n\n// export default OrderList;\n\n\n\n// import React, { useRef } from 'react';\n// import emailjs from '@emailjs/browser';\n\n//  function OrderList  () {\n//   const form = useRef();\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm('service_7v4vmve', 'template_gswksyh', form.current, {\n//         publicKey: 'hpy_Ow2NKTCTlRRDq',\n//       })\n//       .then(\n//         () => {\n//           console.log('SUCCESS!');\n//         },\n//         (error) => {\n//           console.log('FAILED...', error.text);\n//         },\n//       );\n//   };\n\n//   return (\n//     <form ref={form} onSubmit={sendEmail}>\n//       <label>Name</label>\n//       <input type=\"text\" name=\"user_name\" />\n//       <label>Email</label>\n//       <input type=\"email\" name=\"user_email\" />\n//       <label>Message</label>\n//       <textarea name=\"message\" />\n//       <input type=\"submit\" value=\"Send\" />\n//     </form>\n//   );\n// };\n// export default OrderList;\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./productadmin.css\";\nimport emailjs from '@emailjs/browser';\n\nfunction OrderList() {\n    const [orders, setOrders] = useState([]);\n    const [error, setError] = useState(null);\n    const [selectedOrder, setSelectedOrder] = useState(null);\n    const [isEmailFormOpen, setIsEmailFormOpen] = useState(false);\n    const form = useRef();\n\n    useEffect(() => {\n        // Fetch orders when component mounts\n        axios\n            .get(\"http://localhost:3003/order/orders\")\n            .then((response) => {\n                setOrders(response.data); // Set fetched orders to state\n            })\n            .catch((error) => {\n                console.error(\"Error fetching orders:\", error);\n                setError(\"Failed to fetch orders. Please try again later.\");\n            });\n    }, []);\n\n    const handleAccept = (orderId) => {\n        axios\n            .patch(`http://localhost:3003/order/orders/${orderId}`, {\n                status: \"accepted\",\n            })\n            .then((response) => {\n                console.log(\"Order accepted:\", response.data);\n                setOrders(\n                    orders.map((order) => (order._id === orderId ? response.data : order))\n                );\n                setSelectedOrder(response.data); // Set the selected order for email form\n                setIsEmailFormOpen(true); // Open the email form after accepting the order\n            })\n            .catch((error) => {\n                console.error(\"Error accepting order:\", error);\n            });\n    };\n\n    const handleReject = (orderId) => {\n        axios\n            .patch(`http://localhost:3003/order/orders/${orderId}`, {\n                status: \"rejected\",\n            })\n            .then((response) => {\n                console.log(\"Order rejected:\", response.data);\n                setOrders(\n                    orders.map((order) => (order._id === orderId ? response.data : order))\n                );\n            })\n            .catch((error) => {\n                console.error(\"Error rejecting order:\", error);\n            });\n    };\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n\n        emailjs\n            .sendForm('service_7v4vmve', 'template_gswksyh', form.current, 'hpy_Ow2NKTCTlRRDq')\n            .then(\n                () => {\n                    console.log('SUCCESS!');\n                    setIsEmailFormOpen(false); // Close the email form after sending the email\n                },\n                (error) => {\n                    console.log('FAILED...', error.text);\n                },\n            );\n    };\n\n    return (\n        <div>\n            <h1 className=\"order\">Order List</h1>\n            {error && <p>{error}</p>}\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Contact Number</th>\n                        <th>Address</th>\n                        <th>Deadline</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map((order) => (\n                        <tr key={order._id}>\n                            <td>{order.name}</td>\n                            <td>{order.email}</td>\n                            <td>{order.contactNumber}</td>\n                            <td>{order.address}</td>\n                            <td>{new Date(order.deadline).toLocaleDateString()}</td>\n                            <td>\n                                <button className=\"accept\" onClick={() => handleAccept(order._id)}>\n                                    Accept\n                                </button>\n                                <button className=\"reject\" onClick={() => handleReject(order._id)}>\n                                    Reject\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            {isEmailFormOpen && selectedOrder && (\n                <form ref={form} onSubmit={sendEmail}>\n                    <h2>Send Email</h2>\n                    <label>Name</label>\n                    <input type=\"text\" name=\"user_name\" defaultValue={selectedOrder.name} />\n                    <label>Email</label>\n                    <input type=\"email\" name=\"user_email\" defaultValue={selectedOrder.email} />\n                    <label>Message</label>\n                    <textarea name=\"message\" />\n                    <input type=\"submit\" value=\"Send\" />\n                </form>\n            )}\n        </div>\n    );\n}\n\nexport default OrderList;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}