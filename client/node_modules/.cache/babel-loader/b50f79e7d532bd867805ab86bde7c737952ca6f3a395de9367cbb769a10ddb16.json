{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/product.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\n// import Modal from '../Components/Modal'; // Assuming Modal.js is in the correct directory\n// import './productadmin.css';\n// import AdminDashboard from './Dashboard';\n\n// function Admin() {\n//     const [products, setProducts] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//     const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n//     const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n//     const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:3003/image/getImg')\n//             .then(response => setProducts(response.data))\n//             .catch(error => {\n//                 console.error('Error fetching products:', error);\n//                 setError('An error occurred while fetching products. Please try again later.');\n//             });\n//     }, []);\n\n//     const handleEdit = (product) => {\n//         setSelectedProduct(product);\n//         setEditConfirmationOpen(true);\n//     };\n\n//     const handleEditConfirm = () => {\n//         setIsEditModalOpen(true);\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditCancel = () => {\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditSave = (e) => {\n//         e.preventDefault();\n//         // Your logic to save edited product details\n//         // Update the products array with the edited product\n//         const updatedProducts = products.map(product => \n//             product._id === selectedProduct._id ? selectedProduct : product\n//         );\n//         setProducts(updatedProducts);\n//         setIsEditModalOpen(false); // Close the edit modal after saving\n//     };\n\n//     const handleDelete = (productId) => {\n//         setSelectedProduct(products.find(product => product._id === productId));\n//         setDeleteConfirmationOpen(true);\n//     };\n\n//     const handleDeleteConfirm = () => {\n//         // Your logic to confirm and delete product\n//         setProducts(products.filter(product => product._id !== selectedProduct._id));\n//         setDeleteConfirmationOpen(false); // Close the delete confirmation modal\n//     };\n\n//     const handleDeleteCancel = () => {\n//         setDeleteConfirmationOpen(false);\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setSelectedProduct({\n//             ...selectedProduct,\n//             [name]: value\n//         });\n//     };\n\n//     return (\n//         <>\n//         <div>\n//         <h1 className=\"order\">Rare Fairy Product</h1>\n//             {error ? (\n//                 <div className=\"error\">Error: {error}</div>\n//             ) : (\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Category Name</th>\n//                             <th>Product Name</th>\n//                             <th>Description</th>\n//                             <th>Image</th>\n//                             <th>Edit</th>\n//                             <th>Delete</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {products.map(product => (\n//                             <tr key={product._id}>\n//                                 <td>{product.CategoryName}</td>\n//                                 <td>{product.ProductName}</td>\n//                                 <td>{product.Description}</td>\n//                                 <td>\n//                                     <CloudinaryContext cloudName=\"your_cloud_name\">\n//                                         <Image publicId={product.imageUrl} alt={product.ProductName} style={{ height:\"60px\", width:\"60px\" }}>\n//                                             <Transformation width=\"50\" crop=\"scale\" />\n//                                         </Image>\n//                                     </CloudinaryContext>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"edit\" onClick={() => handleEdit(product)}>Edit</button>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"delete\" onClick={() => handleDelete(product._id)}>Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             )}\n\n//             <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n//                 <h2>Edit Product</h2>\n//                 {selectedProduct && (\n//                     <form onSubmit={handleEditSave}>\n//                         <label>\n//                             Category Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"CategoryName\"\n//                                 value={selectedProduct.CategoryName}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <label>\n//                             Product Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"ProductName\"\n//                                 value={selectedProduct.ProductName}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <label>\n//                             Description:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"Description\"\n//                                 value={selectedProduct.Description}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <button type=\"submit\">Save</button>\n//                         <button type=\"button\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n//                     </form>\n//                 )}\n//             </Modal>\n\n//             <div className=\"container-box\">\n//                 {isEditConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleEditCancel}>&times;</span>\n//                             <h2>Confirm Edit</h2>\n//                             <p>Are you sure you want to edit this product?</p>\n//                             <button onClick={handleEditConfirm}>Yes</button>\n//                             <button onClick={handleEditCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isDeleteConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleDeleteCancel}>&times;</span>\n//                             <h2>Confirm Delete</h2>\n//                             <p>Are you sure you want to delete this product?</p>\n//                             <button onClick={handleDeleteConfirm}>Yes</button>\n//                             <button onClick={handleDeleteCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isEditModalOpen && selectedProduct && (\n//                     <div className=\"edit-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n//                             <h2>Edit Product</h2>\n//                             <form onSubmit={handleEditSave}>\n//                                 <label>Category Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"CategoryName\"\n//                                     value={selectedProduct.CategoryName}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <label>Product Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"ProductName\"\n//                                     value={selectedProduct.ProductName}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <label>Description:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"Description\"\n//                                     value={selectedProduct.Description}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <button type=\"submit\">Save</button>\n//                             </form>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//         </>\n//     );\n// }\n\n// export default Admin;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport Modal from '../Components/Modal'; // Assuming Modal.js is in the correct directory\nimport './productadmin.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n  const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const productsPerPage = 10;\n  useEffect(() => {\n    fetchProducts(currentPage);\n  }, [currentPage]);\n  const fetchProducts = page => {\n    axios.get(`http://localhost:3003/image/getImg?page=${page}&limit=${productsPerPage}`).then(response => {\n      setProducts(response.data.products);\n      setTotalPages(response.data.totalPages);\n    }).catch(error => {\n      console.error('Error fetching products:', error);\n      setError('An error occurred while fetching products. Please try again later.');\n    });\n  };\n  const handleEdit = product => {\n    setSelectedProduct(product);\n    setEditConfirmationOpen(true);\n  };\n  const handleEditConfirm = () => {\n    setIsEditModalOpen(true);\n    setEditConfirmationOpen(false);\n  };\n  const handleEditCancel = () => {\n    setEditConfirmationOpen(false);\n  };\n  const handleEditSave = e => {\n    e.preventDefault();\n    // Your logic to save edited product details\n    // Update the products array with the edited product\n    const updatedProducts = products.map(product => product._id === selectedProduct._id ? selectedProduct : product);\n    setProducts(updatedProducts);\n    setIsEditModalOpen(false); // Close the edit modal after saving\n  };\n  const handleDelete = productId => {\n    setSelectedProduct(products.find(product => product._id === productId));\n    setDeleteConfirmationOpen(true);\n  };\n  const handleDeleteConfirm = () => {\n    // Your logic to confirm and delete product\n    setProducts(products.filter(product => product._id !== selectedProduct._id));\n    setDeleteConfirmationOpen(false); // Close the delete confirmation modal\n  };\n  const handleDeleteCancel = () => {\n    setDeleteConfirmationOpen(false);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelectedProduct({\n      ...selectedProduct,\n      [name]: value\n    });\n  };\n  const handlePageChange = page => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"order\",\n      children: \"Rare Fairy Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.CategoryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.ProductName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(CloudinaryContext, {\n                cloudName: \"your_cloud_name\",\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  publicId: product.imageUrl,\n                  alt: product.ProductName,\n                  style: {\n                    height: \"60px\",\n                    width: \"60px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Transformation, {\n                    width: \"50\",\n                    crop: \"scale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => handleEdit(product),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => handleDelete(product._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 37\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => handlePageChange(currentPage - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", currentPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === totalPages,\n          onClick: () => handlePageChange(currentPage + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onClose: () => setModalIsOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this), selectedProduct && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditSave,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Category Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"CategoryName\",\n            value: selectedProduct.CategoryName,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Product Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ProductName\",\n            value: selectedProduct.ProductName,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Description\",\n            value: selectedProduct.Description,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setModalIsOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-box\",\n      children: [isEditConfirmationOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleEditCancel,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to edit this product?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditConfirm,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditCancel,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }, this), isDeleteConfirmationOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleDeleteCancel,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete this product?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteConfirm,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteCancel,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this), isEditModalOpen && selectedProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: () => setIsEditModalOpen(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEditSave,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"CategoryName\",\n              value: selectedProduct.CategoryName,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Product Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"ProductName\",\n              value: selectedProduct.ProductName,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"Description\",\n              value: selectedProduct.Description,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 9\n  }, this);\n}\n_s(Admin, \"KGJD5Nc/CLB8DRS4Fr/g67SLQNM=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","Image","Transformation","CloudinaryContext","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Admin","_s","products","setProducts","error","setError","modalIsOpen","setModalIsOpen","selectedProduct","setSelectedProduct","isEditConfirmationOpen","setEditConfirmationOpen","isDeleteConfirmationOpen","setDeleteConfirmationOpen","isEditModalOpen","setIsEditModalOpen","currentPage","setCurrentPage","totalPages","setTotalPages","productsPerPage","fetchProducts","page","get","then","response","data","catch","console","handleEdit","product","handleEditConfirm","handleEditCancel","handleEditSave","e","preventDefault","updatedProducts","map","_id","handleDelete","productId","find","handleDeleteConfirm","filter","handleDeleteCancel","handleInputChange","name","value","target","handlePageChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","CategoryName","ProductName","Description","cloudName","publicId","imageUrl","alt","style","height","width","crop","onClick","disabled","isOpen","onClose","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/product.js"],"sourcesContent":["\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\n// import Modal from '../Components/Modal'; // Assuming Modal.js is in the correct directory\n// import './productadmin.css';\n// import AdminDashboard from './Dashboard';\n\n// function Admin() {\n//     const [products, setProducts] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//     const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n//     const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n//     const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:3003/image/getImg')\n//             .then(response => setProducts(response.data))\n//             .catch(error => {\n//                 console.error('Error fetching products:', error);\n//                 setError('An error occurred while fetching products. Please try again later.');\n//             });\n//     }, []);\n\n//     const handleEdit = (product) => {\n//         setSelectedProduct(product);\n//         setEditConfirmationOpen(true);\n//     };\n\n//     const handleEditConfirm = () => {\n//         setIsEditModalOpen(true);\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditCancel = () => {\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditSave = (e) => {\n//         e.preventDefault();\n//         // Your logic to save edited product details\n//         // Update the products array with the edited product\n//         const updatedProducts = products.map(product => \n//             product._id === selectedProduct._id ? selectedProduct : product\n//         );\n//         setProducts(updatedProducts);\n//         setIsEditModalOpen(false); // Close the edit modal after saving\n//     };\n\n//     const handleDelete = (productId) => {\n//         setSelectedProduct(products.find(product => product._id === productId));\n//         setDeleteConfirmationOpen(true);\n//     };\n\n//     const handleDeleteConfirm = () => {\n//         // Your logic to confirm and delete product\n//         setProducts(products.filter(product => product._id !== selectedProduct._id));\n//         setDeleteConfirmationOpen(false); // Close the delete confirmation modal\n//     };\n\n//     const handleDeleteCancel = () => {\n//         setDeleteConfirmationOpen(false);\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setSelectedProduct({\n//             ...selectedProduct,\n//             [name]: value\n//         });\n//     };\n\n//     return (\n//         <>\n//         <div>\n//         <h1 className=\"order\">Rare Fairy Product</h1>\n//             {error ? (\n//                 <div className=\"error\">Error: {error}</div>\n//             ) : (\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Category Name</th>\n//                             <th>Product Name</th>\n//                             <th>Description</th>\n//                             <th>Image</th>\n//                             <th>Edit</th>\n//                             <th>Delete</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {products.map(product => (\n//                             <tr key={product._id}>\n//                                 <td>{product.CategoryName}</td>\n//                                 <td>{product.ProductName}</td>\n//                                 <td>{product.Description}</td>\n//                                 <td>\n//                                     <CloudinaryContext cloudName=\"your_cloud_name\">\n//                                         <Image publicId={product.imageUrl} alt={product.ProductName} style={{ height:\"60px\", width:\"60px\" }}>\n//                                             <Transformation width=\"50\" crop=\"scale\" />\n//                                         </Image>\n//                                     </CloudinaryContext>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"edit\" onClick={() => handleEdit(product)}>Edit</button>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"delete\" onClick={() => handleDelete(product._id)}>Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             )}\n\n//             <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n//                 <h2>Edit Product</h2>\n//                 {selectedProduct && (\n//                     <form onSubmit={handleEditSave}>\n//                         <label>\n//                             Category Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"CategoryName\"\n//                                 value={selectedProduct.CategoryName}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <label>\n//                             Product Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"ProductName\"\n//                                 value={selectedProduct.ProductName}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <label>\n//                             Description:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"Description\"\n//                                 value={selectedProduct.Description}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <button type=\"submit\">Save</button>\n//                         <button type=\"button\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n//                     </form>\n//                 )}\n//             </Modal>\n\n//             <div className=\"container-box\">\n//                 {isEditConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleEditCancel}>&times;</span>\n//                             <h2>Confirm Edit</h2>\n//                             <p>Are you sure you want to edit this product?</p>\n//                             <button onClick={handleEditConfirm}>Yes</button>\n//                             <button onClick={handleEditCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isDeleteConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleDeleteCancel}>&times;</span>\n//                             <h2>Confirm Delete</h2>\n//                             <p>Are you sure you want to delete this product?</p>\n//                             <button onClick={handleDeleteConfirm}>Yes</button>\n//                             <button onClick={handleDeleteCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isEditModalOpen && selectedProduct && (\n//                     <div className=\"edit-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n//                             <h2>Edit Product</h2>\n//                             <form onSubmit={handleEditSave}>\n//                                 <label>Category Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"CategoryName\"\n//                                     value={selectedProduct.CategoryName}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <label>Product Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"ProductName\"\n//                                     value={selectedProduct.ProductName}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <label>Description:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"Description\"\n//                                     value={selectedProduct.Description}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <button type=\"submit\">Save</button>\n//                             </form>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//         </>\n//     );\n// }\n\n// export default Admin;\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport Modal from '../Components/Modal'; // Assuming Modal.js is in the correct directory\nimport './productadmin.css';\n\nfunction Admin() {\n    const [products, setProducts] = useState([]);\n    const [error, setError] = useState(null);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n    const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const productsPerPage = 10;\n\n    useEffect(() => {\n        fetchProducts(currentPage);\n    }, [currentPage]);\n\n    const fetchProducts = (page) => {\n        axios.get(`http://localhost:3003/image/getImg?page=${page}&limit=${productsPerPage}`)\n            .then(response => {\n                setProducts(response.data.products);\n                setTotalPages(response.data.totalPages);\n            })\n            .catch(error => {\n                console.error('Error fetching products:', error);\n                setError('An error occurred while fetching products. Please try again later.');\n            });\n    };\n\n    const handleEdit = (product) => {\n        setSelectedProduct(product);\n        setEditConfirmationOpen(true);\n    };\n\n    const handleEditConfirm = () => {\n        setIsEditModalOpen(true);\n        setEditConfirmationOpen(false);\n    };\n\n    const handleEditCancel = () => {\n        setEditConfirmationOpen(false);\n    };\n\n    const handleEditSave = (e) => {\n        e.preventDefault();\n        // Your logic to save edited product details\n        // Update the products array with the edited product\n        const updatedProducts = products.map(product => \n            product._id === selectedProduct._id ? selectedProduct : product\n        );\n        setProducts(updatedProducts);\n        setIsEditModalOpen(false); // Close the edit modal after saving\n    };\n\n    const handleDelete = (productId) => {\n        setSelectedProduct(products.find(product => product._id === productId));\n        setDeleteConfirmationOpen(true);\n    };\n\n    const handleDeleteConfirm = () => {\n        // Your logic to confirm and delete product\n        setProducts(products.filter(product => product._id !== selectedProduct._id));\n        setDeleteConfirmationOpen(false); // Close the delete confirmation modal\n    };\n\n    const handleDeleteCancel = () => {\n        setDeleteConfirmationOpen(false);\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setSelectedProduct({\n            ...selectedProduct,\n            [name]: value\n        });\n    };\n\n    const handlePageChange = (page) => {\n        if (page >= 1 && page <= totalPages) {\n            setCurrentPage(page);\n        }\n    };\n\n    return (\n        <div>\n            <h1 className=\"order\">Rare Fairy Product</h1>\n            {error ? (\n                <div className=\"error\">Error: {error}</div>\n            ) : (\n                <>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Category Name</th>\n                                <th>Product Name</th>\n                                <th>Description</th>\n                                <th>Image</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map(product => (\n                                <tr key={product._id}>\n                                    <td>{product.CategoryName}</td>\n                                    <td>{product.ProductName}</td>\n                                    <td>{product.Description}</td>\n                                    <td>\n                                        <CloudinaryContext cloudName=\"your_cloud_name\">\n                                            <Image publicId={product.imageUrl} alt={product.ProductName} style={{ height: \"60px\", width: \"60px\" }}>\n                                                <Transformation width=\"50\" crop=\"scale\" />\n                                            </Image>\n                                        </CloudinaryContext>\n                                    </td>\n                                    <td>\n                                        <button className=\"edit\" onClick={() => handleEdit(product)}>Edit</button>\n                                    </td>\n                                    <td>\n                                        <button className=\"delete\" onClick={() => handleDelete(product._id)}>Delete</button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <div className=\"pagination\">\n                        <button disabled={currentPage === 1} onClick={() => handlePageChange(currentPage - 1)}>Previous</button>\n                        <span>Page {currentPage} of {totalPages}</span>\n                        <button disabled={currentPage === totalPages} onClick={() => handlePageChange(currentPage + 1)}>Next</button>\n                    </div>\n                </>\n            )}\n\n            <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n                <h2>Edit Product</h2>\n                {selectedProduct && (\n                    <form onSubmit={handleEditSave}>\n                        <label>\n                            Category Name:\n                            <input\n                                type=\"text\"\n                                name=\"CategoryName\"\n                                value={selectedProduct.CategoryName}\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                        <label>\n                            Product Name:\n                            <input\n                                type=\"text\"\n                                name=\"ProductName\"\n                                value={selectedProduct.ProductName}\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                        <label>\n                            Description:\n                            <input\n                                type=\"text\"\n                                name=\"Description\"\n                                value={selectedProduct.Description}\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                        <button type=\"submit\">Save</button>\n                        <button type=\"button\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n                    </form>\n                )}\n            </Modal>\n\n            <div className=\"container-box\">\n                {isEditConfirmationOpen && (\n                    <div className=\"confirmation-modal\">\n                        <div className=\"modal-content\">\n                            <span className=\"close\" onClick={handleEditCancel}>&times;</span>\n                            <h2>Confirm Edit</h2>\n                            <p>Are you sure you want to edit this product?</p>\n                            <button onClick={handleEditConfirm}>Yes</button>\n                            <button onClick={handleEditCancel}>No</button>\n                        </div>\n                    </div>\n                )}\n                {isDeleteConfirmationOpen && (\n                    <div className=\"confirmation-modal\">\n                        <div className=\"modal-content\">\n                            <span className=\"close\" onClick={handleDeleteCancel}>&times;</span>\n                            <h2>Confirm Delete</h2>\n                            <p>Are you sure you want to delete this product?</p>\n                            <button onClick={handleDeleteConfirm}>Yes</button>\n                            <button onClick={handleDeleteCancel}>No</button>\n                        </div>\n                    </div>\n                )}\n                {isEditModalOpen && selectedProduct && (\n                    <div className=\"edit-modal\">\n                        <div className=\"modal-content\">\n                            <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n                            <h2>Edit Product</h2>\n                            <form onSubmit={handleEditSave}>\n                                <label>Category Name:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"CategoryName\"\n                                    value={selectedProduct.CategoryName}\n                                    onChange={handleInputChange}\n                                />\n                                <label>Product Name:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"ProductName\"\n                                    value={selectedProduct.ProductName}\n                                    onChange={handleInputChange}\n                                />\n                                <label>Description:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"Description\"\n                                    value={selectedProduct.Description}\n                                    onChange={handleInputChange}\n                                />\n                                <button type=\"submit\">Save</button>\n                            </form>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Admin;\n\n\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}