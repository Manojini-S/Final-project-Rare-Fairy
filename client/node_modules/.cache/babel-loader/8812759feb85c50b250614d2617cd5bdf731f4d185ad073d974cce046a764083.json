{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./productadmin.css\";\n// import emailjs from \"@emailjs/browser\";\n\n// function OrderList() {\n//   const [orders, setOrders] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [showEmailForm, setShowEmailForm] = useState(false);\n//   const form = useRef();\n\n//   useEffect(() => {\n//     // Fetch orders when the component mounts\n//     fetch(\"http://localhost:3003/order/orders\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setOrders(data); // Set fetched orders to state\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching orders:\", error);\n//         setError(\"Failed to fetch orders. Please try again later.\");\n//       });\n//   }, []);\n\n//   const handleAccept = (orderId) => {\n//     console.log(`Accepting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"accepted\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order accepted:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//         setSelectedOrder(data);\n//         setShowEmailForm(true);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error accepting order:\", error);\n//       });\n//   };\n\n//   const handleReject = (orderId) => {\n//     console.log(`Rejecting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"rejected\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order rejected:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error rejecting order:\", error);\n//       });\n//   };\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm(\n//         \"service_7v4vmve\",\n//         \"template_gswksyh\",\n//         form.current,\n//         \"hpy_Ow2NKTCTlRRDq\"\n//       )\n//       .then(\n//         () => {\n//           console.log(\"Email sent successfully!\");\n//           setShowEmailForm(false);\n//         },\n//         (error) => {\n//           console.log(\"Failed to send email...\", error.text);\n//         }\n//       );\n//   };\n\n//   return (\n//     <div>\n//       <h1 className=\"order\">Order List</h1>\n//       {error && <p>{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Contact Number</th>\n//             <th>Address</th>\n//             <th>Deadline</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map((order) => (\n//             <tr key={order._id}>\n//               <td>{order.name}</td>\n//               <td>{order.email}</td>\n//               <td>{order.contactNumber}</td>\n//               <td>{order.address}</td>\n//               <td>{new Date(order.deadline).toLocaleDateString()}</td>\n//               <td>\n//                 <button\n//                   className=\"accept\"\n//                   onClick={() => handleAccept(order._id)}\n//                 >\n//                   Accept\n//                 </button>\n//                 <button\n//                   className=\"reject\"\n//                   onClick={() => handleReject(order._id)}\n//                 >\n//                   Reject\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showEmailForm && (\n//         <form ref={form} onSubmit={sendEmail}>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"user_name\"\n//             defaultValue={selectedOrder ? selectedOrder.name : \"\"}\n//             readOnly\n//           />\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"user_email\"\n//             defaultValue={selectedOrder ? selectedOrder.email : \"\"}\n//             readOnly\n//           />\n//           <label>Message</label>\n//           <textarea name=\"message\"></textarea>\n//           <input type=\"submit\" value=\"Send\" />\n//         </form>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default OrderList;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./productadmin.css\";\nimport emailjs from \"@emailjs/browser\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderList() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [showEmailForm, setShowEmailForm] = useState(false);\n  const form = useRef();\n  useEffect(() => {\n    // Fetch orders when the component mounts\n    fetchOrders();\n  }, []);\n  const fetchOrders = () => {\n    fetch(\"http://localhost:3003/order/orders\").then(response => response.json()).then(data => {\n      setOrders(data); // Set fetched orders to state\n    }).catch(error => {\n      console.error(\"Error fetching orders:\", error);\n      setError(\"Failed to fetch orders. Please try again later.\");\n    });\n  };\n  const handleAccept = orderId => {\n    console.log(`Accepting order with ID: ${orderId}`);\n    fetch(`http://localhost:3003/order/orders/${orderId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        status: \"accepted\"\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(\"Order accepted:\", data);\n      setOrders(orders.map(order => order._id === orderId ? data : order));\n      setSelectedOrder(data);\n      setShowEmailForm(true);\n      toast.success(\"Order accepted successfully!\");\n    }).catch(error => {\n      console.error(\"Error accepting order:\", error);\n      toast.error(\"Failed to accept the order.\");\n    });\n  };\n  const handleReject = orderId => {\n    console.log(`Rejecting order with ID: ${orderId}`);\n    fetch(`http://localhost:3003/order/orders/${orderId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        status: \"rejected\"\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(\"Order rejected:\", data);\n      setOrders(orders.map(order => order._id === orderId ? data : order));\n      toast.success(\"Order rejected successfully!\");\n    }).catch(error => {\n      console.error(\"Error rejecting order:\", error);\n      toast.error(\"Failed to reject the order.\");\n    });\n  };\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm(\"service_7v4vmve\", \"template_gswksyh\", form.current, \"hpy_Ow2NKTCTlRRDq\").then(() => {\n      console.log(\"Email sent successfully!\");\n      setShowEmailForm(false);\n    }, error => {\n      console.log(\"Failed to send email...\", error.text);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"order\",\n      children: \"Order List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.contactNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(order.deadline).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accept\",\n              onClick: () => handleAccept(order._id),\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reject\",\n              onClick: () => handleReject(order._id),\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), showEmailForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: form,\n      onSubmit: sendEmail,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"user_name\",\n        defaultValue: selectedOrder ? selectedOrder.name : \"\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"user_email\",\n        defaultValue: selectedOrder ? selectedOrder.email : \"\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderList, \"lFgAC+Q47tPt/Sm2xGXNQ2b+O6s=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","emailjs","ToastContainer","toast","jsxDEV","_jsxDEV","OrderList","_s","orders","setOrders","error","setError","selectedOrder","setSelectedOrder","showEmailForm","setShowEmailForm","form","fetchOrders","fetch","then","response","json","data","catch","console","handleAccept","orderId","log","method","headers","body","JSON","stringify","status","map","order","_id","success","handleReject","sendEmail","e","preventDefault","sendForm","current","text","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","email","contactNumber","address","Date","deadline","toLocaleDateString","onClick","ref","onSubmit","type","defaultValue","readOnly","value","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect, useRef } from \"react\";\n// import \"./productadmin.css\";\n// import emailjs from \"@emailjs/browser\";\n\n// function OrderList() {\n//   const [orders, setOrders] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedOrder, setSelectedOrder] = useState(null);\n//   const [showEmailForm, setShowEmailForm] = useState(false);\n//   const form = useRef();\n\n//   useEffect(() => {\n//     // Fetch orders when the component mounts\n//     fetch(\"http://localhost:3003/order/orders\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setOrders(data); // Set fetched orders to state\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching orders:\", error);\n//         setError(\"Failed to fetch orders. Please try again later.\");\n//       });\n//   }, []);\n\n//   const handleAccept = (orderId) => {\n//     console.log(`Accepting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"accepted\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order accepted:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//         setSelectedOrder(data);\n//         setShowEmailForm(true);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error accepting order:\", error);\n//       });\n//   };\n\n//   const handleReject = (orderId) => {\n//     console.log(`Rejecting order with ID: ${orderId}`);\n//     fetch(`http://localhost:3003/order/orders/${orderId}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ status: \"rejected\" }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(\"Order rejected:\", data);\n//         setOrders(\n//           orders.map((order) => (order._id === orderId ? data : order))\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error rejecting order:\", error);\n//       });\n//   };\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm(\n//         \"service_7v4vmve\",\n//         \"template_gswksyh\",\n//         form.current,\n//         \"hpy_Ow2NKTCTlRRDq\"\n//       )\n//       .then(\n//         () => {\n//           console.log(\"Email sent successfully!\");\n//           setShowEmailForm(false);\n//         },\n//         (error) => {\n//           console.log(\"Failed to send email...\", error.text);\n//         }\n//       );\n//   };\n\n//   return (\n//     <div>\n//       <h1 className=\"order\">Order List</h1>\n//       {error && <p>{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Contact Number</th>\n//             <th>Address</th>\n//             <th>Deadline</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map((order) => (\n//             <tr key={order._id}>\n//               <td>{order.name}</td>\n//               <td>{order.email}</td>\n//               <td>{order.contactNumber}</td>\n//               <td>{order.address}</td>\n//               <td>{new Date(order.deadline).toLocaleDateString()}</td>\n//               <td>\n//                 <button\n//                   className=\"accept\"\n//                   onClick={() => handleAccept(order._id)}\n//                 >\n//                   Accept\n//                 </button>\n//                 <button\n//                   className=\"reject\"\n//                   onClick={() => handleReject(order._id)}\n//                 >\n//                   Reject\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showEmailForm && (\n//         <form ref={form} onSubmit={sendEmail}>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"user_name\"\n//             defaultValue={selectedOrder ? selectedOrder.name : \"\"}\n//             readOnly\n//           />\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"user_email\"\n//             defaultValue={selectedOrder ? selectedOrder.email : \"\"}\n//             readOnly\n//           />\n//           <label>Message</label>\n//           <textarea name=\"message\"></textarea>\n//           <input type=\"submit\" value=\"Send\" />\n//         </form>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default OrderList;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./productadmin.css\";\nimport emailjs from \"@emailjs/browser\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction OrderList() {\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [showEmailForm, setShowEmailForm] = useState(false);\n  const form = useRef();\n\n  useEffect(() => {\n    // Fetch orders when the component mounts\n    fetchOrders();\n  }, []);\n\n  const fetchOrders = () => {\n    fetch(\"http://localhost:3003/order/orders\")\n      .then((response) => response.json())\n      .then((data) => {\n        setOrders(data); // Set fetched orders to state\n      })\n      .catch((error) => {\n        console.error(\"Error fetching orders:\", error);\n        setError(\"Failed to fetch orders. Please try again later.\");\n      });\n  };\n\n  const handleAccept = (orderId) => {\n    console.log(`Accepting order with ID: ${orderId}`);\n    fetch(`http://localhost:3003/order/orders/${orderId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ status: \"accepted\" }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Order accepted:\", data);\n        setOrders(\n          orders.map((order) => (order._id === orderId ? data : order))\n        );\n        setSelectedOrder(data);\n        setShowEmailForm(true);\n        toast.success(\"Order accepted successfully!\");\n      })\n      .catch((error) => {\n        console.error(\"Error accepting order:\", error);\n        toast.error(\"Failed to accept the order.\");\n      });\n  };\n\n  const handleReject = (orderId) => {\n    console.log(`Rejecting order with ID: ${orderId}`);\n    fetch(`http://localhost:3003/order/orders/${orderId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ status: \"rejected\" }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Order rejected:\", data);\n        setOrders(\n          orders.map((order) => (order._id === orderId ? data : order))\n        );\n        toast.success(\"Order rejected successfully!\");\n      })\n      .catch((error) => {\n        console.error(\"Error rejecting order:\", error);\n        toast.error(\"Failed to reject the order.\");\n      });\n  };\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_7v4vmve\",\n        \"template_gswksyh\",\n        form.current,\n        \"hpy_Ow2NKTCTlRRDq\"\n      )\n      .then(\n        () => {\n          console.log(\"Email sent successfully!\");\n          setShowEmailForm(false);\n        },\n        (error) => {\n          console.log(\"Failed to send email...\", error.text);\n        }\n      );\n  };\n\n  return (\n    <div>\n      <h1 className=\"order\">Order List</h1>\n      {error && <p>{error}</p>}\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Contact Number</th>\n            <th>Address</th>\n            <th>Deadline</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((order) => (\n            <tr key={order._id}>\n              <td>{order.name}</td>\n              <td>{order.email}</td>\n              <td>{order.contactNumber}</td>\n              <td>{order.address}</td>\n              <td>{new Date(order.deadline).toLocaleDateString()}</td>\n              <td>\n                <button\n                  className=\"accept\"\n                  onClick={() => handleAccept(order._id)}\n                >\n                  Accept\n                </button>\n                <button\n                  className=\"reject\"\n                  onClick={() => handleReject(order._id)}\n                >\n                  Reject\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {showEmailForm && (\n        <form ref={form} onSubmit={sendEmail}>\n          <label>Name</label>\n          <input\n            type=\"text\"\n            name=\"user_name\"\n            defaultValue={selectedOrder ? selectedOrder.name : \"\"}\n            readOnly\n          />\n          <label>Email</label>\n          <input\n            type=\"email\"\n            name=\"user_email\"\n            defaultValue={selectedOrder ? selectedOrder.email : \"\"}\n            readOnly\n          />\n          <label>Message</label>\n          <textarea name=\"message\"></textarea>\n          <input type=\"submit\" value=\"Send\" />\n        </form>\n      )}\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default OrderList;\n"],"mappings":";;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,oBAAoB;AAC3B,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgB,aAAa,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}