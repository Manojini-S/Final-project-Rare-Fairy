{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/Admin.js\",\n  _s = $RefreshSig$();\n// import './userdetails.css';\n// import './Admin.css';\n// import React, { useState, useEffect } from 'react';\n\n// const UserTable = () => {\n//     const [users, setUsers] = useState([]);\n//     const [error, setError] = useState('');\n//     const [selectedUser, setSelectedUser] = useState(null);\n//     const [editedName, setEditedName] = useState('');\n//     const [editedEmail, setEditedEmail] = useState('');\n//     const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = () => {\n//         fetch('http://localhost:3003/user/getUser')\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch users');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => setUsers(data))\n//             .catch(error => {\n//                 console.error('Error fetching users:', error);\n//                 setError('An error occurred while fetching users. Please try again later.');\n//             });\n//     };\n\n//     const handleEditClick = (user) => {\n//         setSelectedUser(user);\n//         setEditedName(user.Name);\n//         setEditedEmail(user.Email);\n//         setIsEditModalOpen(true);\n//     };\n\n//     const handleEditSave = (e) => {\n//         e.preventDefault();\n//         fetch(`http://localhost:3003/user/updateUser/${selectedUser._id}`, {\n//             method: 'PUT',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ Name: editedName, Email: editedEmail })\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Failed to update user');\n//                 }\n//                 setIsEditModalOpen(false);\n//                 fetchUsers();\n//             })\n//             .catch(error => {\n//                 console.error('Error updating user:', error);\n//                 setError('An error occurred while updating the user. Please try again later.');\n//             });\n//     };\n\n//     const handleDeleteClick = (userId) => {\n//         fetch(`http://localhost:3003/user/deleteUser/${userId}`, {\n//             method: 'DELETE'\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Failed to delete user');\n//                 }\n//                 fetchUsers();\n//             })\n//             .catch(error => {\n//                 console.error('Error deleting user:', error);\n//                 setError('An error occurred while deleting the user. Please try again later.');\n//             });\n//     };\n\n//     return (\n//         <div className=\"container-box\">\n//             {isEditModalOpen && selectedUser && (\n//                 <div className=\"edit-modal\">\n//                     <div className=\"modal-content\">\n//                         <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n//                         <h2>Edit User</h2>\n//                         <form onSubmit={handleEditSave}>\n//                             <label>Name:</label>\n//                             <input\n//                                 type=\"text\"\n//                                 value={editedName}\n//                                 onChange={(e) => setEditedName(e.target.value)}\n//                                 required\n//                             />\n//                             <label>Email:</label>\n//                             <input\n//                                 type=\"email\"\n//                                 value={editedEmail}\n//                                 onChange={(e) => setEditedEmail(e.target.value)}\n//                                 required\n//                             />\n//                             <button type=\"submit\">Save</button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             )}\n//             {error && <div className=\"error\">Error: {error}</div>}\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Email</th>\n//                         <th>Delete</th>\n//                         <th>Edit</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user._id}>\n//                             <td>{user.Name}</td>\n//                             <td>{user.Email}</td>\n//                             <td>\n//                                 <button className=\"delete\" onClick={() => handleDeleteClick(user._id)}>Delete</button>\n//                             </td>\n//                             <td>\n//                                 <button className=\"edit\" onClick={() => handleEditClick(user)}>Edit</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default UserTable;\n\nimport './userdetails.css';\nimport './Admin.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedEmail, setEditedEmail] = useState('');\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isConfirmationOpen, setIsConfirmationOpen] = useState(false);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = () => {\n    fetch('http://localhost:3003/user/getUser').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      return response.json();\n    }).then(data => setUsers(data)).catch(error => {\n      console.error('Error fetching users:', error);\n      setError('An error occurred while fetching users. Please try again later.');\n    });\n  };\n  const handleEditClick = user => {\n    setSelectedUser(user);\n    setIsConfirmationOpen(true);\n  };\n  const handleEditConfirm = () => {\n    setEditedName(selectedUser.Name);\n    setEditedEmail(selectedUser.Email);\n    setIsEditModalOpen(true);\n    setIsConfirmationOpen(false);\n  };\n  const handleEditCancel = () => {\n    setSelectedUser(null);\n    setIsConfirmationOpen(false);\n  };\n  const handleEditSave = e => {\n    e.preventDefault();\n    fetch(`http://localhost:3003/user/updateUser/${selectedUser._id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name: editedName,\n        Email: editedEmail\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update user');\n      }\n      setIsEditModalOpen(false);\n      fetchUsers();\n    }).catch(error => {\n      console.error('Error updating user:', error);\n      setError('An error occurred while updating the user. Please try again later.');\n    });\n  };\n  const handleDeleteClick = userId => {\n    fetch(`http://localhost:3003/user/deleteUser/${userId}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to delete user');\n      }\n      fetchUsers();\n    }).catch(error => {\n      console.error('Error deleting user:', error);\n      setError('An error occurred while deleting the user. Please try again later.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-box\",\n    children: [isConfirmationOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleEditCancel,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to edit this user?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditConfirm,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditCancel,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this), isEditModalOpen && selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: () => setIsEditModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditSave,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedName,\n            onChange: e => setEditedName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: editedEmail,\n            onChange: e => setEditedEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.Email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete\",\n              onClick: () => handleDeleteClick(user._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit\",\n              onClick: () => handleEditClick(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s(UserTable, \"uF2iKTcxgvXayaQ/chzwvRRIj/Q=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserTable","_s","users","setUsers","error","setError","selectedUser","setSelectedUser","editedName","setEditedName","editedEmail","setEditedEmail","isEditModalOpen","setIsEditModalOpen","isConfirmationOpen","setIsConfirmationOpen","fetchUsers","fetch","then","response","ok","Error","json","data","catch","console","handleEditClick","user","handleEditConfirm","Name","Email","handleEditCancel","handleEditSave","e","preventDefault","_id","method","headers","body","JSON","stringify","handleDeleteClick","userId","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","map","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/Admin.js"],"sourcesContent":["// import './userdetails.css';\n// import './Admin.css';\n// import React, { useState, useEffect } from 'react';\n\n// const UserTable = () => {\n//     const [users, setUsers] = useState([]);\n//     const [error, setError] = useState('');\n//     const [selectedUser, setSelectedUser] = useState(null);\n//     const [editedName, setEditedName] = useState('');\n//     const [editedEmail, setEditedEmail] = useState('');\n//     const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = () => {\n//         fetch('http://localhost:3003/user/getUser')\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch users');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => setUsers(data))\n//             .catch(error => {\n//                 console.error('Error fetching users:', error);\n//                 setError('An error occurred while fetching users. Please try again later.');\n//             });\n//     };\n\n//     const handleEditClick = (user) => {\n//         setSelectedUser(user);\n//         setEditedName(user.Name);\n//         setEditedEmail(user.Email);\n//         setIsEditModalOpen(true);\n//     };\n\n//     const handleEditSave = (e) => {\n//         e.preventDefault();\n//         fetch(`http://localhost:3003/user/updateUser/${selectedUser._id}`, {\n//             method: 'PUT',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ Name: editedName, Email: editedEmail })\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Failed to update user');\n//                 }\n//                 setIsEditModalOpen(false);\n//                 fetchUsers();\n//             })\n//             .catch(error => {\n//                 console.error('Error updating user:', error);\n//                 setError('An error occurred while updating the user. Please try again later.');\n//             });\n//     };\n\n//     const handleDeleteClick = (userId) => {\n//         fetch(`http://localhost:3003/user/deleteUser/${userId}`, {\n//             method: 'DELETE'\n//         })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Failed to delete user');\n//                 }\n//                 fetchUsers();\n//             })\n//             .catch(error => {\n//                 console.error('Error deleting user:', error);\n//                 setError('An error occurred while deleting the user. Please try again later.');\n//             });\n//     };\n\n//     return (\n//         <div className=\"container-box\">\n//             {isEditModalOpen && selectedUser && (\n//                 <div className=\"edit-modal\">\n//                     <div className=\"modal-content\">\n//                         <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n//                         <h2>Edit User</h2>\n//                         <form onSubmit={handleEditSave}>\n//                             <label>Name:</label>\n//                             <input\n//                                 type=\"text\"\n//                                 value={editedName}\n//                                 onChange={(e) => setEditedName(e.target.value)}\n//                                 required\n//                             />\n//                             <label>Email:</label>\n//                             <input\n//                                 type=\"email\"\n//                                 value={editedEmail}\n//                                 onChange={(e) => setEditedEmail(e.target.value)}\n//                                 required\n//                             />\n//                             <button type=\"submit\">Save</button>\n//                         </form>\n//                     </div>\n//                 </div>\n//             )}\n//             {error && <div className=\"error\">Error: {error}</div>}\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Email</th>\n//                         <th>Delete</th>\n//                         <th>Edit</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user._id}>\n//                             <td>{user.Name}</td>\n//                             <td>{user.Email}</td>\n//                             <td>\n//                                 <button className=\"delete\" onClick={() => handleDeleteClick(user._id)}>Delete</button>\n//                             </td>\n//                             <td>\n//                                 <button className=\"edit\" onClick={() => handleEditClick(user)}>Edit</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default UserTable;\n\n\n\n\n\nimport './userdetails.css';\nimport './Admin.css';\nimport React, { useState, useEffect } from 'react';\n\nconst UserTable = () => {\n    const [users, setUsers] = useState([]);\n    const [error, setError] = useState('');\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [editedName, setEditedName] = useState('');\n    const [editedEmail, setEditedEmail] = useState('');\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isConfirmationOpen, setIsConfirmationOpen] = useState(false);\n\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n\n    const fetchUsers = () => {\n        fetch('http://localhost:3003/user/getUser')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch users');\n                }\n                return response.json();\n            })\n            .then(data => setUsers(data))\n            .catch(error => {\n                console.error('Error fetching users:', error);\n                setError('An error occurred while fetching users. Please try again later.');\n            });\n    };\n\n    const handleEditClick = (user) => {\n        setSelectedUser(user);\n        setIsConfirmationOpen(true);\n    };\n\n    const handleEditConfirm = () => {\n        setEditedName(selectedUser.Name);\n        setEditedEmail(selectedUser.Email);\n        setIsEditModalOpen(true);\n        setIsConfirmationOpen(false);\n    };\n\n    const handleEditCancel = () => {\n        setSelectedUser(null);\n        setIsConfirmationOpen(false);\n    };\n\n    const handleEditSave = (e) => {\n        e.preventDefault();\n        fetch(`http://localhost:3003/user/updateUser/${selectedUser._id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ Name: editedName, Email: editedEmail })\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to update user');\n                }\n                setIsEditModalOpen(false);\n                fetchUsers();\n            })\n            .catch(error => {\n                console.error('Error updating user:', error);\n                setError('An error occurred while updating the user. Please try again later.');\n            });\n    };\n\n    const handleDeleteClick = (userId) => {\n        fetch(`http://localhost:3003/user/deleteUser/${userId}`, {\n            method: 'DELETE'\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to delete user');\n                }\n                fetchUsers();\n            })\n            .catch(error => {\n                console.error('Error deleting user:', error);\n                setError('An error occurred while deleting the user. Please try again later.');\n            });\n    };\n\n    return (\n        <div className=\"container-box\">\n            {isConfirmationOpen && (\n                <div className=\"confirmation-modal\">\n                    <div className=\"modal-content\">\n                        <span className=\"close\" onClick={handleEditCancel}>&times;</span>\n                        <h2>Confirm Edit</h2>\n                        <p>Are you sure you want to edit this user?</p>\n                        <button onClick={handleEditConfirm}>Yes</button>\n                        <button onClick={handleEditCancel}>No</button>\n                    </div>\n                </div>\n            )}\n            {isEditModalOpen && selectedUser && (\n                <div className=\"edit-modal\">\n                    <div className=\"modal-content\">\n                        <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n                        <h2>Edit User</h2>\n                        <form onSubmit={handleEditSave}>\n                            <label>Name:</label>\n                            <input\n                                type=\"text\"\n                                value={editedName}\n                                onChange={(e) => setEditedName(e.target.value)}\n                                required\n                            />\n                            <label>Email:</label>\n                            <input\n                                type=\"email\"\n                                value={editedEmail}\n                                onChange={(e) => setEditedEmail(e.target.value)}\n                                required\n                            />\n                            <button type=\"submit\">Save</button>\n                        </form>\n                    </div>\n                </div>\n            )}\n            {error && <div className=\"error\">Error: {error}</div>}\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Delete</th>\n                        <th>Edit</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map((user) => (\n                        <tr key={user._id}>\n                            <td>{user.Name}</td>\n                            <td>{user.Email}</td>\n                            <td>\n                                <button className=\"delete\" onClick={() => handleDeleteClick(user._id)}>Delete</button>\n                            </td>\n                            <td>\n                                <button className=\"edit\" onClick={() => handleEditClick(user)}>Edit</button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserTable;\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAO,mBAAmB;AAC1B,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEnEC,SAAS,CAAC,MAAM;IACZmB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACrBC,KAAK,CAAC,oCAAoC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIpB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACpB,KAAK,IAAI;MACZqB,OAAO,CAACrB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAAC,iEAAiE,CAAC;IAC/E,CAAC,CAAC;EACV,CAAC;EAED,MAAMqB,eAAe,GAAIC,IAAI,IAAK;IAC9BpB,eAAe,CAACoB,IAAI,CAAC;IACrBZ,qBAAqB,CAAC,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMa,iBAAiB,GAAGA,CAAA,KAAM;IAC5BnB,aAAa,CAACH,YAAY,CAACuB,IAAI,CAAC;IAChClB,cAAc,CAACL,YAAY,CAACwB,KAAK,CAAC;IAClCjB,kBAAkB,CAAC,IAAI,CAAC;IACxBE,qBAAqB,CAAC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC3BxB,eAAe,CAAC,IAAI,CAAC;IACrBQ,qBAAqB,CAAC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMiB,cAAc,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBjB,KAAK,CAAE,yCAAwCX,YAAY,CAAC6B,GAAI,EAAC,EAAE;MAC/DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,IAAI,EAAErB,UAAU;QAAEsB,KAAK,EAAEpB;MAAY,CAAC;IACjE,CAAC,CAAC,CACGQ,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACAR,kBAAkB,CAAC,KAAK,CAAC;MACzBG,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,CACDQ,KAAK,CAACpB,KAAK,IAAI;MACZqB,OAAO,CAACrB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,oEAAoE,CAAC;IAClF,CAAC,CAAC;EACV,CAAC;EAED,MAAMoC,iBAAiB,GAAIC,MAAM,IAAK;IAClCzB,KAAK,CAAE,yCAAwCyB,MAAO,EAAC,EAAE;MACrDN,MAAM,EAAE;IACZ,CAAC,CAAC,CACGlB,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACAL,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,CACDQ,KAAK,CAACpB,KAAK,IAAI;MACZqB,OAAO,CAACrB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,oEAAoE,CAAC;IAClF,CAAC,CAAC;EACV,CAAC;EAED,oBACIN,OAAA;IAAK4C,SAAS,EAAC,eAAe;IAAAC,QAAA,GACzB9B,kBAAkB,iBACff,OAAA;MAAK4C,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/B7C,OAAA;QAAK4C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1B7C,OAAA;UAAM4C,SAAS,EAAC,OAAO;UAACE,OAAO,EAAEd,gBAAiB;UAAAa,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjElD,OAAA;UAAA6C,QAAA,EAAI;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBlD,OAAA;UAAA6C,QAAA,EAAG;QAAwC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/ClD,OAAA;UAAQ8C,OAAO,EAAEjB,iBAAkB;UAAAgB,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChDlD,OAAA;UAAQ8C,OAAO,EAAEd,gBAAiB;UAAAa,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,EACArC,eAAe,IAAIN,YAAY,iBAC5BP,OAAA;MAAK4C,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvB7C,OAAA;QAAK4C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1B7C,OAAA;UAAM4C,SAAS,EAAC,OAAO;UAACE,OAAO,EAAEA,CAAA,KAAMhC,kBAAkB,CAAC,KAAK,CAAE;UAAA+B,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChFlD,OAAA;UAAA6C,QAAA,EAAI;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBlD,OAAA;UAAMmD,QAAQ,EAAElB,cAAe;UAAAY,QAAA,gBAC3B7C,OAAA;YAAA6C,QAAA,EAAO;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBlD,OAAA;YACIoD,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE5C,UAAW;YAClB6C,QAAQ,EAAGpB,CAAC,IAAKxB,aAAa,CAACwB,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;YAC/CG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACFlD,OAAA;YAAA6C,QAAA,EAAO;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrBlD,OAAA;YACIoD,IAAI,EAAC,OAAO;YACZC,KAAK,EAAE1C,WAAY;YACnB2C,QAAQ,EAAGpB,CAAC,IAAKtB,cAAc,CAACsB,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;YAChDG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACFlD,OAAA;YAAQoD,IAAI,EAAC,QAAQ;YAAAP,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,EACA7C,KAAK,iBAAIL,OAAA;MAAK4C,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,SAAO,EAACxC,KAAK;IAAA;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrDlD,OAAA;MAAA6C,QAAA,gBACI7C,OAAA;QAAA6C,QAAA,eACI7C,OAAA;UAAA6C,QAAA,gBACI7C,OAAA;YAAA6C,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACblD,OAAA;YAAA6C,QAAA,EAAI;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdlD,OAAA;YAAA6C,QAAA,EAAI;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACflD,OAAA;YAAA6C,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRlD,OAAA;QAAA6C,QAAA,EACK1C,KAAK,CAACsD,GAAG,CAAE7B,IAAI,iBACZ5B,OAAA;UAAA6C,QAAA,gBACI7C,OAAA;YAAA6C,QAAA,EAAKjB,IAAI,CAACE;UAAI;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBlD,OAAA;YAAA6C,QAAA,EAAKjB,IAAI,CAACG;UAAK;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBlD,OAAA;YAAA6C,QAAA,eACI7C,OAAA;cAAQ4C,SAAS,EAAC,QAAQ;cAACE,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAACd,IAAI,CAACQ,GAAG,CAAE;cAAAS,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC,eACLlD,OAAA;YAAA6C,QAAA,eACI7C,OAAA;cAAQ4C,SAAS,EAAC,MAAM;cAACE,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACC,IAAI,CAAE;cAAAiB,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5E,CAAC;QAAA,GARAtB,IAAI,CAACQ,GAAG;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAChD,EAAA,CApJID,SAAS;AAAAyD,EAAA,GAATzD,SAAS;AAsJf,eAAeA,SAAS;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}