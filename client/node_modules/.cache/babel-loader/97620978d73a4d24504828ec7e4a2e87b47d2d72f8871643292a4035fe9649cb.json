{"ast":null,"code":"\n\n// import React, { useState } from 'react';\n// import './Addproduct.css';\n\n// function ProductForm() {\n//   const [productName, setProductName] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [price, setPrice] = useState('');\n//   const [photo, setPhoto] = useState(null);\n//   const [errors, setErrors] = useState({});\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!productName) newErrors.productName = \"Product Name is required\";\n//     if (!description) newErrors.description = \"Description is required\";\n//     if (!price) newErrors.price = \"Price is required\";\n//     else if (isNaN(price) || price <= 0) newErrors.price = \"Price must be a positive number\";\n//     if (!photo) newErrors.photo = \"Photo is required\";\n//     return newErrors;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const newErrors = validate();\n//     if (Object.keys(newErrors).length > 0) {\n//       setErrors(newErrors);\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('name', productName);\n//     formData.append('description', description);\n//     formData.append('price', parseFloat(price));\n//     formData.append('photo', photo);\n\n//     try {\n//       const response = await fetch(`http://llocalhost:3003/image/upload`, {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       console.log('Success:', data);\n//       // Clear the form\n//       setProductName('');\n//       setDescription('');\n//       setPrice('');\n//       setPhoto(null);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"ProductForm\">\n//       <h1>Add Product</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={productName} \n//             onChange={(e) => setProductName(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Product Name</label>\n//           {errors.productName && <span className=\"error\">{errors.productName}</span>}\n//         </div>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={description} \n//             onChange={(e) => setDescription(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Description</label>\n//           {errors.description && <span className=\"error\">{errors.description}</span>}\n//         </div>\n//         {/* <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={price} \n//             onChange={(e) => setPrice(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Price</label>\n//           {errors.price && <span className=\"error\">{errors.price}</span>}\n//         </div> */}\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"file\" \n//             required \n//             onChange={(e) => setPhoto(e.target.files[0])} \n//           />\n//           <span></span>\n//           <label></label>\n//           {errors.photo && <span className=\"error\">{errors.photo}</span>}\n//         </div>\n//         <input className='ap' type=\"submit\" value=\"Add Product\" />\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ProductForm;","map":{"version":3,"names":[],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/Addproduct.js"],"sourcesContent":["\n\n// import React, { useState } from 'react';\n// import './Addproduct.css';\n\n// function ProductForm() {\n//   const [productName, setProductName] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [price, setPrice] = useState('');\n//   const [photo, setPhoto] = useState(null);\n//   const [errors, setErrors] = useState({});\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!productName) newErrors.productName = \"Product Name is required\";\n//     if (!description) newErrors.description = \"Description is required\";\n//     if (!price) newErrors.price = \"Price is required\";\n//     else if (isNaN(price) || price <= 0) newErrors.price = \"Price must be a positive number\";\n//     if (!photo) newErrors.photo = \"Photo is required\";\n//     return newErrors;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const newErrors = validate();\n//     if (Object.keys(newErrors).length > 0) {\n//       setErrors(newErrors);\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('name', productName);\n//     formData.append('description', description);\n//     formData.append('price', parseFloat(price));\n//     formData.append('photo', photo);\n\n//     try {\n//       const response = await fetch(`http://llocalhost:3003/image/upload`, {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       console.log('Success:', data);\n//       // Clear the form\n//       setProductName('');\n//       setDescription('');\n//       setPrice('');\n//       setPhoto(null);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"ProductForm\">\n//       <h1>Add Product</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={productName} \n//             onChange={(e) => setProductName(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Product Name</label>\n//           {errors.productName && <span className=\"error\">{errors.productName}</span>}\n//         </div>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={description} \n//             onChange={(e) => setDescription(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Description</label>\n//           {errors.description && <span className=\"error\">{errors.description}</span>}\n//         </div>\n//         {/* <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={price} \n//             onChange={(e) => setPrice(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Price</label>\n//           {errors.price && <span className=\"error\">{errors.price}</span>}\n//         </div> */}\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"file\" \n//             required \n//             onChange={(e) => setPhoto(e.target.files[0])} \n//           />\n//           <span></span>\n//           <label></label>\n//           {errors.photo && <span className=\"error\">{errors.photo}</span>}\n//         </div>\n//         <input className='ap' type=\"submit\" value=\"Add Product\" />\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ProductForm;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}