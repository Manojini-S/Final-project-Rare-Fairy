{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Login.css';\n// import Navbar from '../Components/Navbar';\n\n// function LoginForm() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!email || !password) {\n//       alert('Please enter both email and password.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3003/usercreate/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('An error occurred while logging in.');\n//       }\n\n//       const data = await response.json();\n//       console.log(data.Role);\n\n//       if (data.Role === 'user') {\n//         alert('User login successful');\n//         navigate('/');\n//       } else if (data.Role === 'admin') {\n//         alert('Admin login successful');\n//         navigate('/dashboard');\n//       } else {\n//         alert('Invalid role.');\n//       }\n\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       alert('An error occurred while logging in. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className='login-body'>\n//         <div className='log'>\n//           <div className=\"Login-center\">\n//             <h1>Login</h1>\n//             <form method=\"post\" onSubmit={handleSubmit}>\n//               <div className=\"txt_field\">\n//                 <input type=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n//                 <span></span>\n//                 <label>Email</label>\n//               </div>\n//               <div className=\"txt_field\">\n//                 <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n//                 <span></span>\n//                 <label>Password</label>\n//               </div>\n//               <div className=\"pass\">Forgot Password?</div>\n//               <input type=\"submit\" value=\"Login\" />\n//               <div className=\"signup_link\">\n//                 Not a member? <a href=\"Register\">Signup</a>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginForm;\n\n// //final//\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Login.css';\n// import Navbar from '../Components/Navbar';\n\n// function LoginForm() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!email || !password) {\n//       alert('Please enter both email and password.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3003/usercreate/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('An error occurred while logging in.');\n//       }\n\n//       const data = await response.json();\n//       console.log(data.Role);\n\n//       if (data.Role === 'user') {\n//         alert(`${data.Name} login successful`);\n//         navigate('/'); // Redirect to the home page for regular users\n//       } else if (data.Role === 'Admin') {\n//         alert(`${data.Name} login successful`);\n//         navigate('/Dashboard'); // Redirect to the admin dashboard page\n//       } else {\n//         alert('Invalid role.');\n//       }\n\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       alert('An error occurred while logging in. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className='login-body'>\n//         <div className='log'>\n//           <div className=\"Login-center\">\n//             <h1>Login</h1>\n//             <form method=\"post\" onSubmit={handleSubmit}>\n//               <div className=\"txt_field\">\n//                 <input type=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n//                 <span></span>\n//                 <label>Email</label>\n//               </div>\n//               <div className=\"txt_field\">\n//                 <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n//                 <span></span>\n//                 <label>Password</label>\n//               </div>\n//               <div className=\"pass\">Forgot Password?</div>\n//               <input type=\"submit\" value=\"Login\" />\n//               <div className=\"signup_link\">\n//                 Not a member? <a href=\"Register\">Signup</a>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\nimport Navbar from '../Components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const validateForm = () => {\n    const errors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!email) {\n      errors.email = 'Email is required';\n    } else if (!emailRegex.test(email)) {\n      errors.email = 'Email is not valid';\n    }\n    if (!password) {\n      errors.password = 'Password is required';\n    } else if (password.length < 6) {\n      errors.password = 'Password must be at least 6 characters long';\n    }\n    return errors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3003/usercreate/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      const token = data.token; // Assuming your token is returned in the response\n\n      if (!response.ok) {\n        throw new Error('An error occurred while logging in.');\n      }\n      if (data.Role === 'user') {\n        alert(`${data.Name} login successful`);\n        localStorage.setItem('token', token);\n        navigate('/'); // Redirect to the home page for regular users\n      } else if (data.Role === 'Admin') {\n        alert(`${data.Name} login successful`);\n        localStorage.setItem('token', token);\n        navigate('/Dashboard'); // Redirect to the admin dashboard page\n      } else {\n        alert('Invalid role.');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n      alert('An error occurred while logging in. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Login-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            method: \"post\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"txt_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                required: true,\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"txt_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                required: true,\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pass\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"signup_link\",\n              children: [\"Not a member? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"Register\",\n                children: \"Signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginForm, \"TbCsIamWGxXFPloLN88a2jXOzMo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","email","setEmail","password","setPassword","errors","setErrors","navigate","validateForm","emailRegex","test","length","handleSubmit","e","preventDefault","validationErrors","Object","keys","response","fetch","method","headers","body","JSON","stringify","data","json","token","ok","Error","Role","alert","Name","localStorage","setItem","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","required","value","onChange","target","href","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Login.css';\n// import Navbar from '../Components/Navbar';\n\n// function LoginForm() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!email || !password) {\n//       alert('Please enter both email and password.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3003/usercreate/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('An error occurred while logging in.');\n//       }\n\n//       const data = await response.json();\n//       console.log(data.Role);\n\n//       if (data.Role === 'user') {\n//         alert('User login successful');\n//         navigate('/');\n//       } else if (data.Role === 'admin') {\n//         alert('Admin login successful');\n//         navigate('/dashboard');\n//       } else {\n//         alert('Invalid role.');\n//       }\n\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       alert('An error occurred while logging in. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className='login-body'>\n//         <div className='log'>\n//           <div className=\"Login-center\">\n//             <h1>Login</h1>\n//             <form method=\"post\" onSubmit={handleSubmit}>\n//               <div className=\"txt_field\">\n//                 <input type=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n//                 <span></span>\n//                 <label>Email</label>\n//               </div>\n//               <div className=\"txt_field\">\n//                 <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n//                 <span></span>\n//                 <label>Password</label>\n//               </div>\n//               <div className=\"pass\">Forgot Password?</div>\n//               <input type=\"submit\" value=\"Login\" />\n//               <div className=\"signup_link\">\n//                 Not a member? <a href=\"Register\">Signup</a>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginForm;\n\n\n\n\n\n\n\n// //final//\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Login.css';\n// import Navbar from '../Components/Navbar';\n\n// function LoginForm() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!email || !password) {\n//       alert('Please enter both email and password.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3003/usercreate/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('An error occurred while logging in.');\n//       }\n\n//       const data = await response.json();\n//       console.log(data.Role);\n\n//       if (data.Role === 'user') {\n//         alert(`${data.Name} login successful`);\n//         navigate('/'); // Redirect to the home page for regular users\n//       } else if (data.Role === 'Admin') {\n//         alert(`${data.Name} login successful`);\n//         navigate('/Dashboard'); // Redirect to the admin dashboard page\n//       } else {\n//         alert('Invalid role.');\n//       }\n\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       alert('An error occurred while logging in. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className='login-body'>\n//         <div className='log'>\n//           <div className=\"Login-center\">\n//             <h1>Login</h1>\n//             <form method=\"post\" onSubmit={handleSubmit}>\n//               <div className=\"txt_field\">\n//                 <input type=\"email\" required value={email} onChange={(e) => setEmail(e.target.value)} />\n//                 <span></span>\n//                 <label>Email</label>\n//               </div>\n//               <div className=\"txt_field\">\n//                 <input type=\"password\" required value={password} onChange={(e) => setPassword(e.target.value)} />\n//                 <span></span>\n//                 <label>Password</label>\n//               </div>\n//               <div className=\"pass\">Forgot Password?</div>\n//               <input type=\"submit\" value=\"Login\" />\n//               <div className=\"signup_link\">\n//                 Not a member? <a href=\"Register\">Signup</a>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\nimport Navbar from '../Components/Navbar';\n\nfunction LoginForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  const validateForm = () => {\n    const errors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (!email) {\n      errors.email = 'Email is required';\n    } else if (!emailRegex.test(email)) {\n      errors.email = 'Email is not valid';\n    }\n\n    if (!password) {\n      errors.password = 'Password is required';\n    } else if (password.length < 6) {\n      errors.password = 'Password must be at least 6 characters long';\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:3003/usercreate/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n      const token = data.token; // Assuming your token is returned in the response\n\n      if (!response.ok) {\n        throw new Error('An error occurred while logging in.');\n      }\n\n      if (data.Role === 'user') {\n        alert(`${data.Name} login successful`);\n        localStorage.setItem('token', token);\n        navigate('/'); // Redirect to the home page for regular users\n      } else if (data.Role === 'Admin') {\n        alert(`${data.Name} login successful`);\n        localStorage.setItem('token', token);\n        navigate('/Dashboard'); // Redirect to the admin dashboard page\n      } else {\n        alert('Invalid role.');\n      }\n\n    } catch (error) {\n      console.error('Error logging in:', error);\n      alert('An error occurred while logging in. Please try again later.');\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className='login-body'>\n        <div className='log'>\n          <div className=\"Login-center\">\n            <h1>Login</h1>\n            <form method=\"post\" onSubmit={handleSubmit}>\n              <div className=\"txt_field\">\n                <input\n                  type=\"email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n                <span></span>\n                <label>Email</label>\n                {errors.email && <span className=\"error\">{errors.email}</span>}\n              </div>\n              <div className=\"txt_field\">\n                <input\n                  type=\"password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <span></span>\n                <label>Password</label>\n                {errors.password && <span className=\"error\">{errors.password}</span>}\n              </div>\n              <div className=\"pass\">Forgot Password?</div>\n              <input type=\"submit\" value=\"Login\" />\n              <div className=\"signup_link\">\n                Not a member? <a href=\"Register\">Signup</a>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginForm;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAyBA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMgB,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}