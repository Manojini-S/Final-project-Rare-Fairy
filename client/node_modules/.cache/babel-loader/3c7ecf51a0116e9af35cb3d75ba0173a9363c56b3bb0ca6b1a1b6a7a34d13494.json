{"ast":null,"code":"// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { toast } from 'react-toastify';\n// import { useNavigate } from 'react-router-dom';\n// import './Login.css';\n// import Navbar from '../Components/Navbar';\n\n// function LoginForm() {\n//   const [Email, setEmail] = useState('');\n//   const [Password, setPassword] = useState('');\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const validateForm = () => {\n//     const errors = {};\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n//     if (!Email) {\n//       errors.email = 'Email is required';\n//     } else if (!emailRegex.test(Email)) {\n//       errors.email = 'Email is not valid';\n//     }\n\n//     if (!Password) {\n//       errors.password = 'Password is required';\n//     } else if (Password.length < 6) {\n//       errors.password = 'Password must be at least 6 characters long';\n//     }\n\n//     return errors;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateForm();\n//     if (Object.keys(validationErrors).length > 0) {\n//       setErrors(validationErrors);\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3003/usercreate/login', {\n//         method: 'POST',\n//         headers: {\n//           'Accept': 'application/json',\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ Email, Password }),\n//       });\n\n//       const data = await response.json();\n//       const token = data.token; // Assuming your token is returned in the response\n//       const user = data.user;\n\n//       if (!response.ok) {\n//         throw new Error('An error occurred while logging in.');\n//       }\n\n//       if (user.Role === 'user') {\n//         navigate('/'); // Redirect to the home page for regular users\n//         toast.success(`${user.Name} login successful`);\n//         localStorage.setItem('token', token);\n//       } else if (user.Role === 'Admin') {\n//         navigate('/Dashboard'); // Redirect to the admin dashboard page\n//         toast.success(`${user.Name} login successful`);\n//         localStorage.setItem('token', token);\n//       } else {\n//         toast.error('Invalid role.');\n//       }\n\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       toast.error('An error occurred while logging in. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className='login-body'>\n//         <div className='log'>\n//           <div className=\"Login-center\">\n//             <h1>Login</h1>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"txt_field\">\n//                 <input\n//                   type=\"email\"\n//                   required\n//                   value={Email}\n//                   onChange={(e) => setEmail(e.target.value)}\n//                 />\n//                 <span></span>\n//                 <label>Email</label>\n//                 {errors.email && <span className=\"error\">{errors.email}</span>}\n//               </div>\n//               <div className=\"txt_field\">\n//                 <input\n//                   type=\"password\"\n//                   required\n//                   value={Password}\n//                   onChange={(e) => setPassword(e.target.value)}\n//                 />\n//                 <span></span>\n//                 <label>Password</label>\n//                 {errors.password && <span className=\"error\">{errors.password}</span>}\n//               </div>\n//               <div className=\"pass\">Forgot Password?</div>\n//               <input type=\"submit\" value=\"Login\" />\n//               <div className=\"signup_link\">\n//                 Not a member? <Link to=\"/Register\">Signup</Link>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginForm;","map":{"version":3,"names":[],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import { toast } from 'react-toastify';\n// import { useNavigate } from 'react-router-dom';\n// import './Login.css';\n// import Navbar from '../Components/Navbar';\n\n// function LoginForm() {\n//   const [Email, setEmail] = useState('');\n//   const [Password, setPassword] = useState('');\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const validateForm = () => {\n//     const errors = {};\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n//     if (!Email) {\n//       errors.email = 'Email is required';\n//     } else if (!emailRegex.test(Email)) {\n//       errors.email = 'Email is not valid';\n//     }\n\n//     if (!Password) {\n//       errors.password = 'Password is required';\n//     } else if (Password.length < 6) {\n//       errors.password = 'Password must be at least 6 characters long';\n//     }\n\n//     return errors;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateForm();\n//     if (Object.keys(validationErrors).length > 0) {\n//       setErrors(validationErrors);\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:3003/usercreate/login', {\n//         method: 'POST',\n//         headers: {\n//           'Accept': 'application/json',\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ Email, Password }),\n//       });\n\n//       const data = await response.json();\n//       const token = data.token; // Assuming your token is returned in the response\n//       const user = data.user;\n\n//       if (!response.ok) {\n//         throw new Error('An error occurred while logging in.');\n//       }\n\n//       if (user.Role === 'user') {\n//         navigate('/'); // Redirect to the home page for regular users\n//         toast.success(`${user.Name} login successful`);\n//         localStorage.setItem('token', token);\n//       } else if (user.Role === 'Admin') {\n//         navigate('/Dashboard'); // Redirect to the admin dashboard page\n//         toast.success(`${user.Name} login successful`);\n//         localStorage.setItem('token', token);\n//       } else {\n//         toast.error('Invalid role.');\n//       }\n\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       toast.error('An error occurred while logging in. Please try again later.');\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className='login-body'>\n//         <div className='log'>\n//           <div className=\"Login-center\">\n//             <h1>Login</h1>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"txt_field\">\n//                 <input\n//                   type=\"email\"\n//                   required\n//                   value={Email}\n//                   onChange={(e) => setEmail(e.target.value)}\n//                 />\n//                 <span></span>\n//                 <label>Email</label>\n//                 {errors.email && <span className=\"error\">{errors.email}</span>}\n//               </div>\n//               <div className=\"txt_field\">\n//                 <input\n//                   type=\"password\"\n//                   required\n//                   value={Password}\n//                   onChange={(e) => setPassword(e.target.value)}\n//                 />\n//                 <span></span>\n//                 <label>Password</label>\n//                 {errors.password && <span className=\"error\">{errors.password}</span>}\n//               </div>\n//               <div className=\"pass\">Forgot Password?</div>\n//               <input type=\"submit\" value=\"Login\" />\n//               <div className=\"signup_link\">\n//                 Not a member? <Link to=\"/Register\">Signup</Link>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginForm;\n\n\n\n\n\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}