{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./Addproduct.css\";\n// import Navbar from \"../Components/Navbar\";\n\n// const ProductForm = () => {\n// \tconst [productName, setProductName] = useState(\"\");\n// \tconst [description, setDescription] = useState(\"\");\n// \tconst [categoryName, setCategoryName] = useState(\"\");\n// \tconst [photo, setPhoto] = useState(null);\n// \tconst [errors, setErrors] = useState({});\n// \tconst [categories, setCategories] = useState([]);\n\n// \tconst dummyCategories = [\n// \t\t{ id: 1, name: \"Emproidry\" },\n// \t\t{ id: 2, name: \"Salwar designs\" },\n// \t\t{ id: 3, name: \"Bridel\" },\n// \t\t{ id: 4, name: \"Zardosi designs\" },\n// \t\t{ id: 5, name: \"Legenha designs\" },\n// \t\t{ id: 5, name: \"Simple blouse designs\" },\n// \t];\n\n// \tuseEffect(() => {\n// \t\t// Simulate fetching categories from an API\n// \t\t// Replace with actual API call in your application\n// \t\tsetCategories(dummyCategories);\n// \t}, []);\n\n// \tconst validate = () => {\n// \t\tconst newErrors = {};\n// \t\tif (!productName) newErrors.productName = \"Product Name is required\";\n// \t\tif (!description) newErrors.description = \"Description is required\";\n// \t\tif (!categoryName) newErrors.categoryName = \"Category Name is required\";\n// \t\tif (!photo) newErrors.photo = \"Photo is required\";\n// \t\treturn newErrors;\n// \t};\n\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\tconst newErrors = validate();\n// \t\tif (Object.keys(newErrors).length > 0) {\n// \t\t\tsetErrors(newErrors);\n// \t\t\treturn;\n// \t\t}\n\n// \t\tconst formData = new FormData();\n// \t\tformData.append(\"ProductName\", productName);\n// \t\tformData.append(\"Description\", description);\n// \t\tformData.append(\"CategoryName\", categoryName);\n// \t\tformData.append(\"photo\", photo);\n\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"http://localhost:3003/image/upload\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\tbody: formData,\n// \t\t\t});\n\n// \t\t\tif (!response.ok) {\n// \t\t\t\tconst errorText = await response.text();\n// \t\t\t\tthrow new Error(\n// \t\t\t\t\t`HTTP error! Status: ${response.status}, Message: ${errorText}`\n// \t\t\t\t);\n// \t\t\t}\n\n// \t\t\tconst data = await response.json();\n// \t\t\ttoast.success(\"Product added successfully!\");\n\n// \t\t\t// Clear the form\n// \t\t\tsetProductName(\"\");\n// \t\t\tsetDescription(\"\");\n// \t\t\tsetCategoryName(\"\");\n// \t\t\tsetPhoto(null);\n// \t\t\tsetErrors({});\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error:\", error);\n// \t\t\ttoast.error(\"Failed to add product. Please try again.\");\n// \t\t}\n// \t};\n\n// \treturn (\n// \t\t<>\n// \t\t\t<Navbar />\n\n// \t\t\t<div className=\"product-form-container\">\n// \t\t\t\t<ToastContainer />\n\n// \t\t\t\t<h2 className=\"add\">Add Product</h2>\n// \t\t\t\t<form onSubmit={handleSubmit} className=\"product-form\">\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"categoryName\">Category Name:</label>\n// \t\t\t\t\t\t<select\n// \t\t\t\t\t\t\tid=\"categoryName\"\n// \t\t\t\t\t\t\tvalue={categoryName}\n// \t\t\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<option value=\"\">Select category</option>\n// \t\t\t\t\t\t\t{categories.map((category) => (\n// \t\t\t\t\t\t\t\t<option key={category.id} value={category.name}>\n// \t\t\t\t\t\t\t\t\t{category.name}\n// \t\t\t\t\t\t\t\t</option>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</select>\n// \t\t\t\t\t\t{errors.categoryName && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.categoryName}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"productName\">Product Name:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tid=\"productName\"\n// \t\t\t\t\t\t\tvalue={productName}\n// \t\t\t\t\t\t\tonChange={(e) => setProductName(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tplaceholder=\"Enter product name\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.productName && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.productName}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"description\">Description:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tid=\"description\"\n// \t\t\t\t\t\t\tvalue={description}\n// \t\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tplaceholder=\"Enter description\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.description && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.description}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"photo\">Photo:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"file\"\n// \t\t\t\t\t\t\tid=\"photo\"\n// \t\t\t\t\t\t\tonChange={(e) => setPhoto(e.target.files[0])}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.photo && <span className=\"error\">{errors.photo}</span>}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"submit\" className=\"btn-submit\">\n// \t\t\t\t\t\tAdd Product\n// \t\t\t\t\t</button>\n// \t\t\t\t</form>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n// };\n\n// export default ProductForm;\n\n// import React, { useState } from 'react';\n//   import './Addproduct.css';; // Importing CSS for styling\n\n// const AddProductForm = () => {\n//   // State variables to store form data\n//   const [productName, setProductName] = useState('');\n//   const [productPrice, setProductPrice] = useState('');\n\n//   // Function to handle form submission\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     // You can handle form submission logic here\n//     // For example, you can send data to an API or perform other actions\n//     console.log('Product Name:', productName);\n//     console.log('Product Price:', productPrice);\n//     // Reset form fields\n//     setProductName('');\n//     setProductPrice('');\n//   };\n\n//   return (\n//     <div className=\"add-product-form-container\">\n//       <h2>Add Product</h2>\n//       <form onSubmit={handleSubmit} className=\"add-product-form\">\n//         <div className=\"form-group\">\n//           <label htmlFor=\"productName\">Product Name:</label>\n//           <input\n//             type=\"text\"\n//             id=\"productName\"\n//             value={productName}\n//             onChange={(e) => setProductName(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter product name\"\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"productPrice\">Product Price:</label>\n//           <input\n//             type=\"number\"\n//             id=\"productPrice\"\n//             value={productPrice}\n//             onChange={(e) => setProductPrice(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter product price\"\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn-submit\">\n//           Add Product\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddProductForm;","map":{"version":3,"names":[],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/Addproduct.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./Addproduct.css\";\n// import Navbar from \"../Components/Navbar\";\n\n// const ProductForm = () => {\n// \tconst [productName, setProductName] = useState(\"\");\n// \tconst [description, setDescription] = useState(\"\");\n// \tconst [categoryName, setCategoryName] = useState(\"\");\n// \tconst [photo, setPhoto] = useState(null);\n// \tconst [errors, setErrors] = useState({});\n// \tconst [categories, setCategories] = useState([]);\n\n// \tconst dummyCategories = [\n// \t\t{ id: 1, name: \"Emproidry\" },\n// \t\t{ id: 2, name: \"Salwar designs\" },\n// \t\t{ id: 3, name: \"Bridel\" },\n// \t\t{ id: 4, name: \"Zardosi designs\" },\n// \t\t{ id: 5, name: \"Legenha designs\" },\n// \t\t{ id: 5, name: \"Simple blouse designs\" },\n// \t];\n\n// \tuseEffect(() => {\n// \t\t// Simulate fetching categories from an API\n// \t\t// Replace with actual API call in your application\n// \t\tsetCategories(dummyCategories);\n// \t}, []);\n\n// \tconst validate = () => {\n// \t\tconst newErrors = {};\n// \t\tif (!productName) newErrors.productName = \"Product Name is required\";\n// \t\tif (!description) newErrors.description = \"Description is required\";\n// \t\tif (!categoryName) newErrors.categoryName = \"Category Name is required\";\n// \t\tif (!photo) newErrors.photo = \"Photo is required\";\n// \t\treturn newErrors;\n// \t};\n\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\tconst newErrors = validate();\n// \t\tif (Object.keys(newErrors).length > 0) {\n// \t\t\tsetErrors(newErrors);\n// \t\t\treturn;\n// \t\t}\n\n// \t\tconst formData = new FormData();\n// \t\tformData.append(\"ProductName\", productName);\n// \t\tformData.append(\"Description\", description);\n// \t\tformData.append(\"CategoryName\", categoryName);\n// \t\tformData.append(\"photo\", photo);\n\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"http://localhost:3003/image/upload\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\tbody: formData,\n// \t\t\t});\n\n// \t\t\tif (!response.ok) {\n// \t\t\t\tconst errorText = await response.text();\n// \t\t\t\tthrow new Error(\n// \t\t\t\t\t`HTTP error! Status: ${response.status}, Message: ${errorText}`\n// \t\t\t\t);\n// \t\t\t}\n\n// \t\t\tconst data = await response.json();\n// \t\t\ttoast.success(\"Product added successfully!\");\n\n// \t\t\t// Clear the form\n// \t\t\tsetProductName(\"\");\n// \t\t\tsetDescription(\"\");\n// \t\t\tsetCategoryName(\"\");\n// \t\t\tsetPhoto(null);\n// \t\t\tsetErrors({});\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error:\", error);\n// \t\t\ttoast.error(\"Failed to add product. Please try again.\");\n// \t\t}\n// \t};\n\n// \treturn (\n// \t\t<>\n// \t\t\t<Navbar />\n\n// \t\t\t<div className=\"product-form-container\">\n// \t\t\t\t<ToastContainer />\n\n// \t\t\t\t<h2 className=\"add\">Add Product</h2>\n// \t\t\t\t<form onSubmit={handleSubmit} className=\"product-form\">\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"categoryName\">Category Name:</label>\n// \t\t\t\t\t\t<select\n// \t\t\t\t\t\t\tid=\"categoryName\"\n// \t\t\t\t\t\t\tvalue={categoryName}\n// \t\t\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<option value=\"\">Select category</option>\n// \t\t\t\t\t\t\t{categories.map((category) => (\n// \t\t\t\t\t\t\t\t<option key={category.id} value={category.name}>\n// \t\t\t\t\t\t\t\t\t{category.name}\n// \t\t\t\t\t\t\t\t</option>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</select>\n// \t\t\t\t\t\t{errors.categoryName && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.categoryName}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"productName\">Product Name:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tid=\"productName\"\n// \t\t\t\t\t\t\tvalue={productName}\n// \t\t\t\t\t\t\tonChange={(e) => setProductName(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tplaceholder=\"Enter product name\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.productName && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.productName}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"description\">Description:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\tid=\"description\"\n// \t\t\t\t\t\t\tvalue={description}\n// \t\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t\tplaceholder=\"Enter description\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.description && (\n// \t\t\t\t\t\t\t<span className=\"error\">{errors.description}</span>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t</div>\n\n// \t\t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t\t<label htmlFor=\"photo\">Photo:</label>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\ttype=\"file\"\n// \t\t\t\t\t\t\tid=\"photo\"\n// \t\t\t\t\t\t\tonChange={(e) => setPhoto(e.target.files[0])}\n// \t\t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t{errors.photo && <span className=\"error\">{errors.photo}</span>}\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<button type=\"submit\" className=\"btn-submit\">\n// \t\t\t\t\t\tAdd Product\n// \t\t\t\t\t</button>\n// \t\t\t\t</form>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n// };\n\n// export default ProductForm;\n\n\n\n// import React, { useState } from 'react';\n//   import './Addproduct.css';; // Importing CSS for styling\n\n// const AddProductForm = () => {\n//   // State variables to store form data\n//   const [productName, setProductName] = useState('');\n//   const [productPrice, setProductPrice] = useState('');\n\n//   // Function to handle form submission\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     // You can handle form submission logic here\n//     // For example, you can send data to an API or perform other actions\n//     console.log('Product Name:', productName);\n//     console.log('Product Price:', productPrice);\n//     // Reset form fields\n//     setProductName('');\n//     setProductPrice('');\n//   };\n\n//   return (\n//     <div className=\"add-product-form-container\">\n//       <h2>Add Product</h2>\n//       <form onSubmit={handleSubmit} className=\"add-product-form\">\n//         <div className=\"form-group\">\n//           <label htmlFor=\"productName\">Product Name:</label>\n//           <input\n//             type=\"text\"\n//             id=\"productName\"\n//             value={productName}\n//             onChange={(e) => setProductName(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter product name\"\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"productPrice\">Product Price:</label>\n//           <input\n//             type=\"number\"\n//             id=\"productPrice\"\n//             value={productPrice}\n//             onChange={(e) => setProductPrice(e.target.value)}\n//             className=\"form-control\"\n//             placeholder=\"Enter product price\"\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn-submit\">\n//           Add Product\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddProductForm;\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}