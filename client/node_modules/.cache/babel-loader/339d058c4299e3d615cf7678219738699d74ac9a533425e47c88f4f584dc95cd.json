{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/Addproduct.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./Addproduct.css\"; \n// import Navbar  from \"../Components/Navbar\";\n\n// const ProductForm = () => {\n// \tconst [productName, setProductName] = useState(\"\");\n// \tconst [description, setDescription] = useState(\"\");\n// \tconst [categoryName, setCategoryName] = useState(\"\");\n// \tconst [photo, setPhoto] = useState(null);\n// \tconst [errors, setErrors] = useState({});\n// \tconst [categories, setCategories] = useState([]);\n\n// \tconst dummyCategories = [\n// \t\t{ id: 1, name: \"Emproidry\" },\n// \t\t{ id: 2, name: \"Salwar designs\" },\n// \t\t{ id: 3, name: \"Bridel\" },\n// \t\t{ id: 4, name: \"Zardosi designs\" },\n//         { id: 5, name: \"Legenha designs\" },\n//     { id: 5, name: \"Simple blouse designs\" },\n// \t];\n\n// \tuseEffect(() => {\n// \t\t// Simulate fetching categories from an API\n// \t\t// Replace with actual API call in your application\n// \t\tsetCategories(dummyCategories);\n// \t}, []);\n\n// \tconst validate = () => {\n// \t\tconst newErrors = {};\n// \t\tif (!productName) newErrors.productName = \"Product Name is required\";\n// \t\tif (!description) newErrors.description = \"Description is required\";\n// \t\tif (!categoryName) newErrors.categoryName = \"Category Name is required\";\n// \t\tif (!photo) newErrors.photo = \"Photo is required\";\n// \t\treturn newErrors;\n// \t};\n\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\tconst newErrors = validate();\n// \t\tif (Object.keys(newErrors).length > 0) {\n// \t\t\tsetErrors(newErrors);\n// \t\t\treturn;\n// \t\t}\n\n// \t\tconst formData = new FormData();\n// \t\tformData.append(\"ProductName\", productName);\n// \t\tformData.append(\"Description\", description);\n// \t\tformData.append(\"CategoryName\", categoryName);\n// \t\tformData.append(\"photo\", photo);\n\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"http://localhost:3003/image/upload\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\tbody: formData,\n// \t\t\t});\n\n// \t\t\tif (!response.ok) {\n// \t\t\t\tconst errorText = await response.text(); \n// \t\t\t\tthrow new Error(\n// \t\t\t\t\t`HTTP error! Status: ${response.status}, Message: ${errorText}`\n// \t\t\t\t);\n// \t\t\t}\n\n// \t\t\tconst data = await response.json();\n// \t\t\ttoast.success(\"Product added successfully!\");\n\n// \t\t\t// Clear the form\n// \t\t\tsetProductName(\"\");\n// \t\t\tsetDescription(\"\");\n// \t\t\tsetCategoryName(\"\");\n// \t\t\tsetPhoto(null);\n// \t\t\tsetErrors({});\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error:\", error);\n// \t\t\ttoast.error(\"Failed to add product. Please try again.\");\n// \t\t}\n// \t};\n\n// \treturn (\n//     <>\n//     <Navbar/>\n\n// \t\t<div className=\"product-form-container\">\n// \t\t\t<ToastContainer />\n\n// \t\t\t<h2 className=\"add\">Add Product</h2>\n// \t\t\t<form onSubmit={handleSubmit} className=\"product-form\">\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<label htmlFor=\"categoryName\">Category Name:</label>\n// \t\t\t\t\t<select\n// \t\t\t\t\t\tid=\"categoryName\"\n// \t\t\t\t\t\tvalue={categoryName}\n// \t\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n// \t\t\t\t\t\tclassName=\"form-control\"\n\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<option value=\"\">Select category</option>\n// \t\t\t\t\t\t{categories.map((category) => (\n// \t\t\t\t\t\t\t<option key={category.id} value={category.name}>\n// \t\t\t\t\t\t\t\t{category.name}\n// \t\t\t\t\t\t\t</option>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</select>\n// \t\t\t\t\t{errors.categoryName && (\n// \t\t\t\t\t\t<span className=\"error\">{errors.categoryName}</span>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<label htmlFor=\"productName\">Product Name:</label>\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\tid=\"productName\"\n// \t\t\t\t\t\tvalue={productName}\n// \t\t\t\t\t\tonChange={(e) => setProductName(e.target.value)}\n// \t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\tplaceholder=\"Enter product name\"\n\n// \t\t\t\t\t/>\n// \t\t\t\t\t{errors.productName && (\n// \t\t\t\t\t\t<span className=\"error\">{errors.productName}</span>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<label htmlFor=\"description\">Description:</label>\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\tid=\"description\"\n// \t\t\t\t\t\tvalue={description}\n// \t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n// \t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\tplaceholder=\"Enter description\"\n\n// \t\t\t\t\t/>\n// \t\t\t\t\t{errors.description && (\n// \t\t\t\t\t\t<span className=\"error\">{errors.description}</span>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<label htmlFor=\"photo\">Photo:</label>\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"file\"\n// \t\t\t\t\t\tid=\"photo\"\n// \t\t\t\t\t\tonChange={(e) => setPhoto(e.target.files[0])}\n// \t\t\t\t\t\tclassName=\"form-control\"\n\n// \t\t\t\t\t/>\n// \t\t\t\t\t{errors.photo && <span className=\"error\">{errors.photo}</span>}\n// \t\t\t\t</div>\n// \t\t\t\t<button type=\"submit\" className=\"btn-submit\">\n// \t\t\t\t\tAdd Product\n// \t\t\t\t</button>\n// \t\t\t</form>\n// \t\t</div>\n//     </>\n// \t);\n// };\n\n// export default ProductForm;\n\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Addproduct.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductForm() {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [description, setDescription] = useState('');\n  const [categoryName, setCategoryName] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [errors, setErrors] = useState({});\n  const validate = () => {\n    const newErrors = {};\n    if (!productName) newErrors.productName = \"Product Name is required\";\n    if (!description) newErrors.description = \"Description is required\";\n    if (!categoryName) newErrors.categoryName = \"Category Name is required\";\n    if (!photo) newErrors.photo = \"Photo is required\";\n    return newErrors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = validate();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    const formData = new FormData();\n    formData.append('ProductName', productName);\n    formData.append('Description', description);\n    formData.append('CategoryName', categoryName);\n    formData.append('photo', photo);\n    try {\n      const response = await fetch('http://localhost:3003/image/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text(); // Get error text for debugging\n        throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorText}`);\n      }\n      const data = await response.json();\n      toast.success('Product added successfully!');\n\n      // Clear the form\n      setProductName('');\n      setDescription('');\n      setCategoryName('');\n      setPhoto(null);\n      setErrors({});\n\n      // Fetch the updated list of products if necessary\n      // fetchProducts(); // Uncomment if defined elsewhere\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error('Failed to add product. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProductForm\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txt_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: categoryName,\n          onChange: e => setCategoryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), errors.categoryName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.categoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txt_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: productName,\n          onChange: e => setProductName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Product Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), errors.productName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txt_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txt_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"photo\",\n          required: true,\n          onChange: e => setPhoto(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), errors.photo && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.photo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"ap\",\n        type: \"submit\",\n        value: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductForm, \"EupTKHXfmeM+vaM9O5STqfH/odI=\");\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","jsxDEV","_jsxDEV","ProductForm","_s","productName","setProductName","description","setDescription","categoryName","setCategoryName","photo","setPhoto","errors","setErrors","validate","newErrors","handleSubmit","e","preventDefault","Object","keys","length","formData","FormData","append","response","fetch","method","body","ok","errorText","text","Error","status","data","json","success","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","value","onChange","target","name","files","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/Addproduct.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import \"./Addproduct.css\"; \n// import Navbar  from \"../Components/Navbar\";\n\n// const ProductForm = () => {\n// \tconst [productName, setProductName] = useState(\"\");\n// \tconst [description, setDescription] = useState(\"\");\n// \tconst [categoryName, setCategoryName] = useState(\"\");\n// \tconst [photo, setPhoto] = useState(null);\n// \tconst [errors, setErrors] = useState({});\n// \tconst [categories, setCategories] = useState([]);\n\n\n// \tconst dummyCategories = [\n// \t\t{ id: 1, name: \"Emproidry\" },\n// \t\t{ id: 2, name: \"Salwar designs\" },\n// \t\t{ id: 3, name: \"Bridel\" },\n// \t\t{ id: 4, name: \"Zardosi designs\" },\n//         { id: 5, name: \"Legenha designs\" },\n//     { id: 5, name: \"Simple blouse designs\" },\n// \t];\n\n// \tuseEffect(() => {\n// \t\t// Simulate fetching categories from an API\n// \t\t// Replace with actual API call in your application\n// \t\tsetCategories(dummyCategories);\n// \t}, []);\n\n// \tconst validate = () => {\n// \t\tconst newErrors = {};\n// \t\tif (!productName) newErrors.productName = \"Product Name is required\";\n// \t\tif (!description) newErrors.description = \"Description is required\";\n// \t\tif (!categoryName) newErrors.categoryName = \"Category Name is required\";\n// \t\tif (!photo) newErrors.photo = \"Photo is required\";\n// \t\treturn newErrors;\n// \t};\n\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\tconst newErrors = validate();\n// \t\tif (Object.keys(newErrors).length > 0) {\n// \t\t\tsetErrors(newErrors);\n// \t\t\treturn;\n// \t\t}\n\n// \t\tconst formData = new FormData();\n// \t\tformData.append(\"ProductName\", productName);\n// \t\tformData.append(\"Description\", description);\n// \t\tformData.append(\"CategoryName\", categoryName);\n// \t\tformData.append(\"photo\", photo);\n\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"http://localhost:3003/image/upload\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\tbody: formData,\n// \t\t\t});\n\n// \t\t\tif (!response.ok) {\n// \t\t\t\tconst errorText = await response.text(); \n// \t\t\t\tthrow new Error(\n// \t\t\t\t\t`HTTP error! Status: ${response.status}, Message: ${errorText}`\n// \t\t\t\t);\n// \t\t\t}\n\n// \t\t\tconst data = await response.json();\n// \t\t\ttoast.success(\"Product added successfully!\");\n\n// \t\t\t// Clear the form\n// \t\t\tsetProductName(\"\");\n// \t\t\tsetDescription(\"\");\n// \t\t\tsetCategoryName(\"\");\n// \t\t\tsetPhoto(null);\n// \t\t\tsetErrors({});\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error:\", error);\n// \t\t\ttoast.error(\"Failed to add product. Please try again.\");\n// \t\t}\n// \t};\n\n// \treturn (\n//     <>\n//     <Navbar/>\n\n// \t\t<div className=\"product-form-container\">\n// \t\t\t<ToastContainer />\n      \n// \t\t\t<h2 className=\"add\">Add Product</h2>\n// \t\t\t<form onSubmit={handleSubmit} className=\"product-form\">\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<label htmlFor=\"categoryName\">Category Name:</label>\n// \t\t\t\t\t<select\n// \t\t\t\t\t\tid=\"categoryName\"\n// \t\t\t\t\t\tvalue={categoryName}\n// \t\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n// \t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<option value=\"\">Select category</option>\n// \t\t\t\t\t\t{categories.map((category) => (\n// \t\t\t\t\t\t\t<option key={category.id} value={category.name}>\n// \t\t\t\t\t\t\t\t{category.name}\n// \t\t\t\t\t\t\t</option>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</select>\n// \t\t\t\t\t{errors.categoryName && (\n// \t\t\t\t\t\t<span className=\"error\">{errors.categoryName}</span>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<label htmlFor=\"productName\">Product Name:</label>\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\tid=\"productName\"\n// \t\t\t\t\t\tvalue={productName}\n// \t\t\t\t\t\tonChange={(e) => setProductName(e.target.value)}\n// \t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\tplaceholder=\"Enter product name\"\n\t\t\t\t\t\n// \t\t\t\t\t/>\n// \t\t\t\t\t{errors.productName && (\n// \t\t\t\t\t\t<span className=\"error\">{errors.productName}</span>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<label htmlFor=\"description\">Description:</label>\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\tid=\"description\"\n// \t\t\t\t\t\tvalue={description}\n// \t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n// \t\t\t\t\t\tclassName=\"form-control\"\n// \t\t\t\t\t\tplaceholder=\"Enter description\"\n\t\t\t\t\t\t\n// \t\t\t\t\t/>\n// \t\t\t\t\t{errors.description && (\n// \t\t\t\t\t\t<span className=\"error\">{errors.description}</span>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n\n// \t\t\t\t<div className=\"form-group\">\n// \t\t\t\t\t<label htmlFor=\"photo\">Photo:</label>\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"file\"\n// \t\t\t\t\t\tid=\"photo\"\n// \t\t\t\t\t\tonChange={(e) => setPhoto(e.target.files[0])}\n// \t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\n// \t\t\t\t\t/>\n// \t\t\t\t\t{errors.photo && <span className=\"error\">{errors.photo}</span>}\n// \t\t\t\t</div>\n// \t\t\t\t<button type=\"submit\" className=\"btn-submit\">\n// \t\t\t\t\tAdd Product\n// \t\t\t\t</button>\n// \t\t\t</form>\n// \t\t</div>\n//     </>\n// \t);\n// };\n\n// export default ProductForm;\n\n\n\n\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Addproduct.css';\n\nfunction ProductForm() {\n  const [productName, setProductName] = useState('');\n  const [description, setDescription] = useState('');\n  const [categoryName, setCategoryName] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [errors, setErrors] = useState({});\n\n  const validate = () => {\n    const newErrors = {};\n    if (!productName) newErrors.productName = \"Product Name is required\";\n    if (!description) newErrors.description = \"Description is required\";\n    if (!categoryName) newErrors.categoryName = \"Category Name is required\";\n    if (!photo) newErrors.photo = \"Photo is required\";\n    return newErrors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = validate();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('ProductName', productName);\n    formData.append('Description', description);\n    formData.append('CategoryName', categoryName);\n    formData.append('photo', photo);\n\n    try {\n      const response = await fetch('http://localhost:3003/image/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text(); // Get error text for debugging\n        throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorText}`);\n      }\n\n      const data = await response.json();\n      toast.success('Product added successfully!');\n\n      // Clear the form\n      setProductName('');\n      setDescription('');\n      setCategoryName('');\n      setPhoto(null);\n      setErrors({});\n\n      // Fetch the updated list of products if necessary\n      // fetchProducts(); // Uncomment if defined elsewhere\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error('Failed to add product. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"ProductForm\">\n      <ToastContainer />\n      <span>Add Product</span>\n      <form onSubmit={handleSubmit}>\n        <div className=\"txt_field\">\n          <input \n            type=\"text\" \n            required \n            value={categoryName} \n            onChange={(e) => setCategoryName(e.target.value)} \n          />\n          <span></span>\n          <label>Category Name</label>\n          {errors.categoryName && <span className=\"error\">{errors.categoryName}</span>}\n        </div>\n        <div className=\"txt_field\">\n          <input \n            type=\"text\" \n            required \n            value={productName} \n            onChange={(e) => setProductName(e.target.value)} \n          />\n          <span></span>\n          <label>Product Name</label>\n          {errors.productName && <span className=\"error\">{errors.productName}</span>}\n        </div>\n        <div className=\"txt_field\">\n          <input \n            type=\"text\" \n            required \n            value={description} \n            onChange={(e) => setDescription(e.target.value)} \n          />\n          <span></span>\n          <label>Description</label>\n          {errors.description && <span className=\"error\">{errors.description}</span>}\n        </div>\n        <div className=\"txt_field\">\n          <input \n            type=\"file\" \n            name=\"photo\"\n            required \n            onChange={(e) => setPhoto(e.target.files[0])} \n          />\n          <span></span>\n          <label>Image</label>\n          {errors.photo && <span className=\"error\">{errors.photo}</span>}\n        </div>\n        <input className='ap' type=\"submit\" value=\"Add Product\" />\n      </form>\n    </div>\n  );\n}\n\nexport default ProductForm;\n\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,MAAM,EAAEC,SAAS,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}