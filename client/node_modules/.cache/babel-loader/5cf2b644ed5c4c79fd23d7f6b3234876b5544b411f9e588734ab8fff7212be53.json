{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import \"./Navbar.css\";\n// import Logo from \"../Assets/logo3.png\";\n// import { toast } from \"react-toastify\";\n\n// const Nav = () => {\n//   // State to track user login status\n//   const [loggedIn, setLoggedIn] = useState(false);\n\n//   // Check for token in local storage when component mounts\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     if (token) {\n//       setLoggedIn(true);\n//     }\n//   }, []);\n\n//   // Handle logout\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     setLoggedIn(false);\n//     toast.success(\"Logout successfully!\");\n//   };\n\n//   return (\n//     <>\n//       <nav className=\"navbar\">\n//         <div className=\"logo\">\n//           <img src={Logo} alt=\"Logo\" />\n//         </div>\n//         <ul className=\"nav-links\">\n//           <li>\n//             <Link to=\"/\">Home</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/AboutUs\">About Us</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/AriDesignscard\">Products</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/ContactUs\">Contact Us</Link>\n//           </li>\n//           {/* Conditionally render Logout link if user is logged in */}\n//           {loggedIn ? (\n//             <li>\n//               <Link to=\"/login\" onClick={handleLogout}>\n//                 Logout\n//               </Link>\n//             </li>\n//           ) : (\n//             <li>\n//               <Link to=\"/Login\">Login</Link>\n//             </li>\n//           )}\n//         </ul>\n//       </nav>\n//     </>\n//   );\n// };\n\n// export default Nav;","map":{"version":3,"names":[],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Components/Navbar.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import \"./Navbar.css\";\n// import Logo from \"../Assets/logo3.png\";\n// import { toast } from \"react-toastify\";\n\n// const Nav = () => {\n//   // State to track user login status\n//   const [loggedIn, setLoggedIn] = useState(false);\n\n//   // Check for token in local storage when component mounts\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     if (token) {\n//       setLoggedIn(true);\n//     }\n//   }, []);\n\n//   // Handle logout\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     setLoggedIn(false);\n//     toast.success(\"Logout successfully!\");\n//   };\n\n//   return (\n//     <>\n//       <nav className=\"navbar\">\n//         <div className=\"logo\">\n//           <img src={Logo} alt=\"Logo\" />\n//         </div>\n//         <ul className=\"nav-links\">\n//           <li>\n//             <Link to=\"/\">Home</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/AboutUs\">About Us</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/AriDesignscard\">Products</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/ContactUs\">Contact Us</Link>\n//           </li>\n//           {/* Conditionally render Logout link if user is logged in */}\n//           {loggedIn ? (\n//             <li>\n//               <Link to=\"/login\" onClick={handleLogout}>\n//                 Logout\n//               </Link>\n//             </li>\n//           ) : (\n//             <li>\n//               <Link to=\"/Login\">Login</Link>\n//             </li>\n//           )}\n//         </ul>\n//       </nav>\n//     </>\n//   );\n// };\n\n// export default Nav;\n\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}