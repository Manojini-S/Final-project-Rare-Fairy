{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/Addproduct.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import './Addproduct.css';\n\n// function ProductForm() {\n//   const [productName, setProductName] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [categoryName, setCategoryName] = useState('');\n//   const [photo, setPhoto] = useState(null);\n//   const [errors, setErrors] = useState({});\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!productName) newErrors.productName = \"Product Name is required\";\n//     if (!description) newErrors.description = \"Description is required\";\n//     if (!categoryName) newErrors.categoryName = \"Category Name is required\";\n//     if (!photo) newErrors.photo = \"Photo is required\";\n//     return newErrors;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const newErrors = validate();\n//     if (Object.keys(newErrors).length > 0) {\n//       setErrors(newErrors);\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('ProductName', productName);\n//     formData.append('Description', description);\n//     formData.append('CategoryName', categoryName);\n//     formData.append('photo', photo);\n\n//     try {\n//       const response = await fetch('http://localhost:3003/image/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         const errorText = await response.text(); // Get error text for debugging\n//         throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorText}`);\n//       }\n\n//       const data = await response.json();\n//       toast.success('Product added successfully!');\n\n//       // Clear the form\n//       setProductName('');\n//       setDescription('');\n//       setCategoryName('');\n//       setPhoto(null);\n//       setErrors({});\n\n//       // Fetch the updated list of products if necessary\n//       // fetchProducts(); // Uncomment if defined elsewhere\n//     } catch (error) {\n//       console.error('Error:', error);\n//       toast.error('Failed to add product. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"ProductForm\">\n//       <ToastContainer />\n//       <span>Add Product</span>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={categoryName} \n//             onChange={(e) => setCategoryName(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Category Name</label>\n//           {errors.categoryName && <span className=\"error\">{errors.categoryName}</span>}\n//         </div>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={productName} \n//             onChange={(e) => setProductName(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Product Name</label>\n//           {errors.productName && <span className=\"error\">{errors.productName}</span>}\n//         </div>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={description} \n//             onChange={(e) => setDescription(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Description</label>\n//           {errors.description && <span className=\"error\">{errors.description}</span>}\n//         </div>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"file\" \n//             name=\"photo\"\n//             required \n//             onChange={(e) => setPhoto(e.target.files[0])} \n//           />\n//           <span></span>\n//           <label>Image</label>\n//           {errors.photo && <span className=\"error\">{errors.photo}</span>}\n//         </div>\n//         <input className='ap' type=\"submit\" value=\"Add Product\" />\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ProductForm;\n\nimport React, { useState } from 'react';\nimport './AddProductForm.css'; // Importing CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProductForm = () => {\n  _s();\n  // State variables to store form data\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    // You can handle form submission logic here\n    // For example, you can send data to an API or perform other actions\n    console.log('Product Name:', productName);\n    console.log('Product Price:', productPrice);\n    // Reset form fields\n    setProductName('');\n    setProductPrice('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-product-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-product-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productName\",\n          children: \"Product Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"productName\",\n          value: productName,\n          onChange: e => setProductName(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter product name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productPrice\",\n          children: \"Product Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"productPrice\",\n          value: productPrice,\n          onChange: e => setProductPrice(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter product price\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-submit\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(AddProductForm, \"8hMDzejkHsRnH5jqGSGpruVUi0M=\");\n_c = AddProductForm;\nexport default AddProductForm;\nvar _c;\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddProductForm","_s","productName","setProductName","productPrice","setProductPrice","handleSubmit","event","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/Addproduct.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import './Addproduct.css';\n\n// function ProductForm() {\n//   const [productName, setProductName] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [categoryName, setCategoryName] = useState('');\n//   const [photo, setPhoto] = useState(null);\n//   const [errors, setErrors] = useState({});\n\n//   const validate = () => {\n//     const newErrors = {};\n//     if (!productName) newErrors.productName = \"Product Name is required\";\n//     if (!description) newErrors.description = \"Description is required\";\n//     if (!categoryName) newErrors.categoryName = \"Category Name is required\";\n//     if (!photo) newErrors.photo = \"Photo is required\";\n//     return newErrors;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const newErrors = validate();\n//     if (Object.keys(newErrors).length > 0) {\n//       setErrors(newErrors);\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('ProductName', productName);\n//     formData.append('Description', description);\n//     formData.append('CategoryName', categoryName);\n//     formData.append('photo', photo);\n\n//     try {\n//       const response = await fetch('http://localhost:3003/image/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         const errorText = await response.text(); // Get error text for debugging\n//         throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorText}`);\n//       }\n\n//       const data = await response.json();\n//       toast.success('Product added successfully!');\n\n//       // Clear the form\n//       setProductName('');\n//       setDescription('');\n//       setCategoryName('');\n//       setPhoto(null);\n//       setErrors({});\n\n//       // Fetch the updated list of products if necessary\n//       // fetchProducts(); // Uncomment if defined elsewhere\n//     } catch (error) {\n//       console.error('Error:', error);\n//       toast.error('Failed to add product. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"ProductForm\">\n//       <ToastContainer />\n//       <span>Add Product</span>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={categoryName} \n//             onChange={(e) => setCategoryName(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Category Name</label>\n//           {errors.categoryName && <span className=\"error\">{errors.categoryName}</span>}\n//         </div>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={productName} \n//             onChange={(e) => setProductName(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Product Name</label>\n//           {errors.productName && <span className=\"error\">{errors.productName}</span>}\n//         </div>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"text\" \n//             required \n//             value={description} \n//             onChange={(e) => setDescription(e.target.value)} \n//           />\n//           <span></span>\n//           <label>Description</label>\n//           {errors.description && <span className=\"error\">{errors.description}</span>}\n//         </div>\n//         <div className=\"txt_field\">\n//           <input \n//             type=\"file\" \n//             name=\"photo\"\n//             required \n//             onChange={(e) => setPhoto(e.target.files[0])} \n//           />\n//           <span></span>\n//           <label>Image</label>\n//           {errors.photo && <span className=\"error\">{errors.photo}</span>}\n//         </div>\n//         <input className='ap' type=\"submit\" value=\"Add Product\" />\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default ProductForm;\n\n\nimport React, { useState } from 'react';\nimport './AddProductForm.css'; // Importing CSS for styling\n\nconst AddProductForm = () => {\n  // State variables to store form data\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // You can handle form submission logic here\n    // For example, you can send data to an API or perform other actions\n    console.log('Product Name:', productName);\n    console.log('Product Price:', productPrice);\n    // Reset form fields\n    setProductName('');\n    setProductPrice('');\n  };\n\n  return (\n    <div className=\"add-product-form-container\">\n      <h2>Add Product</h2>\n      <form onSubmit={handleSubmit} className=\"add-product-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"productName\">Product Name:</label>\n          <input\n            type=\"text\"\n            id=\"productName\"\n            value={productName}\n            onChange={(e) => setProductName(e.target.value)}\n            className=\"form-control\"\n            placeholder=\"Enter product name\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"productPrice\">Product Price:</label>\n          <input\n            type=\"number\"\n            id=\"productPrice\"\n            value={productPrice}\n            onChange={(e) => setProductPrice(e.target.value)}\n            className=\"form-control\"\n            placeholder=\"Enter product price\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn-submit\">\n          Add Product\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddProductForm;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}