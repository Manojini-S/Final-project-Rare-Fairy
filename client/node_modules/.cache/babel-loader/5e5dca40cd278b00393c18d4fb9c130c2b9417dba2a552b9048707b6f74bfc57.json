{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/product.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\n// import Modal from '../Components/Modal'; // Assuming Modal.js is in the correct directory\n// import './productadmin.css';\n// import AdminDashboard from './Dashboard';\n\n// function Admin() {\n//     const [products, setProducts] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//     const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n//     const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n//     const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:3003/image/getImg')\n//             .then(response => setProducts(response.data))\n//             .catch(error => {\n//                 console.error('Error fetching products:', error);\n//                 setError('An error occurred while fetching products. Please try again later.');\n//             });\n//     }, []);\n\n//     const handleEdit = (product) => {\n//         setSelectedProduct(product);\n//         setEditConfirmationOpen(true);\n//     };\n\n//     const handleEditConfirm = () => {\n//         setIsEditModalOpen(true);\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditCancel = () => {\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditSave = (e) => {\n//         e.preventDefault();\n//         // Your logic to save edited product details\n//         // Update the products array with the edited product\n//         const updatedProducts = products.map(product => \n//             product._id === selectedProduct._id ? selectedProduct : product\n//         );\n//         setProducts(updatedProducts);\n//         setIsEditModalOpen(false); // Close the edit modal after saving\n//     };\n\n//     const handleDelete = (productId) => {\n//         setSelectedProduct(products.find(product => product._id === productId));\n//         setDeleteConfirmationOpen(true);\n//     };\n\n//     const handleDeleteConfirm = () => {\n//         // Your logic to confirm and delete product\n//         setProducts(products.filter(product => product._id !== selectedProduct._id));\n//         setDeleteConfirmationOpen(false); // Close the delete confirmation modal\n//     };\n\n//     const handleDeleteCancel = () => {\n//         setDeleteConfirmationOpen(false);\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setSelectedProduct({\n//             ...selectedProduct,\n//             [name]: value\n//         });\n//     };\n\n//     return (\n//         <>\n//         <div>\n//         <h1 className=\"order\">Rare Fairy Product</h1>\n//             {error ? (\n//                 <div className=\"error\">Error: {error}</div>\n//             ) : (\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Category Name</th>\n//                             <th>Product Name</th>\n//                             <th>Description</th>\n//                             <th>Image</th>\n//                             <th>Edit</th>\n//                             <th>Delete</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {products.map(product => (\n//                             <tr key={product._id}>\n//                                 <td>{product.CategoryName}</td>\n//                                 <td>{product.ProductName}</td>\n//                                 <td>{product.Description}</td>\n//                                 <td>\n//                                     <CloudinaryContext cloudName=\"your_cloud_name\">\n//                                         <Image publicId={product.imageUrl} alt={product.ProductName} style={{ height:\"60px\", width:\"60px\",borderRadius: \"30%\" }}>\n//                                             <Transformation width=\"50\" crop=\"scale\" />\n//                                         </Image>\n//                                     </CloudinaryContext>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"edit\" onClick={() => handleEdit(product)}>Edit</button>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"delete\" onClick={() => handleDelete(product._id)}>Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             )}\n\n//             <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n//                 <h2>Edit Product</h2>\n//                 {selectedProduct && (\n//                     <form onSubmit={handleEditSave}>\n//                         <label>\n//                             Category Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"CategoryName\"\n//                                 value={selectedProduct.CategoryName}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <label>\n//                             Product Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"ProductName\"\n//                                 value={selectedProduct.ProductName}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <label>\n//                             Description:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"Description\"\n//                                 value={selectedProduct.Description}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <button type=\"submit\">Save</button>\n//                         <button type=\"button\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n//                     </form>\n//                 )}\n//             </Modal>\n\n//             <div className=\"container-box\">\n//                 {isEditConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleEditCancel}>&times;</span>\n//                             <h2>Confirm Edit</h2>\n//                             <p>Are you sure you want to edit this product?</p>\n//                             <button onClick={handleEditConfirm}>Yes</button>\n//                             <button onClick={handleEditCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isDeleteConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleDeleteCancel}>&times;</span>\n//                             <h2>Confirm Delete</h2>\n//                             <p>Are you sure you want to delete this product?</p>\n//                             <button onClick={handleDeleteConfirm}>Yes</button>\n//                             <button onClick={handleDeleteCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isEditModalOpen && selectedProduct && (\n//                     <div className=\"edit-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n//                             <h2>Edit Product</h2>\n//                             <form onSubmit={handleEditSave}>\n//                                 <label>Category Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"CategoryName\"\n//                                     value={selectedProduct.CategoryName}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <label>Product Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"ProductName\"\n//                                     value={selectedProduct.ProductName}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <label>Description:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"Description\"\n//                                     value={selectedProduct.Description}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <button type=\"submit\">Save</button>\n//                             </form>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//         </>\n//     );\n// }\n\n// export default Admin;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport Modal from '../Components/Modal';\nimport './productadmin.css';\nimport AdminDashboard from './Dashboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n  const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage] = useState(10); // Change perPage as per your requirement\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    fetchProducts(currentPage);\n  }, [currentPage]);\n  const fetchProducts = async page => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:3003/image/getImg?page=${page}&limit=${perPage}`);\n      if (response.data.products) {\n        setProducts(response.data.products);\n        setTotalPages(Math.ceil(response.data.total / perPage));\n        setLoading(false);\n      } else {\n        setError('No products found.');\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      setError('An error occurred while fetching products. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const handleEdit = product => {\n    setSelectedProduct(product);\n    setEditConfirmationOpen(true);\n  };\n  const handleEditConfirm = () => {\n    setIsEditModalOpen(true);\n    setEditConfirmationOpen(false);\n  };\n  const handleEditCancel = () => {\n    setEditConfirmationOpen(false);\n  };\n  const handleEditSave = e => {\n    e.preventDefault();\n    // Simulated logic to save edited product details\n    // Replace this with actual logic to update the product on your backend\n    console.log('Saving edited product:', selectedProduct);\n    const updatedProducts = products.map(p => p._id === selectedProduct._id ? selectedProduct : p);\n    setProducts(updatedProducts);\n    setIsEditModalOpen(false);\n  };\n  const handleDelete = productId => {\n    setSelectedProduct(products.find(product => product._id === productId));\n    setDeleteConfirmationOpen(true);\n  };\n  const handleDeleteConfirm = () => {\n    // Simulated logic to delete product\n    // Replace this with actual logic to delete the product on your backend\n    console.log('Deleting product:', selectedProduct);\n    setProducts(products.filter(product => product._id !== selectedProduct._id));\n    setDeleteConfirmationOpen(false);\n  };\n  const handleDeleteCancel = () => {\n    setDeleteConfirmationOpen(false);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelectedProduct({\n      ...selectedProduct,\n      [name]: value\n    });\n  };\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"order\",\n        children: \"Rare Fairy Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.CategoryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.ProductName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(CloudinaryContext, {\n                cloudName: \"your_cloud_name\",\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  publicId: product.imageUrl,\n                  alt: product.ProductName,\n                  style: {\n                    height: '60px',\n                    width: '60px',\n                    borderRadius: '30%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Transformation, {\n                    width: \"50\",\n                    crop: \"scale\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => handleEdit(product),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => handleDelete(product._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 37\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onClose: () => setModalIsOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), selectedProduct && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditSave,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Category Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"CategoryName\",\n              value: selectedProduct.CategoryName,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Product Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"ProductName\",\n              value: selectedProduct.ProductName,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"Description\",\n              value: selectedProduct.Description,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setModalIsOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-box\",\n        children: [isEditConfirmationOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: handleEditCancel,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Confirm Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Are you sure you want to edit this product?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditConfirm,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditCancel,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this), isDeleteConfirmationOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: handleDeleteCancel,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Confirm Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Are you sure you want to delete this product?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteConfirm,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteCancel,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this), isEditModalOpen && selectedProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: () => setIsEditModalOpen(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Edit Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleEditSave,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Category Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"CategoryName\",\n                  value: selectedProduct.CategoryName,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Product Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"ProductName\",\n                  value: selectedProduct.ProductName,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"Description\",\n                  value: selectedProduct.Description,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevPage,\n          disabled: currentPage === 1,\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `Page ${currentPage} of ${totalPages}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: currentPage === totalPages,\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Admin, \"t3f7dfxR+VHLNpUK8n2y/68a2uI=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","Image","Transformation","CloudinaryContext","Modal","AdminDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","Admin","_s","products","setProducts","error","setError","loading","setLoading","modalIsOpen","setModalIsOpen","selectedProduct","setSelectedProduct","isEditConfirmationOpen","setEditConfirmationOpen","isDeleteConfirmationOpen","setDeleteConfirmationOpen","isEditModalOpen","setIsEditModalOpen","currentPage","setCurrentPage","perPage","totalPages","setTotalPages","fetchProducts","page","response","get","data","Math","ceil","total","console","handleEdit","product","handleEditConfirm","handleEditCancel","handleEditSave","e","preventDefault","log","updatedProducts","map","p","_id","handleDelete","productId","find","handleDeleteConfirm","filter","handleDeleteCancel","handleInputChange","name","value","target","handleNextPage","handlePrevPage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","CategoryName","ProductName","Description","cloudName","publicId","imageUrl","alt","style","height","width","borderRadius","crop","onClick","isOpen","onClose","onSubmit","type","onChange","disabled","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/product.js"],"sourcesContent":["\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\n// import Modal from '../Components/Modal'; // Assuming Modal.js is in the correct directory\n// import './productadmin.css';\n// import AdminDashboard from './Dashboard';\n\n// function Admin() {\n//     const [products, setProducts] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//     const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n//     const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n//     const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n//     useEffect(() => {\n//         axios.get('http://localhost:3003/image/getImg')\n//             .then(response => setProducts(response.data))\n//             .catch(error => {\n//                 console.error('Error fetching products:', error);\n//                 setError('An error occurred while fetching products. Please try again later.');\n//             });\n//     }, []);\n\n//     const handleEdit = (product) => {\n//         setSelectedProduct(product);\n//         setEditConfirmationOpen(true);\n//     };\n\n//     const handleEditConfirm = () => {\n//         setIsEditModalOpen(true);\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditCancel = () => {\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditSave = (e) => {\n//         e.preventDefault();\n//         // Your logic to save edited product details\n//         // Update the products array with the edited product\n//         const updatedProducts = products.map(product => \n//             product._id === selectedProduct._id ? selectedProduct : product\n//         );\n//         setProducts(updatedProducts);\n//         setIsEditModalOpen(false); // Close the edit modal after saving\n//     };\n\n//     const handleDelete = (productId) => {\n//         setSelectedProduct(products.find(product => product._id === productId));\n//         setDeleteConfirmationOpen(true);\n//     };\n\n//     const handleDeleteConfirm = () => {\n//         // Your logic to confirm and delete product\n//         setProducts(products.filter(product => product._id !== selectedProduct._id));\n//         setDeleteConfirmationOpen(false); // Close the delete confirmation modal\n//     };\n\n//     const handleDeleteCancel = () => {\n//         setDeleteConfirmationOpen(false);\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setSelectedProduct({\n//             ...selectedProduct,\n//             [name]: value\n//         });\n//     };\n\n//     return (\n//         <>\n//         <div>\n//         <h1 className=\"order\">Rare Fairy Product</h1>\n//             {error ? (\n//                 <div className=\"error\">Error: {error}</div>\n//             ) : (\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             <th>Category Name</th>\n//                             <th>Product Name</th>\n//                             <th>Description</th>\n//                             <th>Image</th>\n//                             <th>Edit</th>\n//                             <th>Delete</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {products.map(product => (\n//                             <tr key={product._id}>\n//                                 <td>{product.CategoryName}</td>\n//                                 <td>{product.ProductName}</td>\n//                                 <td>{product.Description}</td>\n//                                 <td>\n//                                     <CloudinaryContext cloudName=\"your_cloud_name\">\n//                                         <Image publicId={product.imageUrl} alt={product.ProductName} style={{ height:\"60px\", width:\"60px\",borderRadius: \"30%\" }}>\n//                                             <Transformation width=\"50\" crop=\"scale\" />\n//                                         </Image>\n//                                     </CloudinaryContext>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"edit\" onClick={() => handleEdit(product)}>Edit</button>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"delete\" onClick={() => handleDelete(product._id)}>Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             )}\n\n//             <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n//                 <h2>Edit Product</h2>\n//                 {selectedProduct && (\n//                     <form onSubmit={handleEditSave}>\n//                         <label>\n//                             Category Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"CategoryName\"\n//                                 value={selectedProduct.CategoryName}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <label>\n//                             Product Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"ProductName\"\n//                                 value={selectedProduct.ProductName}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <label>\n//                             Description:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"Description\"\n//                                 value={selectedProduct.Description}\n//                                 onChange={handleInputChange}\n//                             />\n//                         </label>\n//                         <button type=\"submit\">Save</button>\n//                         <button type=\"button\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n//                     </form>\n//                 )}\n//             </Modal>\n\n//             <div className=\"container-box\">\n//                 {isEditConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleEditCancel}>&times;</span>\n//                             <h2>Confirm Edit</h2>\n//                             <p>Are you sure you want to edit this product?</p>\n//                             <button onClick={handleEditConfirm}>Yes</button>\n//                             <button onClick={handleEditCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isDeleteConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleDeleteCancel}>&times;</span>\n//                             <h2>Confirm Delete</h2>\n//                             <p>Are you sure you want to delete this product?</p>\n//                             <button onClick={handleDeleteConfirm}>Yes</button>\n//                             <button onClick={handleDeleteCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isEditModalOpen && selectedProduct && (\n//                     <div className=\"edit-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n//                             <h2>Edit Product</h2>\n//                             <form onSubmit={handleEditSave}>\n//                                 <label>Category Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"CategoryName\"\n//                                     value={selectedProduct.CategoryName}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <label>Product Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"ProductName\"\n//                                     value={selectedProduct.ProductName}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <label>Description:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"Description\"\n//                                     value={selectedProduct.Description}\n//                                     onChange={handleInputChange}\n//                                 />\n//                                 <button type=\"submit\">Save</button>\n//                             </form>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n//         </div>\n//         </>\n//     );\n// }\n\n// export default Admin;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport Modal from '../Components/Modal';\nimport './productadmin.css';\nimport AdminDashboard from './Dashboard';\n\nconst Admin = () => {\n    const [products, setProducts] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n    const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [perPage] = useState(10); // Change perPage as per your requirement\n    const [totalPages, setTotalPages] = useState(0);\n\n    useEffect(() => {\n        fetchProducts(currentPage);\n    }, [currentPage]);\n\n    const fetchProducts = async (page) => {\n        try {\n            setLoading(true);\n            const response = await axios.get(`http://localhost:3003/image/getImg?page=${page}&limit=${perPage}`);\n            if (response.data.products) {\n                setProducts(response.data.products);\n                setTotalPages(Math.ceil(response.data.total / perPage));\n                setLoading(false);\n            } else {\n                setError('No products found.');\n                setLoading(false);\n            }\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            setError('An error occurred while fetching products. Please try again later.');\n            setLoading(false);\n        }\n    };\n\n    const handleEdit = (product) => {\n        setSelectedProduct(product);\n        setEditConfirmationOpen(true);\n    };\n\n    const handleEditConfirm = () => {\n        setIsEditModalOpen(true);\n        setEditConfirmationOpen(false);\n    };\n\n    const handleEditCancel = () => {\n        setEditConfirmationOpen(false);\n    };\n\n    const handleEditSave = (e) => {\n        e.preventDefault();\n        // Simulated logic to save edited product details\n        // Replace this with actual logic to update the product on your backend\n        console.log('Saving edited product:', selectedProduct);\n        const updatedProducts = products.map((p) =>\n            p._id === selectedProduct._id ? selectedProduct : p\n        );\n        setProducts(updatedProducts);\n        setIsEditModalOpen(false);\n    };\n\n    const handleDelete = (productId) => {\n        setSelectedProduct(products.find((product) => product._id === productId));\n        setDeleteConfirmationOpen(true);\n    };\n\n    const handleDeleteConfirm = () => {\n        // Simulated logic to delete product\n        // Replace this with actual logic to delete the product on your backend\n        console.log('Deleting product:', selectedProduct);\n        setProducts(products.filter((product) => product._id !== selectedProduct._id));\n        setDeleteConfirmationOpen(false);\n    };\n\n    const handleDeleteCancel = () => {\n        setDeleteConfirmationOpen(false);\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setSelectedProduct({\n            ...selectedProduct,\n            [name]: value,\n        });\n    };\n\n    const handleNextPage = () => {\n        if (currentPage < totalPages) {\n            setCurrentPage(currentPage + 1);\n        }\n    };\n\n    const handlePrevPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    };\n\n    return (\n        <>\n            <div>\n                <h1 className=\"order\">Rare Fairy Product</h1>\n                {loading ? (\n                    <div>Loading...</div>\n                ) : error ? (\n                    <div className=\"error\">Error: {error}</div>\n                ) : (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Category Name</th>\n                                <th>Product Name</th>\n                                <th>Description</th>\n                                <th>Image</th>\n                                <th>Edit</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((product) => (\n                                <tr key={product._id}>\n                                    <td>{product.CategoryName}</td>\n                                    <td>{product.ProductName}</td>\n                                    <td>{product.Description}</td>\n                                    <td>\n                                        <CloudinaryContext cloudName=\"your_cloud_name\">\n                                            <Image\n                                                publicId={product.imageUrl}\n                                                alt={product.ProductName}\n                                                style={{ height: '60px', width: '60px', borderRadius: '30%' }}\n                                            >\n                                                <Transformation width=\"50\" crop=\"scale\" />\n                                            </Image>\n                                        </CloudinaryContext>\n                                    </td>\n                                    <td>\n                                        <button className=\"edit\" onClick={() => handleEdit(product)}>\n                                            Edit\n                                        </button>\n                                    </td>\n                                    <td>\n                                        <button className=\"delete\" onClick={() => handleDelete(product._id)}>\n                                            Delete\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n\n                <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n                    <h2>Edit Product</h2>\n                    {selectedProduct && (\n                        <form onSubmit={handleEditSave}>\n                            <label>\n                                Category Name:\n                                <input\n                                    type=\"text\"\n                                    name=\"CategoryName\"\n                                    value={selectedProduct.CategoryName}\n                                    onChange={handleInputChange}\n                                />\n                            </label>\n                            <label>\n                                Product Name:\n                                <input\n                                    type=\"text\"\n                                    name=\"ProductName\"\n                                    value={selectedProduct.ProductName}\n                                    onChange={handleInputChange}\n                                />\n                            </label>\n                            <label>\n                                Description:\n                                <input\n                                    type=\"text\"\n                                    name=\"Description\"\n                                    value={selectedProduct.Description}\n                                    onChange={handleInputChange}\n                                />\n                            </label>\n                            <button type=\"submit\">Save</button>\n                            <button type=\"button\" onClick={() => setModalIsOpen(false)}>\n                                Cancel\n                            </button>\n                        </form>\n                    )}\n                </Modal>\n\n                <div className=\"container-box\">\n                    {isEditConfirmationOpen && (\n                        <div className=\"confirmation-modal\">\n                            <div className=\"modal-content\">\n                                <span className=\"close\" onClick={handleEditCancel}>\n                                    &times;\n                                </span>\n                                <h2>Confirm Edit</h2>\n                                <p>Are you sure you want to edit this product?</p>\n                                <button onClick={handleEditConfirm}>Yes</button>\n                                <button onClick={handleEditCancel}>No</button>\n                            </div>\n                        </div>\n                    )}\n                    {isDeleteConfirmationOpen && (\n                        <div className=\"confirmation-modal\">\n                            <div className=\"modal-content\">\n                                <span className=\"close\" onClick={handleDeleteCancel}>\n                                    &times;\n                                </span>\n                                <h2>Confirm Delete</h2>\n                                <p>Are you sure you want to delete this product?</p>\n                                <button onClick={handleDeleteConfirm}>Yes</button>\n                                <button onClick={handleDeleteCancel}>No</button>\n                            </div>\n                        </div>\n                    )}\n                    {isEditModalOpen && selectedProduct && (\n                        <div className=\"edit-modal\">\n                            <div className=\"modal-content\">\n                                <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>\n                                    &times;\n                                </span>\n                                <h2>Edit Product</h2>\n                                <form onSubmit={handleEditSave}>\n                                    <label>\n                                        Category Name:\n                                        <input\n                                            type=\"text\"\n                                            name=\"CategoryName\"\n                                            value={selectedProduct.CategoryName}\n                                            onChange={handleInputChange}\n                                        />\n                                    </label>\n                                    <label>\n                                        Product Name:\n                                        <input\n                                            type=\"text\"\n                                            name=\"ProductName\"\n                                            value={selectedProduct.ProductName}\n                                            onChange={handleInputChange}\n                                        />\n                                    </label>\n                                    <label>\n                                        Description:\n                                        <input\n                                            type=\"text\"\n                                            name=\"Description\"\n                                            value={selectedProduct.Description}\n                                            onChange={handleInputChange}\n                                        />\n                                    </label>\n                                    <button type=\"submit\">Save</button>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"pagination\">\n                    <button onClick={handlePrevPage} disabled={currentPage === 1}>\n                        Previous Page\n                    </button>\n                    <span>{`Page ${currentPage} of ${totalPages}`}</span>\n                    <button onClick={handleNextPage} disabled={currentPage === totalPages}>\n                        Next Page\n                    </button>\n                </div>\n            </div>\n            <AdminDashboard />\n        </>\n    );\n};\n\nexport default Admin;\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,cAAc,EAAEC,iBAAiB,QAAQ,kBAAkB;AAC3E,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,oBAAoB;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}