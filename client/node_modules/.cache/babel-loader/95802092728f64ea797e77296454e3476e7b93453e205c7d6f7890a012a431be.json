{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Modal from \"../Components/Modal\"; // Assuming Modal.js is correctly implemented and imported\n// import \"./productadmin.css\";\n// import AdminDashboard from \"./Dashboard\";\n// import emailjs from '@emailjs/browser';\n\n// function OrderList() {\n// \tconst [orders, setOrders] = useState([]);\n// \tconst [error, setError] = useState(null);\n// \tconst [modalIsOpen, setModalIsOpen] = useState(false);\n// \tconst [selectedOrder, setSelectedOrder] = useState(null);\n\n// \tuseEffect(() => {\n// \t\t// Fetch orders when component mounts\n// \t\taxios\n// \t\t\t.get(\"http://localhost:3003/order/orders\")\n// \t\t\t.then((response) => {\n// \t\t\t\tsetOrders(response.data); // Set fetched orders to state\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error fetching orders:\", error);\n// \t\t\t\tsetError(\"Failed to fetch orders. Please try again later.\");\n// \t\t\t});\n// \t}, []);\n\n// \tconst handleAccept = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"accepted\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order accepted:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error accepting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst handleReject = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"rejected\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order rejected:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error rejecting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst sendNotification = (order) => {\n// \t\taxios\n// \t\t\t.post(\"http://localhost:3003/order/notify\", order)\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Notification sent:\", response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error sending notification:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst openModal = (order) => {\n// \t\tsetSelectedOrder(order);\n// \t\tsetModalIsOpen(true);\n// \t};\n\n// \treturn (\n//         <>\n\n// \t\t<div>\n\n// \t\t\t<h1 className=\"order\">Order List</h1>\n// \t\t\t{error && <p>{error}</p>}\n// \t\t\t<table>\n// \t\t\t\t<thead>\n// \t\t\t\t\t<tr>\n// \t\t\t\t\t\t<th>Name</th>\n// \t\t\t\t\t\t<th>Gmail</th>\n// \t\t\t\t\t\t<th>Contact Number</th>\n// \t\t\t\t\t\t<th>Address</th>\n// \t\t\t\t\t\t<th>Deadline</th>\n// \t\t\t\t\t\t<th>Actions</th>\n// \t\t\t\t\t</tr>\n// \t\t\t\t</thead>\n// \t\t\t\t<tbody>\n// \t\t\t\t\t{orders.map((order) => (\n// \t\t\t\t\t\t<tr key={order._id}>\n// \t\t\t\t\t\t\t<td>{order.name}</td>\n// \t\t\t\t\t\t\t<td>{order.email}</td>\n// \t\t\t\t\t\t\t<td>{order.contactNumber}</td>\n// \t\t\t\t\t\t\t<td>{order.address}</td>\n// \t\t\t\t\t\t\t<td>{new Date(order.deadline).toLocaleDateString()}</td>\n// \t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t<button className=\"accept\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t\t<button className=\"reject\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t))}\n// \t\t\t\t</tbody>\n// \t\t\t</table>\n\n// \t\t\t{modalIsOpen && (\n// \t\t\t\t<Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n// \t\t\t\t\t<h2>Order Confirmation</h2>\n// \t\t\t\t\t{selectedOrder && (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<p>Order ID: {selectedOrder._id}</p>\n// \t\t\t\t\t\t\t<p>Name: {selectedOrder.name}</p>\n// \t\t\t\t\t\t\t<p>Contact Number: {selectedOrder.contactNumber}</p>\n// \t\t\t\t\t\t\t<p>Address: {selectedOrder.address}</p>\n// \t\t\t\t\t\t\t<p>Deadline: {selectedOrder.deadline}</p>\n// \t\t\t\t\t\t\t<p>Are you sure you want to accept/reject this order?</p>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleAccept(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleReject(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</Modal>\n// \t\t\t)}\n// \t\t</div>\n//         </>\n// \t);\n// }\n\n// export default OrderList;\n\n// import React, { useRef } from 'react';\n// import emailjs from '@emailjs/browser';\n\n//  function OrderList  () {\n//   const form = useRef();\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm('service_7v4vmve', 'template_gswksyh', form.current, {\n//         publicKey: 'hpy_Ow2NKTCTlRRDq',\n//       })\n//       .then(\n//         () => {\n//           console.log('SUCCESS!');\n//         },\n//         (error) => {\n//           console.log('FAILED...', error.text);\n//         },\n//       );\n//   };\n\n//   return (\n//     <form ref={form} onSubmit={sendEmail}>\n//       <label>Name</label>\n//       <input type=\"text\" name=\"user_name\" />\n//       <label>Email</label>\n//       <input type=\"email\" name=\"user_email\" />\n//       <label>Message</label>\n//       <textarea name=\"message\" />\n//       <input type=\"submit\" value=\"Send\" />\n//     </form>\n//   );\n// };\n// export default OrderList;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../Components/Modal\"; // Assuming Modal.js is correctly implemented and imported\nimport \"./productadmin.css\";\nimport AdminDashboard from \"./Dashboard\";\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OrderList() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [isEmailFormOpen, setIsEmailFormOpen] = useState(false);\n  const form = useRef();\n  useEffect(() => {\n    // Fetch orders when component mounts\n    axios.get(\"http://localhost:3003/order/orders\").then(response => {\n      setOrders(response.data); // Set fetched orders to state\n    }).catch(error => {\n      console.error(\"Error fetching orders:\", error);\n      setError(\"Failed to fetch orders. Please try again later.\");\n    });\n  }, []);\n  const handleAccept = orderId => {\n    axios.patch(`http://localhost:3003/order/orders/${orderId}`, {\n      status: \"accepted\"\n    }).then(response => {\n      console.log(\"Order accepted:\", response.data);\n      setOrders(orders.map(order => order._id === orderId ? response.data : order));\n      sendNotification(response.data);\n      setIsEmailFormOpen(true); // Open the email form after accepting the order\n    }).catch(error => {\n      console.error(\"Error accepting order:\", error);\n    });\n  };\n  const handleReject = orderId => {\n    axios.patch(`http://localhost:3003/order/orders/${orderId}`, {\n      status: \"rejected\"\n    }).then(response => {\n      console.log(\"Order rejected:\", response.data);\n      setOrders(orders.map(order => order._id === orderId ? response.data : order));\n      sendNotification(response.data);\n    }).catch(error => {\n      console.error(\"Error rejecting order:\", error);\n    });\n  };\n  const sendNotification = order => {\n    axios.post(\"http://localhost:3003/order/notify\", order).then(response => {\n      console.log(\"Notification sent:\", response.data);\n    }).catch(error => {\n      console.error(\"Error sending notification:\", error);\n    });\n  };\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm('service_7v4vmve', 'template_gswksyh', form.current, 'hpy_Ow2NKTCTlRRDq').then(() => {\n      console.log('SUCCESS!');\n      setIsEmailFormOpen(false); // Close the email form after sending the email\n    }, error => {\n      console.log('FAILED...', error.text);\n    });\n  };\n  const openModal = order => {\n    setSelectedOrder(order);\n    setModalIsOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"order\",\n        children: \"Order List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.contactNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(order.deadline).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"accept\",\n                onClick: () => openModal(order),\n                children: \"Accept\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"reject\",\n                onClick: () => openModal(order),\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onClose: () => setModalIsOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Order Confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }, this), selectedOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Order ID: \", selectedOrder._id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", selectedOrder.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Contact Number: \", selectedOrder.contactNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Address: \", selectedOrder.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Deadline: \", selectedOrder.deadline]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to accept/reject this order?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleAccept(selectedOrder._id);\n              setModalIsOpen(false);\n            },\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleReject(selectedOrder._id);\n              setModalIsOpen(false);\n            },\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }, this), isEmailFormOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n        ref: form,\n        onSubmit: sendEmail,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Send Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"user_name\",\n          defaultValue: selectedOrder === null || selectedOrder === void 0 ? void 0 : selectedOrder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"user_email\",\n          defaultValue: selectedOrder === null || selectedOrder === void 0 ? void 0 : selectedOrder.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(OrderList, \"ZKRZ0UZFAiX/Z/eFkDhyvXLO0Ik=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Modal","AdminDashboard","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderList","_s","orders","setOrders","error","setError","modalIsOpen","setModalIsOpen","selectedOrder","setSelectedOrder","isEmailFormOpen","setIsEmailFormOpen","form","get","then","response","data","catch","console","handleAccept","orderId","patch","status","log","map","order","_id","sendNotification","handleReject","post","sendEmail","e","preventDefault","sendForm","current","text","openModal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","email","contactNumber","address","Date","deadline","toLocaleDateString","onClick","isOpen","onClose","ref","onSubmit","type","defaultValue","value","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Modal from \"../Components/Modal\"; // Assuming Modal.js is correctly implemented and imported\n// import \"./productadmin.css\";\n// import AdminDashboard from \"./Dashboard\";\n// import emailjs from '@emailjs/browser';\n\n// function OrderList() {\n// \tconst [orders, setOrders] = useState([]);\n// \tconst [error, setError] = useState(null);\n// \tconst [modalIsOpen, setModalIsOpen] = useState(false);\n// \tconst [selectedOrder, setSelectedOrder] = useState(null);\n\n// \tuseEffect(() => {\n// \t\t// Fetch orders when component mounts\n// \t\taxios\n// \t\t\t.get(\"http://localhost:3003/order/orders\")\n// \t\t\t.then((response) => {\n// \t\t\t\tsetOrders(response.data); // Set fetched orders to state\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error fetching orders:\", error);\n// \t\t\t\tsetError(\"Failed to fetch orders. Please try again later.\");\n// \t\t\t});\n// \t}, []);\n\n// \tconst handleAccept = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"accepted\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order accepted:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error accepting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst handleReject = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"rejected\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order rejected:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error rejecting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst sendNotification = (order) => {\n// \t\taxios\n// \t\t\t.post(\"http://localhost:3003/order/notify\", order)\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Notification sent:\", response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error sending notification:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst openModal = (order) => {\n// \t\tsetSelectedOrder(order);\n// \t\tsetModalIsOpen(true);\n// \t};\n\n// \treturn (\n//         <>\n        \n// \t\t<div>\n\t\t\t\n// \t\t\t<h1 className=\"order\">Order List</h1>\n// \t\t\t{error && <p>{error}</p>}\n// \t\t\t<table>\n// \t\t\t\t<thead>\n// \t\t\t\t\t<tr>\n// \t\t\t\t\t\t<th>Name</th>\n// \t\t\t\t\t\t<th>Gmail</th>\n// \t\t\t\t\t\t<th>Contact Number</th>\n// \t\t\t\t\t\t<th>Address</th>\n// \t\t\t\t\t\t<th>Deadline</th>\n// \t\t\t\t\t\t<th>Actions</th>\n// \t\t\t\t\t</tr>\n// \t\t\t\t</thead>\n// \t\t\t\t<tbody>\n// \t\t\t\t\t{orders.map((order) => (\n// \t\t\t\t\t\t<tr key={order._id}>\n// \t\t\t\t\t\t\t<td>{order.name}</td>\n// \t\t\t\t\t\t\t<td>{order.email}</td>\n// \t\t\t\t\t\t\t<td>{order.contactNumber}</td>\n// \t\t\t\t\t\t\t<td>{order.address}</td>\n// \t\t\t\t\t\t\t<td>{new Date(order.deadline).toLocaleDateString()}</td>\n// \t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t<button className=\"accept\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t\t<button className=\"reject\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t))}\n// \t\t\t\t</tbody>\n// \t\t\t</table>\n            \n\n// \t\t\t{modalIsOpen && (\n// \t\t\t\t<Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n// \t\t\t\t\t<h2>Order Confirmation</h2>\n// \t\t\t\t\t{selectedOrder && (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<p>Order ID: {selectedOrder._id}</p>\n// \t\t\t\t\t\t\t<p>Name: {selectedOrder.name}</p>\n// \t\t\t\t\t\t\t<p>Contact Number: {selectedOrder.contactNumber}</p>\n// \t\t\t\t\t\t\t<p>Address: {selectedOrder.address}</p>\n// \t\t\t\t\t\t\t<p>Deadline: {selectedOrder.deadline}</p>\n// \t\t\t\t\t\t\t<p>Are you sure you want to accept/reject this order?</p>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleAccept(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleReject(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</Modal>\n// \t\t\t)}\n// \t\t</div>\n//         </>\n// \t);\n// }\n\n// export default OrderList;\n\n\n\n// import React, { useRef } from 'react';\n// import emailjs from '@emailjs/browser';\n\n//  function OrderList  () {\n//   const form = useRef();\n\n//   const sendEmail = (e) => {\n//     e.preventDefault();\n\n//     emailjs\n//       .sendForm('service_7v4vmve', 'template_gswksyh', form.current, {\n//         publicKey: 'hpy_Ow2NKTCTlRRDq',\n//       })\n//       .then(\n//         () => {\n//           console.log('SUCCESS!');\n//         },\n//         (error) => {\n//           console.log('FAILED...', error.text);\n//         },\n//       );\n//   };\n\n//   return (\n//     <form ref={form} onSubmit={sendEmail}>\n//       <label>Name</label>\n//       <input type=\"text\" name=\"user_name\" />\n//       <label>Email</label>\n//       <input type=\"email\" name=\"user_email\" />\n//       <label>Message</label>\n//       <textarea name=\"message\" />\n//       <input type=\"submit\" value=\"Send\" />\n//     </form>\n//   );\n// };\n// export default OrderList;\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../Components/Modal\"; // Assuming Modal.js is correctly implemented and imported\nimport \"./productadmin.css\";\nimport AdminDashboard from \"./Dashboard\";\nimport emailjs from '@emailjs/browser';\n\nfunction OrderList() {\n    const [orders, setOrders] = useState([]);\n    const [error, setError] = useState(null);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [selectedOrder, setSelectedOrder] = useState(null);\n    const [isEmailFormOpen, setIsEmailFormOpen] = useState(false);\n    const form = useRef();\n\n    useEffect(() => {\n        // Fetch orders when component mounts\n        axios\n            .get(\"http://localhost:3003/order/orders\")\n            .then((response) => {\n                setOrders(response.data); // Set fetched orders to state\n            })\n            .catch((error) => {\n                console.error(\"Error fetching orders:\", error);\n                setError(\"Failed to fetch orders. Please try again later.\");\n            });\n    }, []);\n\n    const handleAccept = (orderId) => {\n        axios\n            .patch(`http://localhost:3003/order/orders/${orderId}`, {\n                status: \"accepted\",\n            })\n            .then((response) => {\n                console.log(\"Order accepted:\", response.data);\n                setOrders(\n                    orders.map((order) => (order._id === orderId ? response.data : order))\n                );\n                sendNotification(response.data);\n                setIsEmailFormOpen(true); // Open the email form after accepting the order\n            })\n            .catch((error) => {\n                console.error(\"Error accepting order:\", error);\n            });\n    };\n\n    const handleReject = (orderId) => {\n        axios\n            .patch(`http://localhost:3003/order/orders/${orderId}`, {\n                status: \"rejected\",\n            })\n            .then((response) => {\n                console.log(\"Order rejected:\", response.data);\n                setOrders(\n                    orders.map((order) => (order._id === orderId ? response.data : order))\n                );\n                sendNotification(response.data);\n            })\n            .catch((error) => {\n                console.error(\"Error rejecting order:\", error);\n            });\n    };\n\n    const sendNotification = (order) => {\n        axios\n            .post(\"http://localhost:3003/order/notify\", order)\n            .then((response) => {\n                console.log(\"Notification sent:\", response.data);\n            })\n            .catch((error) => {\n                console.error(\"Error sending notification:\", error);\n            });\n    };\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n\n        emailjs\n            .sendForm('service_7v4vmve', 'template_gswksyh', form.current, 'hpy_Ow2NKTCTlRRDq')\n            .then(\n                () => {\n                    console.log('SUCCESS!');\n                    setIsEmailFormOpen(false); // Close the email form after sending the email\n                },\n                (error) => {\n                    console.log('FAILED...', error.text);\n                },\n            );\n    };\n\n    const openModal = (order) => {\n        setSelectedOrder(order);\n        setModalIsOpen(true);\n    };\n\n    return (\n        <>\n            <div>\n                <h1 className=\"order\">Order List</h1>\n                {error && <p>{error}</p>}\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Contact Number</th>\n                            <th>Address</th>\n                            <th>Deadline</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map((order) => (\n                            <tr key={order._id}>\n                                <td>{order.name}</td>\n                                <td>{order.email}</td>\n                                <td>{order.contactNumber}</td>\n                                <td>{order.address}</td>\n                                <td>{new Date(order.deadline).toLocaleDateString()}</td>\n                                <td>\n                                    <button className=\"accept\" onClick={() => openModal(order)}>\n                                        Accept\n                                    </button>\n                                    <button className=\"reject\" onClick={() => openModal(order)}>\n                                        Reject\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n\n                {modalIsOpen && (\n                    <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n                        <h2>Order Confirmation</h2>\n                        {selectedOrder && (\n                            <div>\n                                <p>Order ID: {selectedOrder._id}</p>\n                                <p>Name: {selectedOrder.name}</p>\n                                <p>Contact Number: {selectedOrder.contactNumber}</p>\n                                <p>Address: {selectedOrder.address}</p>\n                                <p>Deadline: {selectedOrder.deadline}</p>\n                                <p>Are you sure you want to accept/reject this order?</p>\n                                <button\n                                    onClick={() => {\n                                        handleAccept(selectedOrder._id);\n                                        setModalIsOpen(false);\n                                    }}\n                                >\n                                    Accept\n                                </button>\n                                <button\n                                    onClick={() => {\n                                        handleReject(selectedOrder._id);\n                                        setModalIsOpen(false);\n                                    }}\n                                >\n                                    Reject\n                                </button>\n                            </div>\n                        )}\n                    </Modal>\n                )}\n\n                {isEmailFormOpen && (\n                    <form ref={form} onSubmit={sendEmail}>\n                        <h2>Send Email</h2>\n                        <label>Name</label>\n                        <input type=\"text\" name=\"user_name\" defaultValue={selectedOrder?.name} />\n                        <label>Email</label>\n                        <input type=\"email\" name=\"user_email\" defaultValue={selectedOrder?.email} />\n                        <label>Message</label>\n                        <textarea name=\"message\" />\n                        <input type=\"submit\" value=\"Send\" />\n                    </form>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default OrderList;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,qBAAqB,CAAC,CAAC;AACzC,OAAO,oBAAoB;AAC3B,OAAOC,cAAc,MAAM,aAAa;AACxC,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,S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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}