{"ast":null,"code":"var _jsxFileName = \"/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Modal from \"../Components/Modal\"; // Assuming Modal.js is correctly implemented and imported\n// import \"./productadmin.css\";\n// import AdminDashboard from \"./Dashboard\";\n// import emailjs from '@emailjs/browser';\n\n// function OrderList() {\n// \tconst [orders, setOrders] = useState([]);\n// \tconst [error, setError] = useState(null);\n// \tconst [modalIsOpen, setModalIsOpen] = useState(false);\n// \tconst [selectedOrder, setSelectedOrder] = useState(null);\n\n// \tuseEffect(() => {\n// \t\t// Fetch orders when component mounts\n// \t\taxios\n// \t\t\t.get(\"http://localhost:3003/order/orders\")\n// \t\t\t.then((response) => {\n// \t\t\t\tsetOrders(response.data); // Set fetched orders to state\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error fetching orders:\", error);\n// \t\t\t\tsetError(\"Failed to fetch orders. Please try again later.\");\n// \t\t\t});\n// \t}, []);\n\n// \tconst handleAccept = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"accepted\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order accepted:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error accepting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst handleReject = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"rejected\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order rejected:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error rejecting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst sendNotification = (order) => {\n// \t\taxios\n// \t\t\t.post(\"http://localhost:3003/order/notify\", order)\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Notification sent:\", response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error sending notification:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst openModal = (order) => {\n// \t\tsetSelectedOrder(order);\n// \t\tsetModalIsOpen(true);\n// \t};\n\n// \treturn (\n//         <>\n\n// \t\t<div>\n\n// \t\t\t<h1 className=\"order\">Order List</h1>\n// \t\t\t{error && <p>{error}</p>}\n// \t\t\t<table>\n// \t\t\t\t<thead>\n// \t\t\t\t\t<tr>\n// \t\t\t\t\t\t<th>Name</th>\n// \t\t\t\t\t\t<th>Gmail</th>\n// \t\t\t\t\t\t<th>Contact Number</th>\n// \t\t\t\t\t\t<th>Address</th>\n// \t\t\t\t\t\t<th>Deadline</th>\n// \t\t\t\t\t\t<th>Actions</th>\n// \t\t\t\t\t</tr>\n// \t\t\t\t</thead>\n// \t\t\t\t<tbody>\n// \t\t\t\t\t{orders.map((order) => (\n// \t\t\t\t\t\t<tr key={order._id}>\n// \t\t\t\t\t\t\t<td>{order.name}</td>\n// \t\t\t\t\t\t\t<td>{order.email}</td>\n// \t\t\t\t\t\t\t<td>{order.contactNumber}</td>\n// \t\t\t\t\t\t\t<td>{order.address}</td>\n// \t\t\t\t\t\t\t<td>{new Date(order.deadline).toLocaleDateString()}</td>\n// \t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t<button className=\"accept\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t\t<button className=\"reject\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t))}\n// \t\t\t\t</tbody>\n// \t\t\t</table>\n\n// \t\t\t{modalIsOpen && (\n// \t\t\t\t<Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n// \t\t\t\t\t<h2>Order Confirmation</h2>\n// \t\t\t\t\t{selectedOrder && (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<p>Order ID: {selectedOrder._id}</p>\n// \t\t\t\t\t\t\t<p>Name: {selectedOrder.name}</p>\n// \t\t\t\t\t\t\t<p>Contact Number: {selectedOrder.contactNumber}</p>\n// \t\t\t\t\t\t\t<p>Address: {selectedOrder.address}</p>\n// \t\t\t\t\t\t\t<p>Deadline: {selectedOrder.deadline}</p>\n// \t\t\t\t\t\t\t<p>Are you sure you want to accept/reject this order?</p>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleAccept(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleReject(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</Modal>\n// \t\t\t)}\n// \t\t</div>\n//         </>\n// \t);\n// }\n\n// export default OrderList;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./productadmin.css\";\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderList() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState(null);\n  const form = useRef();\n  useEffect(() => {\n    // Fetch orders when the component mounts\n    axios.get(\"http://localhost:3003/order/orders\").then(response => {\n      setOrders(response.data); // Set fetched orders to state\n    }).catch(error => {\n      console.error(\"Error fetching orders:\", error);\n      setError(\"Failed to fetch orders. Please try again later.\");\n    });\n  }, []);\n  const handleAccept = orderId => {\n    console.log(`Accepting order: ${orderId}`);\n    axios.patch(`http://localhost:3003/order/orders/${orderId}`, {\n      status: \"accepted\"\n    }).then(response => {\n      console.log(\"Order accepted:\", response.data);\n      setOrders(orders.map(order => order._id === orderId ? response.data : order));\n      sendAcceptEmail(response.data); // Send email after accepting the order\n    }).catch(error => {\n      console.error(\"Error accepting order:\", error);\n    });\n  };\n  const handleReject = orderId => {\n    console.log(`Rejecting order: ${orderId}`);\n    axios.patch(`http://localhost:3003/order/orders/${orderId}`, {\n      status: \"rejected\"\n    }).then(response => {\n      console.log(\"Order rejected:\", response.data);\n      setOrders(orders.map(order => order._id === orderId ? response.data : order));\n      sendRejectEmail(response.data); // Send email after rejecting the order\n    }).catch(error => {\n      console.error(\"Error rejecting order:\", error);\n    });\n  };\n  const sendEmail = templateParams => {\n    emailjs.send('service_7v4vmve', 'template_gswksyh', templateParams, 'hpy_Ow2NKTCTlRRDq').then(() => {\n      console.log('Email sent successfully!');\n    }, error => {\n      console.log('Failed to send email...', error.text);\n    });\n  };\n  const sendAcceptEmail = order => {\n    const templateParams = {\n      user_name: order.name,\n      user_email: order.email,\n      message: `Dear ${order.name},\\n\\nYour order has been accepted.\\n\\nThank you.`\n    };\n    sendEmail(templateParams);\n  };\n  const sendRejectEmail = order => {\n    const templateParams = {\n      user_name: order.name,\n      user_email: order.email,\n      message: `Dear ${order.name},\\n\\nWe regret to inform you that your order has been rejected.\\n\\nThank you.`\n    };\n    sendEmail(templateParams);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"order\",\n      children: \"Order List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.contactNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(order.deadline).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accept\",\n              onClick: () => handleAccept(order._id),\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reject\",\n              onClick: () => handleReject(order._id),\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 9\n  }, this);\n}\n_s(OrderList, \"1byzKU6vkYHUhGdKAGhDRUDwuGg=\");\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","emailjs","jsxDEV","_jsxDEV","OrderList","_s","orders","setOrders","error","setError","form","get","then","response","data","catch","console","handleAccept","orderId","log","patch","status","map","order","_id","sendAcceptEmail","handleReject","sendRejectEmail","sendEmail","templateParams","send","text","user_name","name","user_email","email","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","contactNumber","address","Date","deadline","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/OrderDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Modal from \"../Components/Modal\"; // Assuming Modal.js is correctly implemented and imported\n// import \"./productadmin.css\";\n// import AdminDashboard from \"./Dashboard\";\n// import emailjs from '@emailjs/browser';\n\n// function OrderList() {\n// \tconst [orders, setOrders] = useState([]);\n// \tconst [error, setError] = useState(null);\n// \tconst [modalIsOpen, setModalIsOpen] = useState(false);\n// \tconst [selectedOrder, setSelectedOrder] = useState(null);\n\n// \tuseEffect(() => {\n// \t\t// Fetch orders when component mounts\n// \t\taxios\n// \t\t\t.get(\"http://localhost:3003/order/orders\")\n// \t\t\t.then((response) => {\n// \t\t\t\tsetOrders(response.data); // Set fetched orders to state\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error fetching orders:\", error);\n// \t\t\t\tsetError(\"Failed to fetch orders. Please try again later.\");\n// \t\t\t});\n// \t}, []);\n\n// \tconst handleAccept = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"accepted\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order accepted:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error accepting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst handleReject = (orderId) => {\n// \t\taxios\n// \t\t\t.patch(`http://localhost:3003/order/orders/${orderId}`, {\n// \t\t\t\tstatus: \"rejected\",\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Order rejected:\", response.data);\n// \t\t\t\tsetOrders(\n// \t\t\t\t\torders.map((order) => (order._id === orderId ? response.data : order))\n// \t\t\t\t);\n// \t\t\t\tsendNotification(response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error rejecting order:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst sendNotification = (order) => {\n// \t\taxios\n// \t\t\t.post(\"http://localhost:3003/order/notify\", order)\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(\"Notification sent:\", response.data);\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tconsole.error(\"Error sending notification:\", error);\n// \t\t\t});\n// \t};\n\n// \tconst openModal = (order) => {\n// \t\tsetSelectedOrder(order);\n// \t\tsetModalIsOpen(true);\n// \t};\n\n// \treturn (\n//         <>\n        \n// \t\t<div>\n\t\t\t\n// \t\t\t<h1 className=\"order\">Order List</h1>\n// \t\t\t{error && <p>{error}</p>}\n// \t\t\t<table>\n// \t\t\t\t<thead>\n// \t\t\t\t\t<tr>\n// \t\t\t\t\t\t<th>Name</th>\n// \t\t\t\t\t\t<th>Gmail</th>\n// \t\t\t\t\t\t<th>Contact Number</th>\n// \t\t\t\t\t\t<th>Address</th>\n// \t\t\t\t\t\t<th>Deadline</th>\n// \t\t\t\t\t\t<th>Actions</th>\n// \t\t\t\t\t</tr>\n// \t\t\t\t</thead>\n// \t\t\t\t<tbody>\n// \t\t\t\t\t{orders.map((order) => (\n// \t\t\t\t\t\t<tr key={order._id}>\n// \t\t\t\t\t\t\t<td>{order.name}</td>\n// \t\t\t\t\t\t\t<td>{order.email}</td>\n// \t\t\t\t\t\t\t<td>{order.contactNumber}</td>\n// \t\t\t\t\t\t\t<td>{order.address}</td>\n// \t\t\t\t\t\t\t<td>{new Date(order.deadline).toLocaleDateString()}</td>\n// \t\t\t\t\t\t\t<td>\n// \t\t\t\t\t\t\t\t<button className=\"accept\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t\t<button className=\"reject\" onClick={() => openModal(order)}>\n// \t\t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</td>\n// \t\t\t\t\t\t</tr>\n// \t\t\t\t\t))}\n// \t\t\t\t</tbody>\n// \t\t\t</table>\n            \n\n// \t\t\t{modalIsOpen && (\n// \t\t\t\t<Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n// \t\t\t\t\t<h2>Order Confirmation</h2>\n// \t\t\t\t\t{selectedOrder && (\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<p>Order ID: {selectedOrder._id}</p>\n// \t\t\t\t\t\t\t<p>Name: {selectedOrder.name}</p>\n// \t\t\t\t\t\t\t<p>Contact Number: {selectedOrder.contactNumber}</p>\n// \t\t\t\t\t\t\t<p>Address: {selectedOrder.address}</p>\n// \t\t\t\t\t\t\t<p>Deadline: {selectedOrder.deadline}</p>\n// \t\t\t\t\t\t\t<p>Are you sure you want to accept/reject this order?</p>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleAccept(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tAccept\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\thandleReject(selectedOrder._id);\n// \t\t\t\t\t\t\t\t\tsetModalIsOpen(false);\n// \t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tReject\n// \t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t)}\n// \t\t\t\t</Modal>\n// \t\t\t)}\n// \t\t</div>\n//         </>\n// \t);\n// }\n\n// export default OrderList;\n\n\n\n\n\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./productadmin.css\";\nimport emailjs from '@emailjs/browser';\n\nfunction OrderList() {\n    const [orders, setOrders] = useState([]);\n    const [error, setError] = useState(null);\n    const form = useRef();\n\n    useEffect(() => {\n        // Fetch orders when the component mounts\n        axios\n            .get(\"http://localhost:3003/order/orders\")\n            .then((response) => {\n                setOrders(response.data); // Set fetched orders to state\n            })\n            .catch((error) => {\n                console.error(\"Error fetching orders:\", error);\n                setError(\"Failed to fetch orders. Please try again later.\");\n            });\n    }, []);\n\n    const handleAccept = (orderId) => {\n        console.log(`Accepting order: ${orderId}`);\n        axios\n            .patch(`http://localhost:3003/order/orders/${orderId}`, {\n                status: \"accepted\",\n            })\n            .then((response) => {\n                console.log(\"Order accepted:\", response.data);\n                setOrders(\n                    orders.map((order) => (order._id === orderId ? response.data : order))\n                );\n                sendAcceptEmail(response.data); // Send email after accepting the order\n            })\n            .catch((error) => {\n                console.error(\"Error accepting order:\", error);\n            });\n    };\n\n    const handleReject = (orderId) => {\n        console.log(`Rejecting order: ${orderId}`);\n        axios\n            .patch(`http://localhost:3003/order/orders/${orderId}`, {\n                status: \"rejected\",\n            })\n            .then((response) => {\n                console.log(\"Order rejected:\", response.data);\n                setOrders(\n                    orders.map((order) => (order._id === orderId ? response.data : order))\n                );\n                sendRejectEmail(response.data); // Send email after rejecting the order\n            })\n            .catch((error) => {\n                console.error(\"Error rejecting order:\", error);\n            });\n    };\n\n    const sendEmail = (templateParams) => {\n        emailjs\n            .send('service_7v4vmve', 'template_gswksyh', templateParams, 'hpy_Ow2NKTCTlRRDq')\n            .then(\n                () => {\n                    console.log('Email sent successfully!');\n                },\n                (error) => {\n                    console.log('Failed to send email...', error.text);\n                }\n            );\n    };\n\n    const sendAcceptEmail = (order) => {\n        const templateParams = {\n            user_name: order.name,\n            user_email: order.email,\n            message: `Dear ${order.name},\\n\\nYour order has been accepted.\\n\\nThank you.`\n        };\n        sendEmail(templateParams);\n    };\n\n    const sendRejectEmail = (order) => {\n        const templateParams = {\n            user_name: order.name,\n            user_email: order.email,\n            message: `Dear ${order.name},\\n\\nWe regret to inform you that your order has been rejected.\\n\\nThank you.`\n        };\n        sendEmail(templateParams);\n    };\n\n    return (\n        <div>\n            <h1 className=\"order\">Order List</h1>\n            {error && <p>{error}</p>}\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Contact Number</th>\n                        <th>Address</th>\n                        <th>Deadline</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map((order) => (\n                        <tr key={order._id}>\n                            <td>{order.name}</td>\n                            <td>{order.email}</td>\n                            <td>{order.contactNumber}</td>\n                            <td>{order.address}</td>\n                            <td>{new Date(order.deadline).toLocaleDateString()}</td>\n                            <td>\n                                <button className=\"accept\" onClick={() => handleAccept(order._id)}>\n                                    Accept\n                                </button>\n                                <button className=\"reject\" onClick={() => handleReject(order._id)}>\n                                    Reject\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default OrderList;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMa,IAAI,GAAGX,MAAM,CAAC,CAAC;EAErBD,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CACAW,GAAG,CAAC,oCAAoC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAK;MAChBN,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAEP,KAAK,IAAK;MACdQ,OAAO,CAACR,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,iDAAiD,CAAC;IAC/D,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,YAAY,GAAIC,OAAO,IAAK;IAC9BF,OAAO,CAACG,GAAG,CAAE,oBAAmBD,OAAQ,EAAC,CAAC;IAC1ClB,KAAK,CACAoB,KAAK,CAAE,sCAAqCF,OAAQ,EAAC,EAAE;MACpDG,MAAM,EAAE;IACZ,CAAC,CAAC,CACDT,IAAI,CAAEC,QAAQ,IAAK;MAChBG,OAAO,CAACG,GAAG,CAAC,iBAAiB,EAAEN,QAAQ,CAACC,IAAI,CAAC;MAC7CP,SAAS,CACLD,MAAM,CAACgB,GAAG,CAAEC,KAAK,IAAMA,KAAK,CAACC,GAAG,KAAKN,OAAO,GAAGL,QAAQ,CAACC,IAAI,GAAGS,KAAM,CACzE,CAAC;MACDE,eAAe,CAACZ,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CACDC,KAAK,CAAEP,KAAK,IAAK;MACdQ,OAAO,CAACR,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACV,CAAC;EAED,MAAMkB,YAAY,GAAIR,OAAO,IAAK;IAC9BF,OAAO,CAACG,GAAG,CAAE,oBAAmBD,OAAQ,EAAC,CAAC;IAC1ClB,KAAK,CACAoB,KAAK,CAAE,sCAAqCF,OAAQ,EAAC,EAAE;MACpDG,MAAM,EAAE;IACZ,CAAC,CAAC,CACDT,IAAI,CAAEC,QAAQ,IAAK;MAChBG,OAAO,CAACG,GAAG,CAAC,iBAAiB,EAAEN,QAAQ,CAACC,IAAI,CAAC;MAC7CP,SAAS,CACLD,MAAM,CAACgB,GAAG,CAAEC,KAAK,IAAMA,KAAK,CAACC,GAAG,KAAKN,OAAO,GAAGL,QAAQ,CAACC,IAAI,GAAGS,KAAM,CACzE,CAAC;MACDI,eAAe,CAACd,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CACDC,KAAK,CAAEP,KAAK,IAAK;MACdQ,OAAO,CAACR,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACV,CAAC;EAED,MAAMoB,SAAS,GAAIC,cAAc,IAAK;IAClC5B,OAAO,CACF6B,IAAI,CAAC,iBAAiB,EAAE,kBAAkB,EAAED,cAAc,EAAE,mBAAmB,CAAC,CAChFjB,IAAI,CACD,MAAM;MACFI,OAAO,CAACG,GAAG,CAAC,0BAA0B,CAAC;IAC3C,CAAC,EACAX,KAAK,IAAK;MACPQ,OAAO,CAACG,GAAG,CAAC,yBAAyB,EAAEX,KAAK,CAACuB,IAAI,CAAC;IACtD,CACJ,CAAC;EACT,CAAC;EAED,MAAMN,eAAe,GAAIF,KAAK,IAAK;IAC/B,MAAMM,cAAc,GAAG;MACnBG,SAAS,EAAET,KAAK,CAACU,IAAI;MACrBC,UAAU,EAAEX,KAAK,CAACY,KAAK;MACvBC,OAAO,EAAG,QAAOb,KAAK,CAACU,IAAK;IAChC,CAAC;IACDL,SAAS,CAACC,cAAc,CAAC;EAC7B,CAAC;EAED,MAAMF,eAAe,GAAIJ,KAAK,IAAK;IAC/B,MAAMM,cAAc,GAAG;MACnBG,SAAS,EAAET,KAAK,CAACU,IAAI;MACrBC,UAAU,EAAEX,KAAK,CAACY,KAAK;MACvBC,OAAO,EAAG,QAAOb,KAAK,CAACU,IAAK;IAChC,CAAC;IACDL,SAAS,CAACC,cAAc,CAAC;EAC7B,CAAC;EAED,oBACI1B,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAImC,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpClC,KAAK,iBAAIL,OAAA;MAAAkC,QAAA,EAAI7B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvC,OAAA;MAAAkC,QAAA,gBACIlC,OAAA;QAAAkC,QAAA,eACIlC,OAAA;UAAAkC,QAAA,gBACIlC,OAAA;YAAAkC,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbvC,OAAA;YAAAkC,QAAA,EAAI;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdvC,OAAA;YAAAkC,QAAA,EAAI;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBvC,OAAA;YAAAkC,QAAA,EAAI;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBvC,OAAA;YAAAkC,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBvC,OAAA;YAAAkC,QAAA,EAAI;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRvC,OAAA;QAAAkC,QAAA,EACK/B,MAAM,CAACgB,GAAG,CAAEC,KAAK,iBACdpB,OAAA;UAAAkC,QAAA,gBACIlC,OAAA;YAAAkC,QAAA,EAAKd,KAAK,CAACU;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBvC,OAAA;YAAAkC,QAAA,EAAKd,KAAK,CAACY;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBvC,OAAA;YAAAkC,QAAA,EAAKd,KAAK,CAACoB;UAAa;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9BvC,OAAA;YAAAkC,QAAA,EAAKd,KAAK,CAACqB;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBvC,OAAA;YAAAkC,QAAA,EAAK,IAAIQ,IAAI,CAACtB,KAAK,CAACuB,QAAQ,CAAC,CAACC,kBAAkB,CAAC;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxDvC,OAAA;YAAAkC,QAAA,gBACIlC,OAAA;cAAQmC,SAAS,EAAC,QAAQ;cAACU,OAAO,EAAEA,CAAA,KAAM/B,YAAY,CAACM,KAAK,CAACC,GAAG,CAAE;cAAAa,QAAA,EAAC;YAEnE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTvC,OAAA;cAAQmC,SAAS,EAAC,QAAQ;cAACU,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAACH,KAAK,CAACC,GAAG,CAAE;cAAAa,QAAA,EAAC;YAEnE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA,GAbAnB,KAAK,CAACC,GAAG;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcd,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACrC,EAAA,CA1HQD,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AA4HlB,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}