{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\n// import Modal from '../Components/Modal'; // Assuming Modal.js is in the correct directory\n// import './productadmin.css';\n// import AdminDashboard from './Dashboard';\n\n// function Admin() {\n//     const [products, setProducts] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//     const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n//     const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n//     const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n//     const [editedCategoryName, setEditedCategoryName] = useState('');\n//     const [editedProductName, setEditedProductName] = useState('');\n//     const [editedDescription, setEditedDescription] = useState('');\n\n//     useEffect(() => {\n//         axios.get('http://localhost:3003/image/getImg')\n//             .then(response => setProducts(response.data))\n//             .catch(error => {\n//                 console.error('Error fetching products:', error);\n//                 setError('An error occurred while fetching products. Please try again later.');\n//             });\n//     }, []);\n\n//     const handleEdit = (product) => {\n//         setSelectedProduct(product);\n//         setEditConfirmationOpen(true);\n//     };\n\n//     const handleEditConfirm = () => {\n//         setIsEditModalOpen(true);\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditCancel = () => {\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditSave = (e) => {\n//         e.preventDefault();\n//         // Your logic to save edited product details\n//         setIsEditModalOpen(false); // Close the edit modal after saving\n//     };\n\n//     const handleDelete = (productId) => {\n//         setDeleteConfirmationOpen(true);\n//     };\n\n//     const handleDeleteConfirm = () => {\n//         // Your logic to confirm and delete product\n//         setDeleteConfirmationOpen(false); // Close the delete confirmation modal\n//     };\n\n//     const handleDeleteCancel = () => {\n//         setDeleteConfirmationOpen(false);\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setSelectedProduct({\n//             ...selectedProduct,\n//             [name]: value\n//         });\n//     };\n\n//     return (\n//         <>\n//         <div>\n\n//             {error ? (\n//                 <div className=\"error\">Error: {error}</div>\n//             ) : (\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             {/* <th>Id</th> */}\n//                             <th>Category Name</th>\n//                             <th>Product Name</th>\n//                             <th>Description</th>\n//                             <th>Image</th>\n//                             <th>Edit</th>\n//                             <th>Delete</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {products.map(product => (\n//                             <tr key={product._id}>\n//                                 {/* <td>{product._id}</td> */}\n//                                 <td>{product.CategoryName}</td>\n//                                 <td>{product.ProductName}</td>\n//                                 <td>{product.Description}</td>\n//                                 <td>\n//                                     <CloudinaryContext cloudName=\"your_cloud_name\">\n//                                         <Image publicId={product.imageUrl} alt={product.ProductName} style={{ height:\"60px\",width:\"60px\"}}>\n//                                             <Transformation width=\"50\" crop=\"scale\" />\n//                                         </Image>\n//                                     </CloudinaryContext>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"edit\" onClick={() => handleEdit(product)}>Edit</button>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"delete\" onClick={() => handleDelete(product._id)}>Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             )}\n\n//             <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n//                 <h2>Edit Product</h2>\n//                 {selectedProduct && (\n//                     <form onSubmit={handleEditSave}>\n//                         <label>\n//                             Category Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"CategoryName\"\n//                                 value={editedCategoryName}\n//                                 onChange={(e) => setEditedCategoryName(e.target.value)}\n//                             />\n//                         </label>\n//                         <label>\n//                             Product Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"ProductName\"\n//                                 value={editedProductName}\n//                                 onChange={(e) => setEditedProductName(e.target.value)}\n//                             />\n//                         </label>\n//                         <label>\n//                             Description:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"Description\"\n//                                 value={editedDescription}\n//                                 onChange={(e) => setEditedDescription(e.target.value)}\n//                             />\n//                         </label>\n//                         <button type=\"submit\">Save</button>\n//                         <button type=\"button\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n//                     </form>\n//                 )}\n//             </Modal>\n\n//             <div className=\"container-box\">\n//                 {isEditConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleEditCancel}>&times;</span>\n//                             <h2>Confirm Edit</h2>\n//                             <p>Are you sure you want to edit this product?</p>\n//                             <button onClick={handleEditConfirm}>Yes</button>\n//                             <button onClick={handleEditCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isDeleteConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleDeleteCancel}>&times;</span>\n//                             <h2>Confirm Delete</h2>\n//                             <p>Are you sure you want to delete this product?</p>\n//                             <button onClick={handleDeleteConfirm}>Yes</button>\n//                             <button onClick={handleDeleteCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isEditModalOpen && selectedProduct && (\n//                     <div className=\"edit-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n//                             <h2>Edit Product</h2>\n//                             <form onSubmit={handleEditSave}>\n//                                 <label>Category Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editedCategoryName}\n//                                     onChange={(e) => setEditedCategoryName(e.target.value)}\n//                                 />\n//                                 <label>Product Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editedProductName}\n//                                     onChange={(e) => setEditedProductName(e.target.value)}\n//                                 />\n//                                 <label>Description:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editedDescription}\n//                                     onChange={(e) => setEditedDescription(e.target.value)}\n//                                 />\n//                                 <button type=\"submit\">Save</button>\n//                             </form>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n\n//         </div>\n//         </>\n//     );\n// }\n\n// export default Admin;","map":{"version":3,"names":[],"sources":["/home/uki-student/Desktop/ari-pro/client/src/Pages/product.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Image, Transformation, CloudinaryContext } from 'cloudinary-react';\n// import Modal from '../Components/Modal'; // Assuming Modal.js is in the correct directory\n// import './productadmin.css';\n// import AdminDashboard from './Dashboard';\n\n// function Admin() {\n//     const [products, setProducts] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [modalIsOpen, setModalIsOpen] = useState(false);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//     const [isEditConfirmationOpen, setEditConfirmationOpen] = useState(false);\n//     const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n//     const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n//     const [editedCategoryName, setEditedCategoryName] = useState('');\n//     const [editedProductName, setEditedProductName] = useState('');\n//     const [editedDescription, setEditedDescription] = useState('');\n\n//     useEffect(() => {\n//         axios.get('http://localhost:3003/image/getImg')\n//             .then(response => setProducts(response.data))\n//             .catch(error => {\n//                 console.error('Error fetching products:', error);\n//                 setError('An error occurred while fetching products. Please try again later.');\n//             });\n//     }, []);\n\n//     const handleEdit = (product) => {\n//         setSelectedProduct(product);\n//         setEditConfirmationOpen(true);\n//     };\n\n//     const handleEditConfirm = () => {\n//         setIsEditModalOpen(true);\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditCancel = () => {\n//         setEditConfirmationOpen(false);\n//     };\n\n//     const handleEditSave = (e) => {\n//         e.preventDefault();\n//         // Your logic to save edited product details\n//         setIsEditModalOpen(false); // Close the edit modal after saving\n//     };\n\n//     const handleDelete = (productId) => {\n//         setDeleteConfirmationOpen(true);\n//     };\n\n//     const handleDeleteConfirm = () => {\n//         // Your logic to confirm and delete product\n//         setDeleteConfirmationOpen(false); // Close the delete confirmation modal\n//     };\n\n//     const handleDeleteCancel = () => {\n//         setDeleteConfirmationOpen(false);\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setSelectedProduct({\n//             ...selectedProduct,\n//             [name]: value\n//         });\n//     };\n\n//     return (\n//         <>\n//         <div>\n            \n//             {error ? (\n//                 <div className=\"error\">Error: {error}</div>\n//             ) : (\n//                 <table>\n//                     <thead>\n//                         <tr>\n//                             {/* <th>Id</th> */}\n//                             <th>Category Name</th>\n//                             <th>Product Name</th>\n//                             <th>Description</th>\n//                             <th>Image</th>\n//                             <th>Edit</th>\n//                             <th>Delete</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {products.map(product => (\n//                             <tr key={product._id}>\n//                                 {/* <td>{product._id}</td> */}\n//                                 <td>{product.CategoryName}</td>\n//                                 <td>{product.ProductName}</td>\n//                                 <td>{product.Description}</td>\n//                                 <td>\n//                                     <CloudinaryContext cloudName=\"your_cloud_name\">\n//                                         <Image publicId={product.imageUrl} alt={product.ProductName} style={{ height:\"60px\",width:\"60px\"}}>\n//                                             <Transformation width=\"50\" crop=\"scale\" />\n//                                         </Image>\n//                                     </CloudinaryContext>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"edit\" onClick={() => handleEdit(product)}>Edit</button>\n//                                 </td>\n//                                 <td>\n//                                     <button className=\"delete\" onClick={() => handleDelete(product._id)}>Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             )}\n\n//             <Modal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)}>\n//                 <h2>Edit Product</h2>\n//                 {selectedProduct && (\n//                     <form onSubmit={handleEditSave}>\n//                         <label>\n//                             Category Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"CategoryName\"\n//                                 value={editedCategoryName}\n//                                 onChange={(e) => setEditedCategoryName(e.target.value)}\n//                             />\n//                         </label>\n//                         <label>\n//                             Product Name:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"ProductName\"\n//                                 value={editedProductName}\n//                                 onChange={(e) => setEditedProductName(e.target.value)}\n//                             />\n//                         </label>\n//                         <label>\n//                             Description:\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"Description\"\n//                                 value={editedDescription}\n//                                 onChange={(e) => setEditedDescription(e.target.value)}\n//                             />\n//                         </label>\n//                         <button type=\"submit\">Save</button>\n//                         <button type=\"button\" onClick={() => setModalIsOpen(false)}>Cancel</button>\n//                     </form>\n//                 )}\n//             </Modal>\n\n//             <div className=\"container-box\">\n//                 {isEditConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleEditCancel}>&times;</span>\n//                             <h2>Confirm Edit</h2>\n//                             <p>Are you sure you want to edit this product?</p>\n//                             <button onClick={handleEditConfirm}>Yes</button>\n//                             <button onClick={handleEditCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isDeleteConfirmationOpen && (\n//                     <div className=\"confirmation-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={handleDeleteCancel}>&times;</span>\n//                             <h2>Confirm Delete</h2>\n//                             <p>Are you sure you want to delete this product?</p>\n//                             <button onClick={handleDeleteConfirm}>Yes</button>\n//                             <button onClick={handleDeleteCancel}>No</button>\n//                         </div>\n//                     </div>\n//                 )}\n//                 {isEditModalOpen && selectedProduct && (\n//                     <div className=\"edit-modal\">\n//                         <div className=\"modal-content\">\n//                             <span className=\"close\" onClick={() => setIsEditModalOpen(false)}>&times;</span>\n//                             <h2>Edit Product</h2>\n//                             <form onSubmit={handleEditSave}>\n//                                 <label>Category Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editedCategoryName}\n//                                     onChange={(e) => setEditedCategoryName(e.target.value)}\n//                                 />\n//                                 <label>Product Name:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editedProductName}\n//                                     onChange={(e) => setEditedProductName(e.target.value)}\n//                                 />\n//                                 <label>Description:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={editedDescription}\n//                                     onChange={(e) => setEditedDescription(e.target.value)}\n//                                 />\n//                                 <button type=\"submit\">Save</button>\n//                             </form>\n//                         </div>\n//                     </div>\n//                 )}\n//             </div>\n            \n//         </div>\n//         </>\n//     );\n// }\n\n// export default Admin;\n\n\n\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}